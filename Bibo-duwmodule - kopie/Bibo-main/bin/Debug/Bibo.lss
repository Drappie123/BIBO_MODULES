
bin\Debug\Bibo.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000006a  00800200  000020b0  00002164  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000020b0  00000000  00000000  000000b4  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000039  0080026a  0080026a  000021ce  2**0
                  ALLOC
  3 .fuse         00000003  00820000  00820000  000021ce  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  4 .comment      00000012  00000000  00000000  000021d1  2**0
                  CONTENTS, READONLY
  5 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000021e4  2**2
                  CONTENTS, READONLY, OCTETS
  6 .debug_aranges 00000258  00000000  00000000  00002228  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
  7 .debug_info   00003aa3  00000000  00000000  00002480  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
  8 .debug_abbrev 00001883  00000000  00000000  00005f23  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
  9 .debug_line   00004085  00000000  00000000  000077a6  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 10 .debug_frame  00000884  00000000  00000000  0000b82c  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 11 .debug_str    00000d5a  00000000  00000000  0000c0b0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 12 .debug_line_str 000002c5  00000000  00000000  0000ce0a  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_loclists 00000a6d  00000000  00000000  0000d0cf  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_rnglists 0000003e  00000000  00000000  0000db3c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 a2 00 	jmp	0x144	; 0x144 <__ctors_end>
       4:	0c 94 8a 01 	jmp	0x314	; 0x314 <__vector_1>
       8:	0c 94 c3 00 	jmp	0x186	; 0x186 <__bad_interrupt>
       c:	0c 94 c3 00 	jmp	0x186	; 0x186 <__bad_interrupt>
      10:	0c 94 c3 00 	jmp	0x186	; 0x186 <__bad_interrupt>
      14:	0c 94 c3 00 	jmp	0x186	; 0x186 <__bad_interrupt>
      18:	0c 94 c3 00 	jmp	0x186	; 0x186 <__bad_interrupt>
      1c:	0c 94 c3 00 	jmp	0x186	; 0x186 <__bad_interrupt>
      20:	0c 94 c3 00 	jmp	0x186	; 0x186 <__bad_interrupt>
      24:	0c 94 c3 00 	jmp	0x186	; 0x186 <__bad_interrupt>
      28:	0c 94 c3 00 	jmp	0x186	; 0x186 <__bad_interrupt>
      2c:	0c 94 c3 00 	jmp	0x186	; 0x186 <__bad_interrupt>
      30:	0c 94 c3 00 	jmp	0x186	; 0x186 <__bad_interrupt>
      34:	0c 94 c3 00 	jmp	0x186	; 0x186 <__bad_interrupt>
      38:	0c 94 c3 00 	jmp	0x186	; 0x186 <__bad_interrupt>
      3c:	0c 94 be 09 	jmp	0x137c	; 0x137c <__vector_15>
      40:	0c 94 c3 00 	jmp	0x186	; 0x186 <__bad_interrupt>
      44:	0c 94 c3 00 	jmp	0x186	; 0x186 <__bad_interrupt>
      48:	0c 94 c3 00 	jmp	0x186	; 0x186 <__bad_interrupt>
      4c:	0c 94 c3 00 	jmp	0x186	; 0x186 <__bad_interrupt>
      50:	0c 94 c3 00 	jmp	0x186	; 0x186 <__bad_interrupt>
      54:	0c 94 c3 00 	jmp	0x186	; 0x186 <__bad_interrupt>
      58:	0c 94 c3 00 	jmp	0x186	; 0x186 <__bad_interrupt>
      5c:	0c 94 7f 09 	jmp	0x12fe	; 0x12fe <__vector_23>
      60:	0c 94 c3 00 	jmp	0x186	; 0x186 <__bad_interrupt>
      64:	0c 94 c3 00 	jmp	0x186	; 0x186 <__bad_interrupt>
      68:	0c 94 c3 00 	jmp	0x186	; 0x186 <__bad_interrupt>
      6c:	0c 94 c3 00 	jmp	0x186	; 0x186 <__bad_interrupt>
      70:	0c 94 c3 00 	jmp	0x186	; 0x186 <__bad_interrupt>
      74:	0c 94 c3 00 	jmp	0x186	; 0x186 <__bad_interrupt>
      78:	0c 94 c3 00 	jmp	0x186	; 0x186 <__bad_interrupt>
      7c:	0c 94 c3 00 	jmp	0x186	; 0x186 <__bad_interrupt>
      80:	0c 94 c3 00 	jmp	0x186	; 0x186 <__bad_interrupt>
      84:	0c 94 c3 00 	jmp	0x186	; 0x186 <__bad_interrupt>
      88:	0c 94 c3 00 	jmp	0x186	; 0x186 <__bad_interrupt>
      8c:	0c 94 c3 00 	jmp	0x186	; 0x186 <__bad_interrupt>
      90:	0c 94 c3 00 	jmp	0x186	; 0x186 <__bad_interrupt>
      94:	0c 94 c3 00 	jmp	0x186	; 0x186 <__bad_interrupt>
      98:	0c 94 c3 00 	jmp	0x186	; 0x186 <__bad_interrupt>
      9c:	0c 94 c3 00 	jmp	0x186	; 0x186 <__bad_interrupt>
      a0:	0c 94 c3 00 	jmp	0x186	; 0x186 <__bad_interrupt>
      a4:	0c 94 fb 02 	jmp	0x5f6	; 0x5f6 <__vector_41>
      a8:	0c 94 c3 00 	jmp	0x186	; 0x186 <__bad_interrupt>
      ac:	0c 94 c3 00 	jmp	0x186	; 0x186 <__bad_interrupt>
      b0:	0c 94 c3 00 	jmp	0x186	; 0x186 <__bad_interrupt>
      b4:	0c 94 c3 00 	jmp	0x186	; 0x186 <__bad_interrupt>
      b8:	0c 94 4f 03 	jmp	0x69e	; 0x69e <__vector_46>
      bc:	0c 94 c3 00 	jmp	0x186	; 0x186 <__bad_interrupt>
      c0:	0c 94 c3 00 	jmp	0x186	; 0x186 <__bad_interrupt>
      c4:	0c 94 c3 00 	jmp	0x186	; 0x186 <__bad_interrupt>
      c8:	0c 94 fd 09 	jmp	0x13fa	; 0x13fa <__vector_50>
      cc:	0c 94 c3 00 	jmp	0x186	; 0x186 <__bad_interrupt>
      d0:	0c 94 c3 00 	jmp	0x186	; 0x186 <__bad_interrupt>
      d4:	0c 94 c3 00 	jmp	0x186	; 0x186 <__bad_interrupt>
      d8:	0c 94 c3 00 	jmp	0x186	; 0x186 <__bad_interrupt>
      dc:	0c 94 c3 00 	jmp	0x186	; 0x186 <__bad_interrupt>
      e0:	0c 94 c3 00 	jmp	0x186	; 0x186 <__bad_interrupt>

000000e4 <__trampolines_start>:
      e4:	0c 94 e9 02 	jmp	0x5d2	; 0x5d2 <.L28>
      e8:	0c 94 d1 02 	jmp	0x5a2	; 0x5a2 <.L32>
      ec:	0c 94 dd 02 	jmp	0x5ba	; 0x5ba <.L30>
      f0:	0c 94 74 09 	jmp	0x12e8	; 0x12e8 <.L40>
      f4:	0c 94 68 09 	jmp	0x12d0	; 0x12d0 <.L42>
      f8:	0c 94 cc 08 	jmp	0x1198	; 0x1198 <.L55>
      fc:	0c 94 cb 02 	jmp	0x596	; 0x596 <.L33>
     100:	0c 94 44 09 	jmp	0x1288	; 0x1288 <.L45>
     104:	0c 94 14 09 	jmp	0x1228	; 0x1228 <.L49>
     108:	0c 94 fc 08 	jmp	0x11f8	; 0x11f8 <.L51>
     10c:	0c 94 e4 08 	jmp	0x11c8	; 0x11c8 <.L53>
     110:	0c 94 d7 02 	jmp	0x5ae	; 0x5ae <.L31>
     114:	0c 94 5c 09 	jmp	0x12b8	; 0x12b8 <.L43>
     118:	0c 94 38 09 	jmp	0x1270	; 0x1270 <.L46>
     11c:	0c 94 20 09 	jmp	0x1240	; 0x1240 <.L48>
     120:	0c 94 e3 02 	jmp	0x5c6	; 0x5c6 <.L29>
     124:	0c 94 d8 08 	jmp	0x11b0	; 0x11b0 <.L54>
     128:	0c 94 c5 02 	jmp	0x58a	; 0x58a <.L34>
     12c:	0c 94 ef 02 	jmp	0x5de	; 0x5de <.L27>
     130:	0c 94 2c 09 	jmp	0x1258	; 0x1258 <.L47>
     134:	0c 94 08 09 	jmp	0x1210	; 0x1210 <.L50>
     138:	0c 94 f5 02 	jmp	0x5ea	; 0x5ea <.L25>
     13c:	0c 94 50 09 	jmp	0x12a0	; 0x12a0 <.L44>
     140:	0c 94 f0 08 	jmp	0x11e0	; 0x11e0 <.L52>

00000144 <__ctors_end>:
     144:	11 24       	eor	r1, r1
     146:	1f be       	out	0x3f, r1	; 63
     148:	cf ef       	ldi	r28, 0xFF	; 255
     14a:	d1 e2       	ldi	r29, 0x21	; 33
     14c:	de bf       	out	0x3e, r29	; 62
     14e:	cd bf       	out	0x3d, r28	; 61
     150:	00 e0       	ldi	r16, 0x00	; 0
     152:	0c bf       	out	0x3c, r16	; 60

00000154 <__do_copy_data>:
     154:	12 e0       	ldi	r17, 0x02	; 2

00000156 <.Loc.1>:
     156:	a0 e0       	ldi	r26, 0x00	; 0

00000158 <.Loc.2>:
     158:	b2 e0       	ldi	r27, 0x02	; 2

0000015a <.Loc.3>:
     15a:	e0 eb       	ldi	r30, 0xB0	; 176

0000015c <.Loc.4>:
     15c:	f0 e2       	ldi	r31, 0x20	; 32

0000015e <.Loc.5>:
     15e:	00 e0       	ldi	r16, 0x00	; 0

00000160 <.Loc.6>:
     160:	0b bf       	out	0x3b, r16	; 59

00000162 <.Loc.7>:
     162:	02 c0       	rjmp	.+4      	; 0x168 <.L__do_copy_data_start>

00000164 <.L__do_copy_data_loop>:
     164:	07 90       	elpm	r0, Z+

00000166 <.Loc.9>:
     166:	0d 92       	st	X+, r0

00000168 <.L__do_copy_data_start>:
     168:	aa 36       	cpi	r26, 0x6A	; 106

0000016a <.Loc.11>:
     16a:	b1 07       	cpc	r27, r17

0000016c <.Loc.12>:
     16c:	d9 f7       	brne	.-10     	; 0x164 <.L__do_copy_data_loop>

0000016e <__do_clear_bss>:
     16e:	22 e0       	ldi	r18, 0x02	; 2

00000170 <.Loc.1>:
     170:	aa e6       	ldi	r26, 0x6A	; 106

00000172 <.Loc.2>:
     172:	b2 e0       	ldi	r27, 0x02	; 2

00000174 <.Loc.3>:
     174:	01 c0       	rjmp	.+2      	; 0x178 <.Loc.5>

00000176 <.Loc.4>:
     176:	1d 92       	st	X+, r1

00000178 <.Loc.5>:
     178:	a3 3a       	cpi	r26, 0xA3	; 163

0000017a <.Loc.6>:
     17a:	b2 07       	cpc	r27, r18

0000017c <.Loc.7>:
     17c:	e1 f7       	brne	.-8      	; 0x176 <.Loc.4>

0000017e <L0^A>:
     17e:	0e 94 6b 07 	call	0xed6	; 0xed6 <main>
     182:	0c 94 3e 10 	jmp	0x207c	; 0x207c <_exit>

00000186 <__bad_interrupt>:
     186:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000018a <donk_init>:
     18a:	ea e0       	ldi	r30, 0x0A	; 10
     18c:	f1 e0       	ldi	r31, 0x01	; 1
     18e:	80 81       	ld	r24, Z
     190:	87 7f       	andi	r24, 0xF7	; 247
     192:	80 83       	st	Z, r24

00000194 <.Loc.3>:
     194:	80 81       	ld	r24, Z
     196:	8b 7f       	andi	r24, 0xFB	; 251
     198:	80 83       	st	Z, r24

0000019a <.Loc.5>:
     19a:	eb e0       	ldi	r30, 0x0B	; 11
     19c:	f1 e0       	ldi	r31, 0x01	; 1
     19e:	80 81       	ld	r24, Z

000001a0 <.Loc.6>:
     1a0:	88 60       	ori	r24, 0x08	; 8
     1a2:	80 83       	st	Z, r24

000001a4 <.Loc.7>:
     1a4:	80 81       	ld	r24, Z

000001a6 <.Loc.8>:
     1a6:	84 60       	ori	r24, 0x04	; 4
     1a8:	80 83       	st	Z, r24

000001aa <.Loc.9>:
     1aa:	08 95       	ret

000001ac <buttons_init>:
     1ac:	52 98       	cbi	0x0a, 2	; 10

000001ae <.Loc.13>:
     1ae:	5a 9a       	sbi	0x0b, 2	; 11

000001b0 <.Loc.15>:
     1b0:	81 98       	cbi	0x10, 1	; 16

000001b2 <.Loc.17>:
     1b2:	59 9a       	sbi	0x0b, 1	; 11

000001b4 <.Loc.19>:
     1b4:	53 98       	cbi	0x0a, 3	; 10

000001b6 <.Loc.21>:
     1b6:	5b 9a       	sbi	0x0b, 3	; 11

000001b8 <.Loc.23>:
     1b8:	08 95       	ret

000001ba <init_stop_button>:
     1ba:	50 98       	cbi	0x0a, 0	; 10

000001bc <.Loc.27>:
     1bc:	e9 e6       	ldi	r30, 0x69	; 105
     1be:	f0 e0       	ldi	r31, 0x00	; 0
     1c0:	80 81       	ld	r24, Z

000001c2 <.Loc.28>:
     1c2:	83 60       	ori	r24, 0x03	; 3
     1c4:	80 83       	st	Z, r24

000001c6 <.Loc.29>:
     1c6:	e8 9a       	sbi	0x1d, 0	; 29

000001c8 <.Loc.31>:
     1c8:	08 95       	ret

000001ca <donk_left>:
     1ca:	80 91 09 01 	lds	r24, 0x0109	; 0x800109 <__TEXT_REGION_LENGTH__+0x700109>

000001ce <.Loc.35>:
     1ce:	83 fb       	bst	r24, 3
     1d0:	88 27       	eor	r24, r24
     1d2:	80 f9       	bld	r24, 0

000001d4 <.Loc.36>:
     1d4:	91 e0       	ldi	r25, 0x01	; 1
     1d6:	89 27       	eor	r24, r25
     1d8:	08 95       	ret

000001da <donk_right>:
     1da:	80 91 09 01 	lds	r24, 0x0109	; 0x800109 <__TEXT_REGION_LENGTH__+0x700109>

000001de <.Loc.40>:
     1de:	82 fb       	bst	r24, 2
     1e0:	88 27       	eor	r24, r24
     1e2:	80 f9       	bld	r24, 0

000001e4 <.Loc.41>:
     1e4:	91 e0       	ldi	r25, 0x01	; 1
     1e6:	89 27       	eor	r24, r25
     1e8:	08 95       	ret

000001ea <plus_pressed>:
     1ea:	89 b1       	in	r24, 0x09	; 9

000001ec <.Loc.45>:
     1ec:	82 fb       	bst	r24, 2
     1ee:	88 27       	eor	r24, r24
     1f0:	80 f9       	bld	r24, 0

000001f2 <.Loc.46>:
     1f2:	91 e0       	ldi	r25, 0x01	; 1
     1f4:	89 27       	eor	r24, r25
     1f6:	08 95       	ret

000001f8 <minus_pressed>:
     1f8:	89 b1       	in	r24, 0x09	; 9

000001fa <.Loc.50>:
     1fa:	86 95       	lsr	r24
     1fc:	81 70       	andi	r24, 0x01	; 1

000001fe <.Loc.51>:
     1fe:	91 e0       	ldi	r25, 0x01	; 1
     200:	89 27       	eor	r24, r25
     202:	08 95       	ret

00000204 <enter_pressed>:
     204:	89 b1       	in	r24, 0x09	; 9

00000206 <.Loc.55>:
     206:	83 fb       	bst	r24, 3
     208:	88 27       	eor	r24, r24
     20a:	80 f9       	bld	r24, 0

0000020c <.Loc.56>:
     20c:	91 e0       	ldi	r25, 0x01	; 1
     20e:	89 27       	eor	r24, r25
     210:	08 95       	ret

00000212 <stop_pressed>:
     212:	89 b1       	in	r24, 0x09	; 9

00000214 <.Loc.60>:
     214:	81 70       	andi	r24, 0x01	; 1
     216:	08 95       	ret

00000218 <plus_pressed_once>:
     218:	0e 94 f5 00 	call	0x1ea	; 0x1ea <plus_pressed>

0000021c <.LVL0>:
     21c:	88 23       	and	r24, r24
     21e:	a9 f0       	breq	.+42     	; 0x24a <.L11>

00000220 <.Loc.66>:
     220:	80 91 6e 02 	lds	r24, 0x026E	; 0x80026e <pressed_before.2>
     224:	90 91 6f 02 	lds	r25, 0x026F	; 0x80026f <pressed_before.2+0x1>
     228:	89 2b       	or	r24, r25
     22a:	11 f0       	breq	.+4      	; 0x230 <.L14>

0000022c <.Loc.68>:
     22c:	80 e0       	ldi	r24, 0x00	; 0

0000022e <.L10>:
     22e:	08 95       	ret

00000230 <.L14>:
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     230:	8f e3       	ldi	r24, 0x3F	; 63
     232:	9c e9       	ldi	r25, 0x9C	; 156

00000234 <.L1^B1>:
     234:	01 97       	sbiw	r24, 0x01	; 1
     236:	f1 f7       	brne	.-4      	; 0x234 <.L1^B1>
     238:	00 c0       	rjmp	.+0      	; 0x23a <L0^A>

0000023a <L0^A>:
	...

0000023c <.LBE14>:
     23c:	81 e0       	ldi	r24, 0x01	; 1
     23e:	90 e0       	ldi	r25, 0x00	; 0
     240:	90 93 6f 02 	sts	0x026F, r25	; 0x80026f <pressed_before.2+0x1>
     244:	80 93 6e 02 	sts	0x026E, r24	; 0x80026e <pressed_before.2>

00000248 <.Loc.81>:
     248:	08 95       	ret

0000024a <.L11>:
     24a:	20 91 6e 02 	lds	r18, 0x026E	; 0x80026e <pressed_before.2>
     24e:	30 91 6f 02 	lds	r19, 0x026F	; 0x80026f <pressed_before.2+0x1>
     252:	23 2b       	or	r18, r19
     254:	61 f3       	breq	.-40     	; 0x22e <.L10>

00000256 <.LBB16>:
     256:	ef e3       	ldi	r30, 0x3F	; 63
     258:	fc e9       	ldi	r31, 0x9C	; 156

0000025a <.L1^B2>:
     25a:	31 97       	sbiw	r30, 0x01	; 1
     25c:	f1 f7       	brne	.-4      	; 0x25a <.L1^B2>
     25e:	00 c0       	rjmp	.+0      	; 0x260 <L0^A>

00000260 <L0^A>:
	...

00000262 <.LBE16>:
     262:	10 92 6f 02 	sts	0x026F, r1	; 0x80026f <pressed_before.2+0x1>
     266:	10 92 6e 02 	sts	0x026E, r1	; 0x80026e <pressed_before.2>
     26a:	08 95       	ret

0000026c <minus_pressed_once>:
     26c:	0e 94 fc 00 	call	0x1f8	; 0x1f8 <minus_pressed>

00000270 <.LVL5>:
     270:	88 23       	and	r24, r24
     272:	a9 f0       	breq	.+42     	; 0x29e <.L16>

00000274 <.Loc.101>:
     274:	80 91 6c 02 	lds	r24, 0x026C	; 0x80026c <pressed_before.1>
     278:	90 91 6d 02 	lds	r25, 0x026D	; 0x80026d <pressed_before.1+0x1>
     27c:	89 2b       	or	r24, r25
     27e:	11 f0       	breq	.+4      	; 0x284 <.L19>

00000280 <.Loc.103>:
     280:	80 e0       	ldi	r24, 0x00	; 0

00000282 <.L15>:
     282:	08 95       	ret

00000284 <.L19>:
     284:	8f e3       	ldi	r24, 0x3F	; 63
     286:	9c e9       	ldi	r25, 0x9C	; 156

00000288 <.L1^B3>:
     288:	01 97       	sbiw	r24, 0x01	; 1
     28a:	f1 f7       	brne	.-4      	; 0x288 <.L1^B3>
     28c:	00 c0       	rjmp	.+0      	; 0x28e <L0^A>

0000028e <L0^A>:
	...

00000290 <.LBE18>:
     290:	81 e0       	ldi	r24, 0x01	; 1
     292:	90 e0       	ldi	r25, 0x00	; 0
     294:	90 93 6d 02 	sts	0x026D, r25	; 0x80026d <pressed_before.1+0x1>
     298:	80 93 6c 02 	sts	0x026C, r24	; 0x80026c <pressed_before.1>

0000029c <.Loc.116>:
     29c:	08 95       	ret

0000029e <.L16>:
     29e:	20 91 6c 02 	lds	r18, 0x026C	; 0x80026c <pressed_before.1>
     2a2:	30 91 6d 02 	lds	r19, 0x026D	; 0x80026d <pressed_before.1+0x1>
     2a6:	23 2b       	or	r18, r19
     2a8:	61 f3       	breq	.-40     	; 0x282 <.L15>

000002aa <.LBB20>:
     2aa:	ef e3       	ldi	r30, 0x3F	; 63
     2ac:	fc e9       	ldi	r31, 0x9C	; 156

000002ae <.L1^B4>:
     2ae:	31 97       	sbiw	r30, 0x01	; 1
     2b0:	f1 f7       	brne	.-4      	; 0x2ae <.L1^B4>
     2b2:	00 c0       	rjmp	.+0      	; 0x2b4 <L0^A>

000002b4 <L0^A>:
	...

000002b6 <.LBE20>:
     2b6:	10 92 6d 02 	sts	0x026D, r1	; 0x80026d <pressed_before.1+0x1>
     2ba:	10 92 6c 02 	sts	0x026C, r1	; 0x80026c <pressed_before.1>
     2be:	08 95       	ret

000002c0 <enter_pressed_once>:
     2c0:	0e 94 02 01 	call	0x204	; 0x204 <enter_pressed>

000002c4 <.LVL10>:
     2c4:	88 23       	and	r24, r24
     2c6:	a9 f0       	breq	.+42     	; 0x2f2 <.L21>

000002c8 <.Loc.136>:
     2c8:	80 91 6a 02 	lds	r24, 0x026A	; 0x80026a <pressed_before.0>
     2cc:	90 91 6b 02 	lds	r25, 0x026B	; 0x80026b <pressed_before.0+0x1>
     2d0:	89 2b       	or	r24, r25
     2d2:	11 f0       	breq	.+4      	; 0x2d8 <.L24>

000002d4 <.Loc.138>:
     2d4:	80 e0       	ldi	r24, 0x00	; 0

000002d6 <.L20>:
     2d6:	08 95       	ret

000002d8 <.L24>:
     2d8:	8f e3       	ldi	r24, 0x3F	; 63
     2da:	9c e9       	ldi	r25, 0x9C	; 156

000002dc <.L1^B5>:
     2dc:	01 97       	sbiw	r24, 0x01	; 1
     2de:	f1 f7       	brne	.-4      	; 0x2dc <.L1^B5>
     2e0:	00 c0       	rjmp	.+0      	; 0x2e2 <L0^A>

000002e2 <L0^A>:
	...

000002e4 <.LBE22>:
     2e4:	81 e0       	ldi	r24, 0x01	; 1
     2e6:	90 e0       	ldi	r25, 0x00	; 0
     2e8:	90 93 6b 02 	sts	0x026B, r25	; 0x80026b <pressed_before.0+0x1>
     2ec:	80 93 6a 02 	sts	0x026A, r24	; 0x80026a <pressed_before.0>

000002f0 <.Loc.151>:
     2f0:	08 95       	ret

000002f2 <.L21>:
     2f2:	20 91 6a 02 	lds	r18, 0x026A	; 0x80026a <pressed_before.0>
     2f6:	30 91 6b 02 	lds	r19, 0x026B	; 0x80026b <pressed_before.0+0x1>
     2fa:	23 2b       	or	r18, r19
     2fc:	61 f3       	breq	.-40     	; 0x2d6 <.L20>

000002fe <.LBB24>:
     2fe:	ef e3       	ldi	r30, 0x3F	; 63
     300:	fc e9       	ldi	r31, 0x9C	; 156

00000302 <.L1^B6>:
     302:	31 97       	sbiw	r30, 0x01	; 1
     304:	f1 f7       	brne	.-4      	; 0x302 <.L1^B6>
     306:	00 c0       	rjmp	.+0      	; 0x308 <L0^A>

00000308 <L0^A>:
	...

0000030a <.LBE24>:
     30a:	10 92 6b 02 	sts	0x026B, r1	; 0x80026b <pressed_before.0+0x1>
     30e:	10 92 6a 02 	sts	0x026A, r1	; 0x80026a <pressed_before.0>
     312:	08 95       	ret

00000314 <__vector_1>:
     314:	1f 92       	push	r1
     316:	0f 92       	push	r0
     318:	0f b6       	in	r0, 0x3f	; 63
     31a:	0f 92       	push	r0
     31c:	11 24       	eor	r1, r1
     31e:	0b b6       	in	r0, 0x3b	; 59
     320:	0f 92       	push	r0
     322:	2f 93       	push	r18
     324:	3f 93       	push	r19
     326:	4f 93       	push	r20
     328:	5f 93       	push	r21
     32a:	6f 93       	push	r22
     32c:	7f 93       	push	r23
     32e:	8f 93       	push	r24
     330:	9f 93       	push	r25
     332:	af 93       	push	r26
     334:	bf 93       	push	r27
     336:	cf 93       	push	r28
     338:	df 93       	push	r29
     33a:	ef 93       	push	r30
     33c:	ff 93       	push	r31

0000033e <.LBB34>:
     33e:	c1 e0       	ldi	r28, 0x01	; 1
     340:	d1 e0       	ldi	r29, 0x01	; 1

00000342 <.Loc.171>:
     342:	48 99       	sbic	0x09, 0	; 9
     344:	20 c0       	rjmp	.+64     	; 0x386 <.L26>

00000346 <.L25>:
     346:	ff 91       	pop	r31
     348:	ef 91       	pop	r30
     34a:	df 91       	pop	r29
     34c:	cf 91       	pop	r28
     34e:	bf 91       	pop	r27
     350:	af 91       	pop	r26
     352:	9f 91       	pop	r25
     354:	8f 91       	pop	r24
     356:	7f 91       	pop	r23
     358:	6f 91       	pop	r22
     35a:	5f 91       	pop	r21
     35c:	4f 91       	pop	r20
     35e:	3f 91       	pop	r19
     360:	2f 91       	pop	r18
     362:	0f 90       	pop	r0
     364:	0b be       	out	0x3b, r0	; 59
     366:	0f 90       	pop	r0
     368:	0f be       	out	0x3f, r0	; 63
     36a:	0f 90       	pop	r0
     36c:	1f 90       	pop	r1
     36e:	18 95       	reti

00000370 <.L31>:
     370:	9d 98       	cbi	0x13, 5	; 19

00000372 <.Loc.175>:
     372:	88 81       	ld	r24, Y
     374:	8f 7b       	andi	r24, 0xBF	; 191
     376:	88 83       	st	Y, r24

00000378 <.Loc.177>:
     378:	80 e0       	ldi	r24, 0x00	; 0
     37a:	0e 94 8c 07 	call	0xf18	; 0xf18 <buzzer_enable>

0000037e <.LBB36>:
     37e:	48 9b       	sbis	0x09, 0	; 9
     380:	0f c0       	rjmp	.+30     	; 0x3a0 <.L28>

00000382 <.Loc.182>:
     382:	0e 94 78 0e 	call	0x1cf0	; 0x1cf0 <display_txt_stop>

00000386 <.L26>:
     386:	0e 94 0c 01 	call	0x218	; 0x218 <plus_pressed_once>

0000038a <.LVL17>:
     38a:	88 23       	and	r24, r24
     38c:	89 f3       	breq	.-30     	; 0x370 <.L31>

0000038e <.LBB38>:
     38e:	48 99       	sbic	0x09, 0	; 9
     390:	ef cf       	rjmp	.-34     	; 0x370 <.L31>

00000392 <.Loc.189>:
     392:	9d 9a       	sbi	0x13, 5	; 19

00000394 <.Loc.191>:
     394:	e1 e0       	ldi	r30, 0x01	; 1
     396:	f1 e0       	ldi	r31, 0x01	; 1
     398:	80 81       	ld	r24, Z

0000039a <.Loc.192>:
     39a:	80 64       	ori	r24, 0x40	; 64
     39c:	80 83       	st	Z, r24

0000039e <.Loc.193>:
     39e:	d3 cf       	rjmp	.-90     	; 0x346 <.L25>

000003a0 <.L28>:
     3a0:	0e 94 60 01 	call	0x2c0	; 0x2c0 <enter_pressed_once>

000003a4 <.LVL18>:
     3a4:	88 23       	and	r24, r24
     3a6:	79 f3       	breq	.-34     	; 0x386 <.L26>

000003a8 <.LBB40>:
     3a8:	48 99       	sbic	0x09, 0	; 9
     3aa:	ed cf       	rjmp	.-38     	; 0x386 <.L26>

000003ac <.Loc.200>:
     3ac:	f8 94       	cli

000003ae <.Loc.201>:
     3ae:	88 e1       	ldi	r24, 0x18	; 24
     3b0:	80 93 60 00 	sts	0x0060, r24	; 0x800060 <__TEXT_REGION_LENGTH__+0x700060>

000003b4 <.L30>:
     3b4:	ff cf       	rjmp	.-2      	; 0x3b4 <.L30>

000003b6 <led_control>:
     3b6:	88 23       	and	r24, r24
     3b8:	11 f0       	breq	.+4      	; 0x3be <.L34>

000003ba <.Loc.209>:
     3ba:	5f 98       	cbi	0x0b, 7	; 11
     3bc:	08 95       	ret

000003be <.L34>:
     3be:	5f 9a       	sbi	0x0b, 7	; 11

000003c0 <.Loc.213>:
     3c0:	08 95       	ret

000003c2 <led_init>:
     3c2:	57 9a       	sbi	0x0a, 7	; 10

000003c4 <.Loc.217>:
     3c4:	80 e0       	ldi	r24, 0x00	; 0
     3c6:	0e 94 db 01 	call	0x3b6	; 0x3b6 <led_control>

000003ca <.LVL20>:
     3ca:	08 95       	ret

000003cc <basic_io_init>:
     3cc:	0e 94 c5 00 	call	0x18a	; 0x18a <donk_init>

000003d0 <.LVL21>:
     3d0:	0e 94 d6 00 	call	0x1ac	; 0x1ac <buttons_init>

000003d4 <.LVL22>:
     3d4:	0e 94 dd 00 	call	0x1ba	; 0x1ba <init_stop_button>

000003d8 <.LVL23>:
     3d8:	0e 94 e1 01 	call	0x3c2	; 0x3c2 <led_init>

000003dc <.LVL24>:
     3dc:	08 95       	ret

000003de <USART0_init>:
     3de:	9c 01       	movw	r18, r24
     3e0:	40 e0       	ldi	r20, 0x00	; 0
     3e2:	50 e0       	ldi	r21, 0x00	; 0
     3e4:	60 e4       	ldi	r22, 0x40	; 64
     3e6:	72 e4       	ldi	r23, 0x42	; 66
     3e8:	8f e0       	ldi	r24, 0x0F	; 15
     3ea:	90 e0       	ldi	r25, 0x00	; 0
     3ec:	0e 94 a1 0e 	call	0x1d42	; 0x1d42 <__udivmodsi4>

000003f0 <.Loc.3>:
     3f0:	21 50       	subi	r18, 0x01	; 1
     3f2:	31 09       	sbc	r19, r1

000003f4 <.Loc.4>:
     3f4:	30 93 c5 00 	sts	0x00C5, r19	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7000c5>

000003f8 <.Loc.6>:
     3f8:	20 93 c4 00 	sts	0x00C4, r18	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7000c4>

000003fc <.Loc.8>:
     3fc:	88 e1       	ldi	r24, 0x18	; 24

000003fe <.Loc.10>:
     3fe:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7000c1>

00000402 <.Loc.11>:
     402:	86 e0       	ldi	r24, 0x06	; 6
     404:	80 93 c2 00 	sts	0x00C2, r24	; 0x8000c2 <__TEXT_REGION_LENGTH__+0x7000c2>

00000408 <.Loc.13>:
     408:	08 95       	ret

0000040a <USART1_init>:
     40a:	9c 01       	movw	r18, r24
     40c:	40 e0       	ldi	r20, 0x00	; 0
     40e:	50 e0       	ldi	r21, 0x00	; 0
     410:	60 e4       	ldi	r22, 0x40	; 64
     412:	72 e4       	ldi	r23, 0x42	; 66
     414:	8f e0       	ldi	r24, 0x0F	; 15
     416:	90 e0       	ldi	r25, 0x00	; 0
     418:	0e 94 a1 0e 	call	0x1d42	; 0x1d42 <__udivmodsi4>

0000041c <.Loc.17>:
     41c:	21 50       	subi	r18, 0x01	; 1
     41e:	31 09       	sbc	r19, r1

00000420 <.Loc.18>:
     420:	30 93 cd 00 	sts	0x00CD, r19	; 0x8000cd <__TEXT_REGION_LENGTH__+0x7000cd>

00000424 <.Loc.20>:
     424:	20 93 cc 00 	sts	0x00CC, r18	; 0x8000cc <__TEXT_REGION_LENGTH__+0x7000cc>

00000428 <.Loc.22>:
     428:	88 e1       	ldi	r24, 0x18	; 24

0000042a <.Loc.24>:
     42a:	80 93 c9 00 	sts	0x00C9, r24	; 0x8000c9 <__TEXT_REGION_LENGTH__+0x7000c9>

0000042e <.Loc.25>:
     42e:	86 e0       	ldi	r24, 0x06	; 6
     430:	80 93 ca 00 	sts	0x00CA, r24	; 0x8000ca <__TEXT_REGION_LENGTH__+0x7000ca>

00000434 <.Loc.27>:
     434:	08 95       	ret

00000436 <USART0_sendByte>:
     436:	e0 ec       	ldi	r30, 0xC0	; 192
     438:	f0 e0       	ldi	r31, 0x00	; 0

0000043a <.L4>:
     43a:	90 81       	ld	r25, Z

0000043c <.Loc.33>:
     43c:	95 ff       	sbrs	r25, 5
     43e:	fd cf       	rjmp	.-6      	; 0x43a <.L4>

00000440 <.Loc.34>:
     440:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7000c6>

00000444 <.Loc.36>:
     444:	08 95       	ret

00000446 <USART0_sendString>:
     446:	cf 93       	push	r28
     448:	df 93       	push	r29
     44a:	c8 2f       	mov	r28, r24
     44c:	d9 2f       	mov	r29, r25

0000044e <.Loc.39>:
     44e:	88 81       	ld	r24, Y
     450:	88 23       	and	r24, r24
     452:	31 f0       	breq	.+12     	; 0x460 <.L6>
     454:	21 96       	adiw	r28, 0x01	; 1

00000456 <.L8>:
     456:	0e 94 1b 02 	call	0x436	; 0x436 <USART0_sendByte>

0000045a <.LVL10>:
     45a:	89 91       	ld	r24, Y+

0000045c <.Loc.44>:
     45c:	81 11       	cpse	r24, r1
     45e:	fb cf       	rjmp	.-10     	; 0x456 <.L8>

00000460 <.L6>:
     460:	df 91       	pop	r29
     462:	cf 91       	pop	r28
     464:	08 95       	ret

00000466 <USART0_sendHexByte>:
     466:	1f 93       	push	r17
     468:	cf 93       	push	r28
     46a:	df 93       	push	r29
     46c:	cd b7       	in	r28, 0x3d	; 61
     46e:	de b7       	in	r29, 0x3e	; 62
     470:	61 97       	sbiw	r28, 0x11	; 17
     472:	0f b6       	in	r0, 0x3f	; 63
     474:	f8 94       	cli
     476:	de bf       	out	0x3e, r29	; 62
     478:	0f be       	out	0x3f, r0	; 63
     47a:	cd bf       	out	0x3d, r28	; 61
     47c:	18 2f       	mov	r17, r24

0000047e <.Loc.48>:
     47e:	81 e1       	ldi	r24, 0x11	; 17

00000480 <.Loc.50>:
     480:	e5 e2       	ldi	r30, 0x25	; 37
     482:	f2 e0       	ldi	r31, 0x02	; 2
     484:	de 01       	movw	r26, r28
     486:	11 96       	adiw	r26, 0x01	; 1

00000488 <.L^B1>:
     488:	01 90       	ld	r0, Z+
     48a:	0d 92       	st	X+, r0
     48c:	8a 95       	dec	r24
     48e:	e1 f7       	brne	.-8      	; 0x488 <.L^B1>

00000490 <.Loc.51>:
     490:	81 2f       	mov	r24, r17
     492:	82 95       	swap	r24
     494:	8f 70       	andi	r24, 0x0F	; 15

00000496 <.Loc.53>:
     496:	e1 e0       	ldi	r30, 0x01	; 1
     498:	f0 e0       	ldi	r31, 0x00	; 0
     49a:	ec 0f       	add	r30, r28
     49c:	fd 1f       	adc	r31, r29
     49e:	e8 0f       	add	r30, r24
     4a0:	f1 1d       	adc	r31, r1

000004a2 <.Loc.54>:
     4a2:	80 81       	ld	r24, Z
     4a4:	0e 94 1b 02 	call	0x436	; 0x436 <USART0_sendByte>

000004a8 <.LVL15>:
     4a8:	1f 70       	andi	r17, 0x0F	; 15

000004aa <.Loc.57>:
     4aa:	e1 e0       	ldi	r30, 0x01	; 1
     4ac:	f0 e0       	ldi	r31, 0x00	; 0
     4ae:	ec 0f       	add	r30, r28
     4b0:	fd 1f       	adc	r31, r29
     4b2:	e1 0f       	add	r30, r17
     4b4:	f1 1d       	adc	r31, r1

000004b6 <.Loc.58>:
     4b6:	80 81       	ld	r24, Z
     4b8:	0e 94 1b 02 	call	0x436	; 0x436 <USART0_sendByte>

000004bc <.LVL17>:
     4bc:	61 96       	adiw	r28, 0x11	; 17
     4be:	0f b6       	in	r0, 0x3f	; 63
     4c0:	f8 94       	cli
     4c2:	de bf       	out	0x3e, r29	; 62
     4c4:	0f be       	out	0x3f, r0	; 63
     4c6:	cd bf       	out	0x3d, r28	; 61
     4c8:	df 91       	pop	r29
     4ca:	cf 91       	pop	r28
     4cc:	1f 91       	pop	r17
     4ce:	08 95       	ret

000004d0 <USART1_sendCommand>:
     4d0:	0f 93       	push	r16
     4d2:	1f 93       	push	r17
     4d4:	cf 93       	push	r28
     4d6:	df 93       	push	r29
     4d8:	08 2f       	mov	r16, r24
     4da:	16 2f       	mov	r17, r22
     4dc:	d4 2f       	mov	r29, r20
     4de:	c2 2f       	mov	r28, r18

000004e0 <.Loc.62>:
     4e0:	86 e3       	ldi	r24, 0x36	; 54
     4e2:	92 e0       	ldi	r25, 0x02	; 2

000004e4 <.Loc.63>:
     4e4:	0e 94 23 02 	call	0x446	; 0x446 <USART0_sendString>

000004e8 <.LVL20>:
     4e8:	80 2f       	mov	r24, r16
     4ea:	0e 94 33 02 	call	0x466	; 0x466 <USART0_sendHexByte>

000004ee <.LVL21>:
     4ee:	80 e2       	ldi	r24, 0x20	; 32
     4f0:	0e 94 1b 02 	call	0x436	; 0x436 <USART0_sendByte>

000004f4 <.LVL22>:
     4f4:	81 2f       	mov	r24, r17
     4f6:	0e 94 33 02 	call	0x466	; 0x466 <USART0_sendHexByte>

000004fa <.LVL23>:
     4fa:	80 e2       	ldi	r24, 0x20	; 32
     4fc:	0e 94 1b 02 	call	0x436	; 0x436 <USART0_sendByte>

00000500 <.LVL24>:
     500:	8d 2f       	mov	r24, r29
     502:	0e 94 33 02 	call	0x466	; 0x466 <USART0_sendHexByte>

00000506 <.LVL25>:
     506:	80 e2       	ldi	r24, 0x20	; 32
     508:	0e 94 1b 02 	call	0x436	; 0x436 <USART0_sendByte>

0000050c <.LVL26>:
     50c:	8c 2f       	mov	r24, r28
     50e:	0e 94 33 02 	call	0x466	; 0x466 <USART0_sendHexByte>

00000512 <.LVL27>:
     512:	86 e6       	ldi	r24, 0x66	; 102
     514:	92 e0       	ldi	r25, 0x02	; 2
     516:	0e 94 23 02 	call	0x446	; 0x446 <USART0_sendString>

0000051a <.LVL28>:
     51a:	e8 ec       	ldi	r30, 0xC8	; 200
     51c:	f0 e0       	ldi	r31, 0x00	; 0

0000051e <.L12>:
     51e:	90 81       	ld	r25, Z

00000520 <.Loc.77>:
     520:	95 ff       	sbrs	r25, 5
     522:	fd cf       	rjmp	.-6      	; 0x51e <.L12>

00000524 <.Loc.78>:
     524:	00 93 ce 00 	sts	0x00CE, r16	; 0x8000ce <__TEXT_REGION_LENGTH__+0x7000ce>

00000528 <.Loc.80>:
     528:	e8 ec       	ldi	r30, 0xC8	; 200
     52a:	f0 e0       	ldi	r31, 0x00	; 0

0000052c <.L13>:
     52c:	90 81       	ld	r25, Z

0000052e <.Loc.85>:
     52e:	95 ff       	sbrs	r25, 5
     530:	fd cf       	rjmp	.-6      	; 0x52c <.L13>

00000532 <.Loc.86>:
     532:	10 93 ce 00 	sts	0x00CE, r17	; 0x8000ce <__TEXT_REGION_LENGTH__+0x7000ce>

00000536 <.Loc.88>:
     536:	e8 ec       	ldi	r30, 0xC8	; 200
     538:	f0 e0       	ldi	r31, 0x00	; 0

0000053a <.L14>:
     53a:	90 81       	ld	r25, Z

0000053c <.Loc.93>:
     53c:	95 ff       	sbrs	r25, 5
     53e:	fd cf       	rjmp	.-6      	; 0x53a <.L14>

00000540 <.Loc.94>:
     540:	d0 93 ce 00 	sts	0x00CE, r29	; 0x8000ce <__TEXT_REGION_LENGTH__+0x7000ce>

00000544 <.Loc.96>:
     544:	e8 ec       	ldi	r30, 0xC8	; 200
     546:	f0 e0       	ldi	r31, 0x00	; 0

00000548 <.L15>:
     548:	90 81       	ld	r25, Z

0000054a <.Loc.101>:
     54a:	95 ff       	sbrs	r25, 5
     54c:	fd cf       	rjmp	.-6      	; 0x548 <.L15>

0000054e <.Loc.102>:
     54e:	c0 93 ce 00 	sts	0x00CE, r28	; 0x8000ce <__TEXT_REGION_LENGTH__+0x7000ce>

00000552 <.Loc.104>:
     552:	81 e5       	ldi	r24, 0x51	; 81
     554:	92 e0       	ldi	r25, 0x02	; 2
     556:	0e 94 23 02 	call	0x446	; 0x446 <USART0_sendString>

0000055a <.LVL29>:
     55a:	df 91       	pop	r29

0000055c <.Loc.106>:
     55c:	cf 91       	pop	r28

0000055e <.Loc.107>:
     55e:	1f 91       	pop	r17

00000560 <.Loc.108>:
     560:	0f 91       	pop	r16

00000562 <.Loc.109>:
     562:	08 95       	ret

00000564 <USART1_receiveByte>:
     564:	e8 ec       	ldi	r30, 0xC8	; 200
     566:	f0 e0       	ldi	r31, 0x00	; 0

00000568 <.L21>:
     568:	80 81       	ld	r24, Z

0000056a <.Loc.115>:
     56a:	88 23       	and	r24, r24
     56c:	ec f7       	brge	.-6      	; 0x568 <.L21>

0000056e <.Loc.116>:
     56e:	80 91 ce 00 	lds	r24, 0x00CE	; 0x8000ce <__TEXT_REGION_LENGTH__+0x7000ce>

00000572 <.Loc.118>:
     572:	08 95       	ret

00000574 <task_manager>:
     574:	e8 2f       	mov	r30, r24
     576:	f9 2f       	mov	r31, r25
     578:	24 2f       	mov	r18, r20

0000057a <.Loc.121>:
     57a:	09 97       	sbiw	r24, 0x09	; 9
     57c:	d8 f5       	brcc	.+118    	; 0x5f4 <.L23>
     57e:	88 27       	eor	r24, r24
     580:	e0 5c       	subi	r30, 0xC0	; 192
     582:	ff 4e       	sbci	r31, 0xEF	; 239
     584:	8f 4f       	sbci	r24, 0xFF	; 255
     586:	0c 94 e2 0e 	jmp	0x1dc4	; 0x1dc4 <__tablejump2__>

0000058a <.L34>:
     58a:	46 2f       	mov	r20, r22

0000058c <.Loc.123>:
     58c:	60 e8       	ldi	r22, 0x80	; 128

0000058e <.Loc.124>:
     58e:	81 e0       	ldi	r24, 0x01	; 1
     590:	0e 94 68 02 	call	0x4d0	; 0x4d0 <USART1_sendCommand>

00000594 <.LVL38>:
     594:	08 95       	ret

00000596 <.L33>:
     596:	46 2f       	mov	r20, r22
     598:	6f ef       	ldi	r22, 0xFF	; 255

0000059a <.Loc.127>:
     59a:	81 e0       	ldi	r24, 0x01	; 1
     59c:	0e 94 68 02 	call	0x4d0	; 0x4d0 <USART1_sendCommand>

000005a0 <.LVL41>:
     5a0:	08 95       	ret

000005a2 <.L32>:
     5a2:	46 2f       	mov	r20, r22
     5a4:	60 e0       	ldi	r22, 0x00	; 0

000005a6 <.Loc.130>:
     5a6:	81 e0       	ldi	r24, 0x01	; 1
     5a8:	0e 94 68 02 	call	0x4d0	; 0x4d0 <USART1_sendCommand>

000005ac <.LVL44>:
     5ac:	08 95       	ret

000005ae <.L31>:
     5ae:	46 2f       	mov	r20, r22
     5b0:	6e e7       	ldi	r22, 0x7E	; 126

000005b2 <.Loc.133>:
     5b2:	81 e0       	ldi	r24, 0x01	; 1
     5b4:	0e 94 68 02 	call	0x4d0	; 0x4d0 <USART1_sendCommand>

000005b8 <.LVL47>:
     5b8:	08 95       	ret

000005ba <.L30>:
     5ba:	46 2f       	mov	r20, r22
     5bc:	6f e7       	ldi	r22, 0x7F	; 127

000005be <.Loc.136>:
     5be:	81 e0       	ldi	r24, 0x01	; 1
     5c0:	0e 94 68 02 	call	0x4d0	; 0x4d0 <USART1_sendCommand>

000005c4 <.LVL50>:
     5c4:	08 95       	ret

000005c6 <.L29>:
     5c6:	46 2f       	mov	r20, r22
     5c8:	61 e0       	ldi	r22, 0x01	; 1

000005ca <.Loc.139>:
     5ca:	82 e0       	ldi	r24, 0x02	; 2
     5cc:	0e 94 68 02 	call	0x4d0	; 0x4d0 <USART1_sendCommand>

000005d0 <.LVL53>:
     5d0:	08 95       	ret

000005d2 <.L28>:
     5d2:	46 2f       	mov	r20, r22
     5d4:	62 e0       	ldi	r22, 0x02	; 2

000005d6 <.Loc.142>:
     5d6:	82 e0       	ldi	r24, 0x02	; 2
     5d8:	0e 94 68 02 	call	0x4d0	; 0x4d0 <USART1_sendCommand>

000005dc <.LVL56>:
     5dc:	08 95       	ret

000005de <.L27>:
     5de:	46 2f       	mov	r20, r22
     5e0:	61 e0       	ldi	r22, 0x01	; 1

000005e2 <.Loc.145>:
     5e2:	83 e0       	ldi	r24, 0x03	; 3
     5e4:	0e 94 68 02 	call	0x4d0	; 0x4d0 <USART1_sendCommand>

000005e8 <.LVL59>:
     5e8:	08 95       	ret

000005ea <.L25>:
     5ea:	46 2f       	mov	r20, r22
     5ec:	62 e0       	ldi	r22, 0x02	; 2

000005ee <.Loc.148>:
     5ee:	83 e0       	ldi	r24, 0x03	; 3
     5f0:	0e 94 68 02 	call	0x4d0	; 0x4d0 <USART1_sendCommand>

000005f4 <.L23>:
     5f4:	08 95       	ret

000005f6 <__vector_41>:
#include <util/atomic.h>
// Distances in centimeters get updated with approx 30Hz
volatile unsigned int left_distance = 0;
volatile unsigned int right_distance = 0;

ISR(TIMER4_CAPT_vect){
     5f6:	0f 92       	push	r0
     5f8:	0f b6       	in	r0, 0x3f	; 63
     5fa:	0f 92       	push	r0
     5fc:	1f 92       	push	r1
     5fe:	11 24       	eor	r1, r1
     600:	2f 93       	push	r18
     602:	2b b7       	in	r18, 0x3b	; 59
     604:	2f 93       	push	r18
     606:	3f 93       	push	r19
     608:	6f 93       	push	r22
     60a:	7f 93       	push	r23
     60c:	8f 93       	push	r24
     60e:	9f 93       	push	r25
     610:	af 93       	push	r26
     612:	bf 93       	push	r27
     614:	ef 93       	push	r30
     616:	ff 93       	push	r31

00000618 <.Loc.1>:
    static volatile unsigned int start_time = 0;
    // If interrupt is set to rising edge
    if (TCCR4B & (1 << ICES4)) {
     618:	80 91 a1 00 	lds	r24, 0x00A1	; 0x8000a1 <__TEXT_REGION_LENGTH__+0x7000a1>

0000061c <.Loc.4>:
     61c:	86 ff       	sbrs	r24, 6
     61e:	1e c0       	rjmp	.+60     	; 0x65c <.L2>

00000620 <.Loc.5>:
        // Store echo start value
        start_time = ICR4;
     620:	80 91 a6 00 	lds	r24, 0x00A6	; 0x8000a6 <__TEXT_REGION_LENGTH__+0x7000a6>
     624:	90 91 a7 00 	lds	r25, 0x00A7	; 0x8000a7 <__TEXT_REGION_LENGTH__+0x7000a7>

00000628 <.Loc.7>:
     628:	90 93 77 02 	sts	0x0277, r25	; 0x800277 <start_time.1+0x1>
     62c:	80 93 76 02 	sts	0x0276, r24	; 0x800276 <start_time.1>

00000630 <.Loc.8>:
        // Switch to falling edge
        TCCR4B &= ~(1 << ICES4);
     630:	e1 ea       	ldi	r30, 0xA1	; 161
     632:	f0 e0       	ldi	r31, 0x00	; 0
     634:	80 81       	ld	r24, Z
     636:	8f 7b       	andi	r24, 0xBF	; 191
     638:	80 83       	st	Z, r24

0000063a <.L1>:
        // Switch back to rising edge
        TCCR4B |= (1 << ICES4);
        // distance in centimeters = (total_time/2)*0.01715 - to simplify this: distance = total_time/117
        left_distance = (ICR4 - start_time)/117;
    }
}
     63a:	ff 91       	pop	r31
     63c:	ef 91       	pop	r30
     63e:	bf 91       	pop	r27
     640:	af 91       	pop	r26
     642:	9f 91       	pop	r25
     644:	8f 91       	pop	r24
     646:	7f 91       	pop	r23
     648:	6f 91       	pop	r22
     64a:	3f 91       	pop	r19
     64c:	2f 91       	pop	r18
     64e:	2b bf       	out	0x3b, r18	; 59
     650:	2f 91       	pop	r18
     652:	1f 90       	pop	r1
     654:	0f 90       	pop	r0
     656:	0f be       	out	0x3f, r0	; 63
     658:	0f 90       	pop	r0
     65a:	18 95       	reti

0000065c <.L2>:
        TCCR4B |= (1 << ICES4);
     65c:	e1 ea       	ldi	r30, 0xA1	; 161
     65e:	f0 e0       	ldi	r31, 0x00	; 0
     660:	80 81       	ld	r24, Z

00000662 <.Loc.12>:
     662:	80 64       	ori	r24, 0x40	; 64
     664:	80 83       	st	Z, r24

00000666 <.Loc.13>:
        left_distance = (ICR4 - start_time)/117;
     666:	20 91 a6 00 	lds	r18, 0x00A6	; 0x8000a6 <__TEXT_REGION_LENGTH__+0x7000a6>
     66a:	30 91 a7 00 	lds	r19, 0x00A7	; 0x8000a7 <__TEXT_REGION_LENGTH__+0x7000a7>

0000066e <.Loc.15>:
     66e:	80 91 76 02 	lds	r24, 0x0276	; 0x800276 <start_time.1>
     672:	90 91 77 02 	lds	r25, 0x0277	; 0x800277 <start_time.1+0x1>
     676:	28 1b       	sub	r18, r24
     678:	39 0b       	sbc	r19, r25

0000067a <.Loc.16>:
     67a:	a9 e0       	ldi	r26, 0x09	; 9
     67c:	bc e8       	ldi	r27, 0x8C	; 140
     67e:	0e 94 ea 0e 	call	0x1dd4	; 0x1dd4 <__umulhisi3>
     682:	00 24       	eor	r0, r0
     684:	88 0f       	add	r24, r24
     686:	99 1f       	adc	r25, r25
     688:	00 1c       	adc	r0, r0
     68a:	88 0f       	add	r24, r24
     68c:	99 1f       	adc	r25, r25
     68e:	00 1c       	adc	r0, r0
     690:	89 2f       	mov	r24, r25
     692:	90 2d       	mov	r25, r0

00000694 <.Loc.17>:
     694:	90 93 73 02 	sts	0x0273, r25	; 0x800273 <left_distance+0x1>
     698:	80 93 72 02 	sts	0x0272, r24	; 0x800272 <left_distance>

0000069c <.Loc.18>:
}
     69c:	ce cf       	rjmp	.-100    	; 0x63a <.L1>

0000069e <__vector_46>:

ISR(TIMER5_CAPT_vect){
     69e:	0f 92       	push	r0
     6a0:	0f b6       	in	r0, 0x3f	; 63
     6a2:	0f 92       	push	r0
     6a4:	1f 92       	push	r1
     6a6:	11 24       	eor	r1, r1
     6a8:	2f 93       	push	r18
     6aa:	2b b7       	in	r18, 0x3b	; 59
     6ac:	2f 93       	push	r18
     6ae:	3f 93       	push	r19
     6b0:	6f 93       	push	r22
     6b2:	7f 93       	push	r23
     6b4:	8f 93       	push	r24
     6b6:	9f 93       	push	r25
     6b8:	af 93       	push	r26
     6ba:	bf 93       	push	r27
     6bc:	ef 93       	push	r30
     6be:	ff 93       	push	r31

000006c0 <.Loc.20>:
    static volatile unsigned int start_time = 0;
    // If interrupt is set to rising edge
    if (TCCR5B & (1 << ICES5)) {
     6c0:	80 91 21 01 	lds	r24, 0x0121	; 0x800121 <__TEXT_REGION_LENGTH__+0x700121>

000006c4 <.Loc.23>:
     6c4:	86 ff       	sbrs	r24, 6
     6c6:	1e c0       	rjmp	.+60     	; 0x704 <.L5>

000006c8 <.Loc.24>:
        // Store echo start value
        start_time = ICR5;
     6c8:	80 91 26 01 	lds	r24, 0x0126	; 0x800126 <__TEXT_REGION_LENGTH__+0x700126>
     6cc:	90 91 27 01 	lds	r25, 0x0127	; 0x800127 <__TEXT_REGION_LENGTH__+0x700127>

000006d0 <.Loc.26>:
     6d0:	90 93 75 02 	sts	0x0275, r25	; 0x800275 <start_time.0+0x1>
     6d4:	80 93 74 02 	sts	0x0274, r24	; 0x800274 <start_time.0>

000006d8 <.Loc.27>:
        // Switch to falling edge
        TCCR5B &= ~(1 << ICES5);
     6d8:	e1 e2       	ldi	r30, 0x21	; 33
     6da:	f1 e0       	ldi	r31, 0x01	; 1
     6dc:	80 81       	ld	r24, Z
     6de:	8f 7b       	andi	r24, 0xBF	; 191
     6e0:	80 83       	st	Z, r24

000006e2 <.L4>:
        // Switch back to rising edge
        TCCR5B |= (1 << ICES5);
        // distance in centimeters = (total_time/2)*0.01715 - to simplify this: distance = total_time/117
        right_distance = (ICR5 - start_time)/117;
    }
}
     6e2:	ff 91       	pop	r31
     6e4:	ef 91       	pop	r30
     6e6:	bf 91       	pop	r27
     6e8:	af 91       	pop	r26
     6ea:	9f 91       	pop	r25
     6ec:	8f 91       	pop	r24
     6ee:	7f 91       	pop	r23
     6f0:	6f 91       	pop	r22
     6f2:	3f 91       	pop	r19
     6f4:	2f 91       	pop	r18
     6f6:	2b bf       	out	0x3b, r18	; 59
     6f8:	2f 91       	pop	r18
     6fa:	1f 90       	pop	r1
     6fc:	0f 90       	pop	r0
     6fe:	0f be       	out	0x3f, r0	; 63
     700:	0f 90       	pop	r0
     702:	18 95       	reti

00000704 <.L5>:
        TCCR5B |= (1 << ICES5);
     704:	e1 e2       	ldi	r30, 0x21	; 33
     706:	f1 e0       	ldi	r31, 0x01	; 1
     708:	80 81       	ld	r24, Z

0000070a <.Loc.31>:
     70a:	80 64       	ori	r24, 0x40	; 64
     70c:	80 83       	st	Z, r24

0000070e <.Loc.32>:
        right_distance = (ICR5 - start_time)/117;
     70e:	20 91 26 01 	lds	r18, 0x0126	; 0x800126 <__TEXT_REGION_LENGTH__+0x700126>
     712:	30 91 27 01 	lds	r19, 0x0127	; 0x800127 <__TEXT_REGION_LENGTH__+0x700127>

00000716 <.Loc.34>:
     716:	80 91 74 02 	lds	r24, 0x0274	; 0x800274 <start_time.0>
     71a:	90 91 75 02 	lds	r25, 0x0275	; 0x800275 <start_time.0+0x1>
     71e:	28 1b       	sub	r18, r24
     720:	39 0b       	sbc	r19, r25

00000722 <.Loc.35>:
     722:	a9 e0       	ldi	r26, 0x09	; 9
     724:	bc e8       	ldi	r27, 0x8C	; 140
     726:	0e 94 ea 0e 	call	0x1dd4	; 0x1dd4 <__umulhisi3>
     72a:	00 24       	eor	r0, r0
     72c:	88 0f       	add	r24, r24
     72e:	99 1f       	adc	r25, r25
     730:	00 1c       	adc	r0, r0
     732:	88 0f       	add	r24, r24
     734:	99 1f       	adc	r25, r25
     736:	00 1c       	adc	r0, r0
     738:	89 2f       	mov	r24, r25
     73a:	90 2d       	mov	r25, r0

0000073c <.Loc.36>:
     73c:	90 93 71 02 	sts	0x0271, r25	; 0x800271 <right_distance+0x1>
     740:	80 93 70 02 	sts	0x0270, r24	; 0x800270 <right_distance>

00000744 <.Loc.37>:
}
     744:	ce cf       	rjmp	.-100    	; 0x6e2 <.L4>

00000746 <ultrasonic_sync>:
    // Set trigger for primary sensor set
    ultrasonic_select(0);
}
// Sync timers for precise timing
void ultrasonic_sync(void){
    TCNT4 = 0;
     746:	10 92 a5 00 	sts	0x00A5, r1	; 0x8000a5 <__TEXT_REGION_LENGTH__+0x7000a5>
     74a:	10 92 a4 00 	sts	0x00A4, r1	; 0x8000a4 <__TEXT_REGION_LENGTH__+0x7000a4>

0000074e <.Loc.41>:
    TCNT5 = 0;
     74e:	10 92 25 01 	sts	0x0125, r1	; 0x800125 <__TEXT_REGION_LENGTH__+0x700125>
     752:	10 92 24 01 	sts	0x0124, r1	; 0x800124 <__TEXT_REGION_LENGTH__+0x700124>

00000756 <.Loc.43>:
}
     756:	08 95       	ret

00000758 <ultrasonic_select>:
// Select sensor set
void ultrasonic_select(char selection){
    // Trigger timer 5 enabled
    if(selection == 0){
     758:	81 11       	cpse	r24, r1
     75a:	10 c0       	rjmp	.+32     	; 0x77c <.L9>

0000075c <.Loc.47>:
        TCCR4A &= ~(1<< COM4B1);
     75c:	e0 ea       	ldi	r30, 0xA0	; 160
     75e:	f0 e0       	ldi	r31, 0x00	; 0
     760:	80 81       	ld	r24, Z

00000762 <.Loc.48>:
     762:	80 62       	ori	r24, 0x20	; 32
     764:	80 83       	st	Z, r24

00000766 <.Loc.49>:
        PORT_TRIG4 &= ~(1<<PIN_TRIG4);
     766:	e0 e2       	ldi	r30, 0x20	; 32
     768:	f1 e0       	ldi	r31, 0x01	; 1
     76a:	80 81       	ld	r24, Z
     76c:	8f 7d       	andi	r24, 0xDF	; 223
     76e:	80 83       	st	Z, r24

00000770 <.Loc.51>:
        TCCR5A |= (1<< COM5B1);
     770:	eb e0       	ldi	r30, 0x0B	; 11
     772:	f1 e0       	ldi	r31, 0x01	; 1
     774:	80 81       	ld	r24, Z
     776:	8f 7e       	andi	r24, 0xEF	; 239
     778:	80 83       	st	Z, r24
     77a:	08 95       	ret

0000077c <.L9>:
    }
    // Trigger timer 4 enabled
    else{
        TCCR4A |= (1<< COM4B1);
     77c:	e0 ea       	ldi	r30, 0xA0	; 160
     77e:	f0 e0       	ldi	r31, 0x00	; 0
     780:	80 81       	ld	r24, Z

00000782 <.Loc.55>:
     782:	8f 7d       	andi	r24, 0xDF	; 223
     784:	80 83       	st	Z, r24

00000786 <.Loc.56>:
        TCCR5A &= ~(1<< COM5B1);
     786:	e2 e0       	ldi	r30, 0x02	; 2
     788:	f1 e0       	ldi	r31, 0x01	; 1
     78a:	80 81       	ld	r24, Z
     78c:	8f 7e       	andi	r24, 0xEF	; 239
     78e:	80 83       	st	Z, r24

00000790 <.Loc.58>:
        PORT_TRIG5 &= ~(1<<PIN_TRIG5);
     790:	e0 e2       	ldi	r30, 0x20	; 32
     792:	f1 e0       	ldi	r31, 0x01	; 1
     794:	80 81       	ld	r24, Z

00000796 <.Loc.59>:
     796:	80 62       	ori	r24, 0x20	; 32
     798:	80 83       	st	Z, r24

0000079a <.Loc.60>:
    }
}
// Get distance functions to prevent interrupt during distance read
     79a:	08 95       	ret

0000079c <ultrasonic_init>:
    DDR_TRIG4 |= (1 << PIN_TRIG4);
     79c:	e1 e0       	ldi	r30, 0x01	; 1
     79e:	f1 e0       	ldi	r31, 0x01	; 1
     7a0:	80 81       	ld	r24, Z

000007a2 <.Loc.63>:
     7a2:	80 61       	ori	r24, 0x10	; 16
     7a4:	80 83       	st	Z, r24

000007a6 <.Loc.64>:
    PORT_TRIG4 &= ~(1 << PIN_TRIG4);
     7a6:	e2 e0       	ldi	r30, 0x02	; 2
     7a8:	f1 e0       	ldi	r31, 0x01	; 1
     7aa:	80 81       	ld	r24, Z
     7ac:	8f 7e       	andi	r24, 0xEF	; 239
     7ae:	80 83       	st	Z, r24

000007b0 <.Loc.66>:
    DDR_TRIG5 |= (1 << PIN_TRIG5);
     7b0:	ea e0       	ldi	r30, 0x0A	; 10
     7b2:	f1 e0       	ldi	r31, 0x01	; 1
     7b4:	80 81       	ld	r24, Z

000007b6 <.Loc.67>:
     7b6:	80 61       	ori	r24, 0x10	; 16
     7b8:	80 83       	st	Z, r24

000007ba <.Loc.68>:
    PORT_TRIG5 &= ~(1 << PIN_TRIG5);
     7ba:	ab e0       	ldi	r26, 0x0B	; 11
     7bc:	b1 e0       	ldi	r27, 0x01	; 1
     7be:	8c 91       	ld	r24, X
     7c0:	8f 7e       	andi	r24, 0xEF	; 239
     7c2:	8c 93       	st	X, r24

000007c4 <.Loc.70>:
    DDR_ECHO4 &= ~(1 << PIN_ECHO4);
     7c4:	80 81       	ld	r24, Z
     7c6:	8e 7f       	andi	r24, 0xFE	; 254
     7c8:	80 83       	st	Z, r24

000007ca <.Loc.72>:
    DDR_ECHO5 &= ~(1 << PIN_ECHO5);
     7ca:	80 81       	ld	r24, Z
     7cc:	8d 7f       	andi	r24, 0xFD	; 253
     7ce:	80 83       	st	Z, r24

000007d0 <.Loc.74>:
    TCCR4A = (1<< COM4B1) | (1 << WGM41) | (1 << WGM40);
     7d0:	93 e2       	ldi	r25, 0x23	; 35
     7d2:	90 93 a0 00 	sts	0x00A0, r25	; 0x8000a0 <__TEXT_REGION_LENGTH__+0x7000a0>

000007d6 <.Loc.76>:
    TCCR4B = (1 << ICES4) | (1<< WGM43) | (1<< WGM42) | (1 << CS41);
     7d6:	8a e5       	ldi	r24, 0x5A	; 90
     7d8:	80 93 a1 00 	sts	0x00A1, r24	; 0x8000a1 <__TEXT_REGION_LENGTH__+0x7000a1>

000007dc <.Loc.78>:
    TIMSK4 = (1 << ICIE4);
     7dc:	20 e2       	ldi	r18, 0x20	; 32
     7de:	20 93 72 00 	sts	0x0072, r18	; 0x800072 <__TEXT_REGION_LENGTH__+0x700072>

000007e2 <.Loc.80>:
    TCCR5A = (1<< COM5B1) | (1 << WGM51) | (1 << WGM50);
     7e2:	90 93 20 01 	sts	0x0120, r25	; 0x800120 <__TEXT_REGION_LENGTH__+0x700120>

000007e6 <.Loc.82>:
    TCCR5B = (1 << ICES5) | (1<< WGM53) | (1<< WGM52) | (1 << CS51);
     7e6:	80 93 21 01 	sts	0x0121, r24	; 0x800121 <__TEXT_REGION_LENGTH__+0x700121>

000007ea <.Loc.84>:
    TIMSK5 = (1 << ICIE5) | (1 << TOV5);
     7ea:	81 e2       	ldi	r24, 0x21	; 33
     7ec:	80 93 73 00 	sts	0x0073, r24	; 0x800073 <__TEXT_REGION_LENGTH__+0x700073>

000007f0 <.Loc.86>:
    OCR4A = 0xFFFF;
     7f0:	8f ef       	ldi	r24, 0xFF	; 255
     7f2:	9f ef       	ldi	r25, 0xFF	; 255
     7f4:	90 93 a9 00 	sts	0x00A9, r25	; 0x8000a9 <__TEXT_REGION_LENGTH__+0x7000a9>
     7f8:	80 93 a8 00 	sts	0x00A8, r24	; 0x8000a8 <__TEXT_REGION_LENGTH__+0x7000a8>

000007fc <.Loc.88>:
    OCR5A = 0xFFFF;
     7fc:	90 93 29 01 	sts	0x0129, r25	; 0x800129 <__TEXT_REGION_LENGTH__+0x700129>
     800:	80 93 28 01 	sts	0x0128, r24	; 0x800128 <__TEXT_REGION_LENGTH__+0x700128>

00000804 <.Loc.90>:
    OCR4B = 20;
     804:	84 e1       	ldi	r24, 0x14	; 20
     806:	90 e0       	ldi	r25, 0x00	; 0
     808:	90 93 ab 00 	sts	0x00AB, r25	; 0x8000ab <__TEXT_REGION_LENGTH__+0x7000ab>
     80c:	80 93 aa 00 	sts	0x00AA, r24	; 0x8000aa <__TEXT_REGION_LENGTH__+0x7000aa>

00000810 <.Loc.92>:
    OCR5B = 20;
     810:	90 93 2b 01 	sts	0x012B, r25	; 0x80012b <__TEXT_REGION_LENGTH__+0x70012b>
     814:	80 93 2a 01 	sts	0x012A, r24	; 0x80012a <__TEXT_REGION_LENGTH__+0x70012a>

00000818 <.Loc.94>:
    ultrasonic_sync();
     818:	0e 94 a3 03 	call	0x746	; 0x746 <ultrasonic_sync>

0000081c <.LVL4>:
    ultrasonic_select(0);
     81c:	80 e0       	ldi	r24, 0x00	; 0
     81e:	0e 94 ac 03 	call	0x758	; 0x758 <ultrasonic_select>

00000822 <.LVL5>:
}
     822:	08 95       	ret

00000824 <get_left_distance>:
int get_left_distance(void){
        unsigned int value;
    ATOMIC_BLOCK(ATOMIC_RESTORESTATE) {  // Disables interrupts temporarily
        value = left_distance;
     824:	2f b7       	in	r18, 0x3f	; 63

00000826 <.LBB13>:
    return 1;
}

static __inline__ uint8_t __iCliRetVal(void)
{
    cli();
     826:	f8 94       	cli

00000828 <.LBE13>:
    }
     828:	80 91 72 02 	lds	r24, 0x0272	; 0x800272 <left_distance>
     82c:	90 91 73 02 	lds	r25, 0x0273	; 0x800273 <left_distance+0x1>

00000830 <.LBB15>:
    (void)__s;
}

static __inline__ void __iRestore(const  uint8_t *__s)
{
    SREG = *__s;
     830:	2f bf       	out	0x3f, r18	; 63

00000832 <.LBE12>:
    return value;
}

     832:	08 95       	ret

00000834 <get_right_distance>:
int get_right_distance(void){
        unsigned int value;
    ATOMIC_BLOCK(ATOMIC_RESTORESTATE) {  // Disables interrupts temporarily
        value = right_distance;
     834:	2f b7       	in	r18, 0x3f	; 63

00000836 <.LBB18>:
    cli();
     836:	f8 94       	cli

00000838 <.LBE18>:
    }
     838:	80 91 70 02 	lds	r24, 0x0270	; 0x800270 <right_distance>
     83c:	90 91 71 02 	lds	r25, 0x0271	; 0x800271 <right_distance+0x1>

00000840 <.LBB20>:
    SREG = *__s;
     840:	2f bf       	out	0x3f, r18	; 63

00000842 <.LBE17>:
    return value;
}
     842:	08 95       	ret

00000844 <init_gp_timer>:
    init_gp_timer();
}
// --- Init general purpose timer --- //
void init_gp_timer(void){
    // Mode 4 CTC, prescaler 64
    TCCR1A = 0;
     844:	10 92 80 00 	sts	0x0080, r1	; 0x800080 <__TEXT_REGION_LENGTH__+0x700080>

00000848 <.Loc.3>:
    TCCR1B = (1<<WGM12) | (1<<CS11) | (1<<CS10);
     848:	8b e0       	ldi	r24, 0x0B	; 11
     84a:	80 93 81 00 	sts	0x0081, r24	; 0x800081 <__TEXT_REGION_LENGTH__+0x700081>

0000084e <.Loc.5>:
    // OCR1A is top in mode 4
    OCR1A = GP_TIMER_TOP;
     84e:	88 ea       	ldi	r24, 0xA8	; 168
     850:	91 e6       	ldi	r25, 0x61	; 97
     852:	90 93 89 00 	sts	0x0089, r25	; 0x800089 <__TEXT_REGION_LENGTH__+0x700089>
     856:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x700088>

0000085a <.Loc.7>:
}
     85a:	08 95       	ret

0000085c <itermediate_control_init>:
    init_gp_timer();
     85c:	0e 94 22 04 	call	0x844	; 0x844 <init_gp_timer>

00000860 <.LVL0>:
}
     860:	08 95       	ret

00000862 <init>:
    basic_io_init();
     862:	0e 94 e6 01 	call	0x3cc	; 0x3cc <basic_io_init>

00000866 <.LVL1>:
    display_init();
     866:	0e 94 44 0d 	call	0x1a88	; 0x1a88 <display_init>

0000086a <.LBB4>:
    init_gp_timer();
     86a:	0e 94 22 04 	call	0x844	; 0x844 <init_gp_timer>

0000086e <.LBE4>:
    music_init();
     86e:	0e 94 7d 07 	call	0xefa	; 0xefa <music_init>

00000872 <.LVL4>:
    sei();
     872:	78 94       	sei

00000874 <.Loc.19>:
}
     874:	08 95       	ret

00000876 <gp_timer>:
// --- Genral purpose timer --- //
// Timers only returns 1 after it initially reaches 0. Then it can be set again
char gp_timer(int set_value){
     876:	28 2f       	mov	r18, r24
     878:	39 2f       	mov	r19, r25

0000087a <.Loc.22>:
    static int count = -1;
    // Reset timer
    if(set_value == -1){
     87a:	2f 3f       	cpi	r18, 0xFF	; 255
     87c:	32 07       	cpc	r19, r18
     87e:	c9 f0       	breq	.+50     	; 0x8b2 <.L5>

00000880 <.Loc.25>:
        count = -1;
    }
    // Set value if not running
    if(count == -1){
     880:	80 91 00 02 	lds	r24, 0x0200	; 0x800200 <count.14>
     884:	90 91 01 02 	lds	r25, 0x0201	; 0x800201 <count.14+0x1>

00000888 <.Loc.27>:
     888:	8f 3f       	cpi	r24, 0xFF	; 255
     88a:	98 07       	cpc	r25, r24
     88c:	91 f0       	breq	.+36     	; 0x8b2 <.L5>

0000088e <.Loc.28>:
        count = set_value;
        TIFR1 = (1<<OCF1A);
        TCNT1 = 0;
    }
    // If running, count down on flag
    else if(count > 0){
     88e:	18 16       	cp	r1, r24
     890:	19 06       	cpc	r1, r25
     892:	dc f4       	brge	.+54     	; 0x8ca <.L8>

00000894 <.Loc.30>:
        if(TIFR1 & (1<<OCF1A)){
     894:	b1 9b       	sbis	0x16, 1	; 22
     896:	25 c0       	rjmp	.+74     	; 0x8e2 <.L9>

00000898 <.Loc.32>:
            TIFR1 = (1<<OCF1A);
     898:	82 e0       	ldi	r24, 0x02	; 2
     89a:	86 bb       	out	0x16, r24	; 22

0000089c <.Loc.34>:
            count--;
     89c:	80 91 00 02 	lds	r24, 0x0200	; 0x800200 <count.14>
     8a0:	90 91 01 02 	lds	r25, 0x0201	; 0x800201 <count.14+0x1>
     8a4:	01 97       	sbiw	r24, 0x01	; 1
     8a6:	90 93 01 02 	sts	0x0201, r25	; 0x800201 <count.14+0x1>
     8aa:	80 93 00 02 	sts	0x0200, r24	; 0x800200 <count.14>

000008ae <.Loc.36>:
    // If 0 is reached, return 1
    else if(count == 0){
        count = -1;
        return 1;
    }
    return 0;
     8ae:	80 e0       	ldi	r24, 0x00	; 0
     8b0:	08 95       	ret

000008b2 <.L5>:
        count = set_value;
     8b2:	30 93 01 02 	sts	0x0201, r19	; 0x800201 <count.14+0x1>
     8b6:	20 93 00 02 	sts	0x0200, r18	; 0x800200 <count.14>

000008ba <.Loc.39>:
        TIFR1 = (1<<OCF1A);
     8ba:	82 e0       	ldi	r24, 0x02	; 2
     8bc:	86 bb       	out	0x16, r24	; 22

000008be <.Loc.41>:
        TCNT1 = 0;
     8be:	10 92 85 00 	sts	0x0085, r1	; 0x800085 <__TEXT_REGION_LENGTH__+0x700085>
     8c2:	10 92 84 00 	sts	0x0084, r1	; 0x800084 <__TEXT_REGION_LENGTH__+0x700084>

000008c6 <.Loc.43>:
    return 0;
     8c6:	80 e0       	ldi	r24, 0x00	; 0
     8c8:	08 95       	ret

000008ca <.L8>:
    else if(count == 0){
     8ca:	89 2b       	or	r24, r25
     8cc:	11 f0       	breq	.+4      	; 0x8d2 <.L11>

000008ce <.Loc.46>:
    return 0;
     8ce:	80 e0       	ldi	r24, 0x00	; 0

000008d0 <.Loc.47>:
}
     8d0:	08 95       	ret

000008d2 <.L11>:
        count = -1;
     8d2:	8f ef       	ldi	r24, 0xFF	; 255
     8d4:	9f ef       	ldi	r25, 0xFF	; 255
     8d6:	90 93 01 02 	sts	0x0201, r25	; 0x800201 <count.14+0x1>
     8da:	80 93 00 02 	sts	0x0200, r24	; 0x800200 <count.14>

000008de <.Loc.50>:
        return 1;
     8de:	81 e0       	ldi	r24, 0x01	; 1
     8e0:	08 95       	ret

000008e2 <.L9>:
    return 0;
     8e2:	80 e0       	ldi	r24, 0x00	; 0
     8e4:	08 95       	ret

000008e6 <wall_detected>:
// --- detect path walls --- //
char wall_detected(void){
     8e6:	0f 93       	push	r16
     8e8:	1f 93       	push	r17
     8ea:	cf 93       	push	r28
     8ec:	df 93       	push	r29

000008ee <.Loc.54>:
    static int last_detection = 0;
    int left;
    int right;
    left = get_left_distance();
     8ee:	0e 94 12 04 	call	0x824	; 0x824 <get_left_distance>

000008f2 <.LVL7>:
     8f2:	c8 2f       	mov	r28, r24
     8f4:	d9 2f       	mov	r29, r25

000008f6 <.Loc.59>:
    right = get_right_distance();
     8f6:	0e 94 1a 04 	call	0x834	; 0x834 <get_right_distance>

000008fa <.LVL9>:
     8fa:	08 2f       	mov	r16, r24
     8fc:	19 2f       	mov	r17, r25

000008fe <.Loc.61>:
    if(gp_timer(SENSOR_TIMING)){
     8fe:	81 e0       	ldi	r24, 0x01	; 1
     900:	90 e0       	ldi	r25, 0x00	; 0
     902:	0e 94 3b 04 	call	0x876	; 0x876 <gp_timer>

00000906 <.LVL11>:
     906:	88 23       	and	r24, r24
     908:	29 f1       	breq	.+74     	; 0x954 <.L12>

0000090a <.Loc.64>:
        // Check for detections within set range
        if(left >= WALL_MIN_RANGE && left <= WALL_MAX_RANGE && right >= WALL_MIN_RANGE && right <= WALL_MAX_RANGE){
     90a:	21 97       	sbiw	r28, 0x01	; 1

0000090c <.Loc.66>:
     90c:	69 97       	sbiw	r28, 0x19	; 25
     90e:	e8 f4       	brcc	.+58     	; 0x94a <.L14>

00000910 <.Loc.67>:
     910:	01 50       	subi	r16, 0x01	; 1
     912:	11 09       	sbc	r17, r1

00000914 <.Loc.68>:
     914:	09 31       	cpi	r16, 0x19	; 25
     916:	11 05       	cpc	r17, r1
     918:	c0 f4       	brcc	.+48     	; 0x94a <.L14>

0000091a <.Loc.69>:
            if(last_detection >= PATH_SENSITIVITY){
     91a:	80 91 8d 02 	lds	r24, 0x028D	; 0x80028d <last_detection.13>
     91e:	90 91 8e 02 	lds	r25, 0x028E	; 0x80028e <last_detection.13+0x1>

00000922 <.Loc.71>:
     922:	84 30       	cpi	r24, 0x04	; 4
     924:	91 05       	cpc	r25, r1
     926:	3c f4       	brge	.+14     	; 0x936 <.L16>

00000928 <.Loc.72>:
                last_detection = 0;
                // Reset timer
                gp_timer(-1);
                return 1;
            }
            last_detection++;
     928:	01 96       	adiw	r24, 0x01	; 1
     92a:	90 93 8e 02 	sts	0x028E, r25	; 0x80028e <last_detection.13+0x1>
     92e:	80 93 8d 02 	sts	0x028D, r24	; 0x80028d <last_detection.13>

00000932 <.Loc.74>:
        }
        else{
            last_detection = 0;
        }
    }
    return 0;
     932:	80 e0       	ldi	r24, 0x00	; 0

00000934 <.Loc.75>:
            last_detection++;
     934:	0f c0       	rjmp	.+30     	; 0x954 <.L12>

00000936 <.L16>:
                last_detection = 0;
     936:	10 92 8e 02 	sts	0x028E, r1	; 0x80028e <last_detection.13+0x1>
     93a:	10 92 8d 02 	sts	0x028D, r1	; 0x80028d <last_detection.13>

0000093e <.Loc.78>:
                gp_timer(-1);
     93e:	8f ef       	ldi	r24, 0xFF	; 255
     940:	9f ef       	ldi	r25, 0xFF	; 255
     942:	0e 94 3b 04 	call	0x876	; 0x876 <gp_timer>

00000946 <.LVL14>:
                return 1;
     946:	81 e0       	ldi	r24, 0x01	; 1
     948:	05 c0       	rjmp	.+10     	; 0x954 <.L12>

0000094a <.L14>:
            last_detection = 0;
     94a:	10 92 8e 02 	sts	0x028E, r1	; 0x80028e <last_detection.13+0x1>
     94e:	10 92 8d 02 	sts	0x028D, r1	; 0x80028d <last_detection.13>

00000952 <.Loc.83>:
    return 0;
     952:	80 e0       	ldi	r24, 0x00	; 0

00000954 <.L12>:
}
     954:	df 91       	pop	r29
     956:	cf 91       	pop	r28
     958:	1f 91       	pop	r17
     95a:	0f 91       	pop	r16
     95c:	08 95       	ret

0000095e <check_path_end>:
// Check if AGV is still in path
char check_path_end(void){
    static int last_detection = 0;
    if(gp_timer(SENSOR_TIMING)){
     95e:	81 e0       	ldi	r24, 0x01	; 1
     960:	90 e0       	ldi	r25, 0x00	; 0
     962:	0e 94 3b 04 	call	0x876	; 0x876 <gp_timer>

00000966 <.LVL17>:
     966:	81 11       	cpse	r24, r1
     968:	01 c0       	rjmp	.+2      	; 0x96c <.L21>

0000096a <.L17>:
        else{
            last_detection = 0;
        }
    }
    return 0;
}
     96a:	08 95       	ret

0000096c <.L21>:
        if(get_left_distance() > WALL_MAX_RANGE && get_right_distance() > WALL_MAX_RANGE){
     96c:	0e 94 12 04 	call	0x824	; 0x824 <get_left_distance>

00000970 <.LVL18>:
     970:	4a 97       	sbiw	r24, 0x1a	; 26
     972:	34 f4       	brge	.+12     	; 0x980 <.L22>

00000974 <.L19>:
            last_detection = 0;
     974:	10 92 8c 02 	sts	0x028C, r1	; 0x80028c <last_detection.12+0x1>
     978:	10 92 8b 02 	sts	0x028B, r1	; 0x80028b <last_detection.12>

0000097c <.Loc.96>:
    return 0;
     97c:	80 e0       	ldi	r24, 0x00	; 0
     97e:	f5 cf       	rjmp	.-22     	; 0x96a <.L17>

00000980 <.L22>:
        if(get_left_distance() > WALL_MAX_RANGE && get_right_distance() > WALL_MAX_RANGE){
     980:	0e 94 1a 04 	call	0x834	; 0x834 <get_right_distance>

00000984 <.LVL19>:
     984:	4a 97       	sbiw	r24, 0x1a	; 26
     986:	b4 f3       	brlt	.-20     	; 0x974 <.L19>

00000988 <.Loc.100>:
            if(last_detection >= PATH_SENSITIVITY){
     988:	80 91 8b 02 	lds	r24, 0x028B	; 0x80028b <last_detection.12>
     98c:	90 91 8c 02 	lds	r25, 0x028C	; 0x80028c <last_detection.12+0x1>

00000990 <.Loc.101>:
     990:	84 30       	cpi	r24, 0x04	; 4
     992:	91 05       	cpc	r25, r1
     994:	3c f4       	brge	.+14     	; 0x9a4 <.L23>

00000996 <.Loc.102>:
            last_detection++;
     996:	01 96       	adiw	r24, 0x01	; 1
     998:	90 93 8c 02 	sts	0x028C, r25	; 0x80028c <last_detection.12+0x1>
     99c:	80 93 8b 02 	sts	0x028B, r24	; 0x80028b <last_detection.12>

000009a0 <.Loc.104>:
    return 0;
     9a0:	80 e0       	ldi	r24, 0x00	; 0

000009a2 <.Loc.105>:
            last_detection++;
     9a2:	08 95       	ret

000009a4 <.L23>:
                last_detection = 0;
     9a4:	10 92 8c 02 	sts	0x028C, r1	; 0x80028c <last_detection.12+0x1>
     9a8:	10 92 8b 02 	sts	0x028B, r1	; 0x80028b <last_detection.12>

000009ac <.Loc.108>:
                gp_timer(-1);
     9ac:	8f ef       	ldi	r24, 0xFF	; 255
     9ae:	9f ef       	ldi	r25, 0xFF	; 255
     9b0:	0e 94 3b 04 	call	0x876	; 0x876 <gp_timer>

000009b4 <.LVL20>:
                return 1;
     9b4:	81 e0       	ldi	r24, 0x01	; 1
     9b6:	08 95       	ret

000009b8 <donk_detection>:
// --- detect packages --- //
char donk_detection(char *mem_left, char *mem_right){
     9b8:	0f 93       	push	r16
     9ba:	1f 93       	push	r17
     9bc:	cf 93       	push	r28
     9be:	df 93       	push	r29
     9c0:	c8 2f       	mov	r28, r24
     9c2:	d9 2f       	mov	r29, r25
     9c4:	06 2f       	mov	r16, r22
     9c6:	17 2f       	mov	r17, r23

000009c8 <.Loc.113>:
    // Mem can only be reset, not set
    if(!donk_left()){
     9c8:	0e 94 e5 00 	call	0x1ca	; 0x1ca <donk_left>

000009cc <.LVL22>:
     9cc:	81 11       	cpse	r24, r1
     9ce:	01 c0       	rjmp	.+2      	; 0x9d2 <.L25>

000009d0 <.Loc.116>:
        *mem_left = 0;
     9d0:	18 82       	st	Y, r1

000009d2 <.L25>:
    }
    if(!donk_right()){
     9d2:	0e 94 ed 00 	call	0x1da	; 0x1da <donk_right>

000009d6 <.LVL23>:
     9d6:	81 11       	cpse	r24, r1
     9d8:	02 c0       	rjmp	.+4      	; 0x9de <.L26>

000009da <.Loc.121>:
        *mem_right = 0;
     9da:	f8 01       	movw	r30, r16
     9dc:	10 82       	st	Z, r1

000009de <.L26>:
    }
    // Return 1 if detected and not detected before in previous cycle
     if((donk_left() && !*mem_left) ||(donk_right() && !*mem_right)){
     9de:	0e 94 e5 00 	call	0x1ca	; 0x1ca <donk_left>

000009e2 <.LVL24>:
     9e2:	88 23       	and	r24, r24
     9e4:	19 f0       	breq	.+6      	; 0x9ec <.L27>

000009e6 <.Loc.126>:
     9e6:	88 81       	ld	r24, Y
     9e8:	88 23       	and	r24, r24
     9ea:	51 f0       	breq	.+20     	; 0xa00 <.L28>

000009ec <.L27>:
     9ec:	0e 94 ed 00 	call	0x1da	; 0x1da <donk_right>

000009f0 <.LVL25>:
     9f0:	88 23       	and	r24, r24
     9f2:	71 f0       	breq	.+28     	; 0xa10 <.L24>

000009f4 <.Loc.129>:
     9f4:	f8 01       	movw	r30, r16
     9f6:	80 81       	ld	r24, Z
     9f8:	88 23       	and	r24, r24
     9fa:	11 f0       	breq	.+4      	; 0xa00 <.L28>

000009fc <.Loc.130>:
        *mem_left = donk_left();
        *mem_right = donk_right();
        return 1;
     }
    return 0;
     9fc:	80 e0       	ldi	r24, 0x00	; 0
     9fe:	08 c0       	rjmp	.+16     	; 0xa10 <.L24>

00000a00 <.L28>:
        *mem_left = donk_left();
     a00:	0e 94 e5 00 	call	0x1ca	; 0x1ca <donk_left>

00000a04 <.LVL26>:
     a04:	88 83       	st	Y, r24

00000a06 <.Loc.134>:
        *mem_right = donk_right();
     a06:	0e 94 ed 00 	call	0x1da	; 0x1da <donk_right>

00000a0a <.LVL27>:
     a0a:	f8 01       	movw	r30, r16
     a0c:	80 83       	st	Z, r24

00000a0e <.Loc.137>:
        return 1;
     a0e:	81 e0       	ldi	r24, 0x01	; 1

00000a10 <.L24>:
}
     a10:	df 91       	pop	r29
     a12:	cf 91       	pop	r28
     a14:	1f 91       	pop	r17
     a16:	0f 91       	pop	r16
     a18:	08 95       	ret

00000a1a <path_steering>:
// --- Steering and speed control inside path --- //
void path_steering(void){
     a1a:	cf 93       	push	r28
     a1c:	df 93       	push	r29

00000a1e <.Loc.141>:
    static int steering_error = 0;
    int left;
    int right;
    left = get_left_distance();
     a1e:	0e 94 12 04 	call	0x824	; 0x824 <get_left_distance>

00000a22 <.LVL28>:
     a22:	c8 2f       	mov	r28, r24
     a24:	d9 2f       	mov	r29, r25

00000a26 <.Loc.146>:
    right = get_right_distance();
     a26:	0e 94 1a 04 	call	0x834	; 0x834 <get_right_distance>

00000a2a <.LVL30>:
     a2a:	28 2f       	mov	r18, r24
     a2c:	39 2f       	mov	r19, r25

00000a2e <.Loc.148>:
    // - Error calculation - //
    // Calculate error, if both are readings are within range, use both for error calc
    if(left <= ERROR_MAX_DISTANCE && right <= ERROR_MAX_DISTANCE){
     a2e:	cf 30       	cpi	r28, 0x0F	; 15
     a30:	d1 05       	cpc	r29, r1
     a32:	3c f5       	brge	.+78     	; 0xa82 <.L32>

00000a34 <.Loc.150>:
     a34:	2f 30       	cpi	r18, 0x0F	; 15
     a36:	31 05       	cpc	r19, r1
     a38:	cc f4       	brge	.+50     	; 0xa6c <.L33>

00000a3a <.Loc.151>:
        steering_error = (right - left);
     a3a:	2c 1b       	sub	r18, r28
     a3c:	3d 0b       	sbc	r19, r29

00000a3e <.Loc.153>:
     a3e:	30 93 8a 02 	sts	0x028A, r19	; 0x80028a <steering_error.11+0x1>
     a42:	20 93 89 02 	sts	0x0289, r18	; 0x800289 <steering_error.11>

00000a46 <.L34>:
    else if(right <= ERROR_MAX_DISTANCE){
        steering_error = 2*(right - ERROR_CENTER_DISTANCE);
    }
    // - Steering - //
    // Go straight if error is within allowed range
    if((steering_error >= -ALLOWED_STEERING_ERROR) && (steering_error <= ALLOWED_STEERING_ERROR)){
     a46:	80 91 89 02 	lds	r24, 0x0289	; 0x800289 <steering_error.11>
     a4a:	90 91 8a 02 	lds	r25, 0x028A	; 0x80028a <steering_error.11+0x1>
     a4e:	9c 01       	movw	r18, r24
     a50:	2f 5f       	subi	r18, 0xFF	; 255
     a52:	3f 4f       	sbci	r19, 0xFF	; 255

00000a54 <.Loc.156>:
     a54:	23 30       	cpi	r18, 0x03	; 3
     a56:	31 05       	cpc	r19, r1
     a58:	00 f5       	brcc	.+64     	; 0xa9a <.L35>

00000a5a <.Loc.157>:
        stepper_control(CRUISE_SPEED, 0);
     a5a:	60 e0       	ldi	r22, 0x00	; 0
     a5c:	70 e0       	ldi	r23, 0x00	; 0
     a5e:	8a e0       	ldi	r24, 0x0A	; 10
     a60:	90 e0       	ldi	r25, 0x00	; 0
     a62:	0e 94 87 0b 	call	0x170e	; 0x170e <stepper_control>

00000a66 <.L31>:
    }
    // Make steering corrections proportional to error
    else{
        stepper_control(CRUISE_SPEED, steering_error*STEERING_MULTIPLIER);
    }
}
     a66:	df 91       	pop	r29
     a68:	cf 91       	pop	r28
     a6a:	08 95       	ret

00000a6c <.L33>:
        steering_error = -2*(left - ERROR_CENTER_DISTANCE);
     a6c:	2a 97       	sbiw	r28, 0x0a	; 10

00000a6e <.Loc.162>:
     a6e:	d1 95       	neg	r29
     a70:	c1 95       	neg	r28
     a72:	d1 09       	sbc	r29, r1

00000a74 <.Loc.163>:
     a74:	cc 0f       	add	r28, r28
     a76:	dd 1f       	adc	r29, r29

00000a78 <.Loc.164>:
     a78:	d0 93 8a 02 	sts	0x028A, r29	; 0x80028a <steering_error.11+0x1>
     a7c:	c0 93 89 02 	sts	0x0289, r28	; 0x800289 <steering_error.11>
     a80:	e2 cf       	rjmp	.-60     	; 0xa46 <.L34>

00000a82 <.L32>:
    else if(right <= ERROR_MAX_DISTANCE){
     a82:	2f 30       	cpi	r18, 0x0F	; 15
     a84:	31 05       	cpc	r19, r1
     a86:	fc f6       	brge	.-66     	; 0xa46 <.L34>

00000a88 <.Loc.167>:
        steering_error = 2*(right - ERROR_CENTER_DISTANCE);
     a88:	2a 50       	subi	r18, 0x0A	; 10
     a8a:	31 09       	sbc	r19, r1

00000a8c <.Loc.169>:
     a8c:	22 0f       	add	r18, r18
     a8e:	33 1f       	adc	r19, r19

00000a90 <.Loc.170>:
     a90:	30 93 8a 02 	sts	0x028A, r19	; 0x80028a <steering_error.11+0x1>
     a94:	20 93 89 02 	sts	0x0289, r18	; 0x800289 <steering_error.11>
     a98:	d6 cf       	rjmp	.-84     	; 0xa46 <.L34>

00000a9a <.L35>:
        stepper_control(CRUISE_SPEED, steering_error*STEERING_MULTIPLIER);
     a9a:	bc 01       	movw	r22, r24
     a9c:	66 0f       	add	r22, r22
     a9e:	77 1f       	adc	r23, r23
     aa0:	66 0f       	add	r22, r22
     aa2:	77 1f       	adc	r23, r23
     aa4:	66 0f       	add	r22, r22
     aa6:	77 1f       	adc	r23, r23
     aa8:	68 1b       	sub	r22, r24
     aaa:	79 0b       	sbc	r23, r25
     aac:	8a e0       	ldi	r24, 0x0A	; 10
     aae:	90 e0       	ldi	r25, 0x00	; 0
     ab0:	0e 94 87 0b 	call	0x170e	; 0x170e <stepper_control>

00000ab4 <.LVL43>:
}
     ab4:	d8 cf       	rjmp	.-80     	; 0xa66 <.L31>

00000ab6 <person_steering>:
// --- Steering and speed control when following person --- //
char person_steering(int fol_dist){
     ab6:	cf 93       	push	r28
     ab8:	df 93       	push	r29
     aba:	c8 2f       	mov	r28, r24
     abc:	d9 2f       	mov	r29, r25

00000abe <.Loc.175>:
    static int right;
    static int distance;
    static char previous_limit_reached;
    static int error;
    static int speed;
    left = get_left_distance();
     abe:	0e 94 12 04 	call	0x824	; 0x824 <get_left_distance>

00000ac2 <.LVL45>:
     ac2:	90 93 88 02 	sts	0x0288, r25	; 0x800288 <left.10+0x1>
     ac6:	80 93 87 02 	sts	0x0287, r24	; 0x800287 <left.10>

00000aca <.Loc.184>:
    right = get_right_distance();
     aca:	0e 94 1a 04 	call	0x834	; 0x834 <get_right_distance>

00000ace <.LVL46>:
     ace:	28 2f       	mov	r18, r24
     ad0:	39 2f       	mov	r19, r25

00000ad2 <.Loc.186>:
     ad2:	30 93 86 02 	sts	0x0286, r19	; 0x800286 <right.9+0x1>
     ad6:	20 93 85 02 	sts	0x0285, r18	; 0x800285 <right.9>

00000ada <.Loc.187>:
    error = left - right;
     ada:	40 91 87 02 	lds	r20, 0x0287	; 0x800287 <left.10>
     ade:	50 91 88 02 	lds	r21, 0x0288	; 0x800288 <left.10+0x1>
     ae2:	ca 01       	movw	r24, r20
     ae4:	82 1b       	sub	r24, r18
     ae6:	93 0b       	sbc	r25, r19

00000ae8 <.Loc.189>:
    // Go straight when person is in the middle
    if(error < FOLLOW_DISTANCE_MARGIN && error > -FOLLOW_DISTANCE_MARGIN){
     ae8:	bc 01       	movw	r22, r24
     aea:	62 5f       	subi	r22, 0xF2	; 242
     aec:	7f 4f       	sbci	r23, 0xFF	; 255

00000aee <.Loc.191>:
     aee:	6d 31       	cpi	r22, 0x1D	; 29
     af0:	71 05       	cpc	r23, r1
     af2:	08 f4       	brcc	.+2      	; 0xaf6 <.Loc.192>

00000af4 <L0^A>:
     af4:	4e c0       	rjmp	.+156    	; 0xb92 <.L51>

00000af6 <.Loc.192>:
        // Drive straight
        stepper_control(speed, 0);
        display_number(distance);
    }
    // Go to the right when person is on the right
    else if(error >= FOLLOW_DISTANCE_MARGIN){
     af6:	0f 97       	sbiw	r24, 0x0f	; 15
     af8:	0c f4       	brge	.+2      	; 0xafc <.Loc.194>

00000afa <L0^A>:
     afa:	6c c0       	rjmp	.+216    	; 0xbd4 <.L41>

00000afc <.Loc.194>:
        // Slower steering when stationary
        if(speed == 0){
     afc:	80 91 81 02 	lds	r24, 0x0281	; 0x800281 <speed.6>
     b00:	90 91 82 02 	lds	r25, 0x0282	; 0x800282 <speed.6+0x1>

00000b04 <.Loc.196>:
     b04:	00 97       	sbiw	r24, 0x00	; 0
     b06:	09 f0       	breq	.+2      	; 0xb0a <.Loc.197>

00000b08 <L0^A>:
     b08:	60 c0       	rjmp	.+192    	; 0xbca <.L42>

00000b0a <.Loc.197>:
            stepper_control(0, 6);
     b0a:	66 e0       	ldi	r22, 0x06	; 6
     b0c:	70 e0       	ldi	r23, 0x00	; 0
     b0e:	80 e0       	ldi	r24, 0x00	; 0
     b10:	90 e0       	ldi	r25, 0x00	; 0
     b12:	0e 94 87 0b 	call	0x170e	; 0x170e <stepper_control>

00000b16 <.L43>:
        }
        else{
            stepper_control(speed, FOLLOW_STEERING);
        }
        distance = right;
     b16:	80 91 85 02 	lds	r24, 0x0285	; 0x800285 <right.9>
     b1a:	90 91 86 02 	lds	r25, 0x0286	; 0x800286 <right.9+0x1>
     b1e:	90 93 84 02 	sts	0x0284, r25	; 0x800284 <distance.7+0x1>
     b22:	80 93 83 02 	sts	0x0283, r24	; 0x800283 <distance.7>

00000b26 <.Loc.200>:
        display_rght();
     b26:	0e 94 1c 0e 	call	0x1c38	; 0x1c38 <display_rght>

00000b2a <.L40>:
        }
        distance = left;
        display_left();
    }
    // Calculate speed
    speed = CLAMP((distance - fol_dist)*FOLLOW_SPEED_MULTIPLIER, 0, 100);
     b2a:	80 91 83 02 	lds	r24, 0x0283	; 0x800283 <distance.7>
     b2e:	90 91 84 02 	lds	r25, 0x0284	; 0x800284 <distance.7+0x1>
     b32:	8c 1b       	sub	r24, r28
     b34:	9d 0b       	sbc	r25, r29
     b36:	85 36       	cpi	r24, 0x65	; 101
     b38:	91 05       	cpc	r25, r1
     b3a:	14 f0       	brlt	.+4      	; 0xb40 <.L46>
     b3c:	84 e6       	ldi	r24, 0x64	; 100
     b3e:	90 e0       	ldi	r25, 0x00	; 0

00000b40 <.L46>:
     b40:	99 23       	and	r25, r25
     b42:	0c f4       	brge	.+2      	; 0xb46 <.L47>

00000b44 <L0^A>:
     b44:	63 c0       	rjmp	.+198    	; 0xc0c <.L52>

00000b46 <.L47>:
     b46:	90 93 82 02 	sts	0x0282, r25	; 0x800282 <speed.6+0x1>
     b4a:	80 93 81 02 	sts	0x0281, r24	; 0x800281 <speed.6>

00000b4e <.Loc.204>:
    // Check if person is still within range
    if(gp_timer(SENSOR_TIMING)){
     b4e:	81 e0       	ldi	r24, 0x01	; 1
     b50:	90 e0       	ldi	r25, 0x00	; 0
     b52:	0e 94 3b 04 	call	0x876	; 0x876 <gp_timer>

00000b56 <.LVL49>:
     b56:	88 23       	and	r24, r24
     b58:	09 f4       	brne	.+2      	; 0xb5c <.Loc.207>

00000b5a <L0^A>:
     b5a:	66 c0       	rjmp	.+204    	; 0xc28 <.L37>

00000b5c <.Loc.207>:
        // Person needs to be out of range for set time
        if(left > fol_dist + FOLLOW_DISTANCE_LIMIT && right > fol_dist + FOLLOW_DISTANCE_LIMIT){
     b5c:	e2 96       	adiw	r28, 0x32	; 50

00000b5e <.Loc.209>:
     b5e:	80 91 87 02 	lds	r24, 0x0287	; 0x800287 <left.10>
     b62:	90 91 88 02 	lds	r25, 0x0288	; 0x800288 <left.10+0x1>
     b66:	c8 17       	cp	r28, r24
     b68:	d9 07       	cpc	r29, r25
     b6a:	0c f0       	brlt	.+2      	; 0xb6e <.Loc.210>

00000b6c <L0^A>:
     b6c:	5a c0       	rjmp	.+180    	; 0xc22 <.L49>

00000b6e <.Loc.210>:
     b6e:	80 91 85 02 	lds	r24, 0x0285	; 0x800285 <right.9>
     b72:	90 91 86 02 	lds	r25, 0x0286	; 0x800286 <right.9+0x1>
     b76:	c8 17       	cp	r28, r24
     b78:	d9 07       	cpc	r29, r25
     b7a:	0c f0       	brlt	.+2      	; 0xb7e <.Loc.211>

00000b7c <L0^A>:
     b7c:	52 c0       	rjmp	.+164    	; 0xc22 <.L49>

00000b7e <.Loc.211>:
            if(previous_limit_reached >= PERSON_SENSITIVITY){
     b7e:	80 91 80 02 	lds	r24, 0x0280	; 0x800280 <previous_limit_reached.5>

00000b82 <.Loc.213>:
     b82:	82 30       	cpi	r24, 0x02	; 2
     b84:	0c f0       	brlt	.+2      	; 0xb88 <.Loc.214>

00000b86 <L0^A>:
     b86:	45 c0       	rjmp	.+138    	; 0xc12 <.L53>

00000b88 <.Loc.214>:
                previous_limit_reached = 0;
                // reset timer
                gp_timer(-1);
                return 1;
            }
            previous_limit_reached++;
     b88:	8f 5f       	subi	r24, 0xFF	; 255
     b8a:	80 93 80 02 	sts	0x0280, r24	; 0x800280 <previous_limit_reached.5>

00000b8e <.Loc.216>:
        }
        else{
            previous_limit_reached = 0;
        }
    }
    return 0;
     b8e:	80 e0       	ldi	r24, 0x00	; 0

00000b90 <.Loc.217>:
            previous_limit_reached++;
     b90:	4b c0       	rjmp	.+150    	; 0xc28 <.L37>

00000b92 <.L51>:
        distance = (left + right) / 2;
     b92:	24 0f       	add	r18, r20
     b94:	35 1f       	adc	r19, r21

00000b96 <.Loc.220>:
     b96:	33 23       	and	r19, r19
     b98:	ac f0       	brlt	.+42     	; 0xbc4 <.L54>

00000b9a <.L39>:
     b9a:	35 95       	asr	r19
     b9c:	27 95       	ror	r18

00000b9e <.Loc.221>:
     b9e:	30 93 84 02 	sts	0x0284, r19	; 0x800284 <distance.7+0x1>
     ba2:	20 93 83 02 	sts	0x0283, r18	; 0x800283 <distance.7>

00000ba6 <.Loc.222>:
        stepper_control(speed, 0);
     ba6:	60 e0       	ldi	r22, 0x00	; 0
     ba8:	70 e0       	ldi	r23, 0x00	; 0
     baa:	80 91 81 02 	lds	r24, 0x0281	; 0x800281 <speed.6>
     bae:	90 91 82 02 	lds	r25, 0x0282	; 0x800282 <speed.6+0x1>
     bb2:	0e 94 87 0b 	call	0x170e	; 0x170e <stepper_control>

00000bb6 <.LVL50>:
        display_number(distance);
     bb6:	80 91 83 02 	lds	r24, 0x0283	; 0x800283 <distance.7>
     bba:	90 91 84 02 	lds	r25, 0x0284	; 0x800284 <distance.7+0x1>
     bbe:	0e 94 95 0c 	call	0x192a	; 0x192a <display_number>

00000bc2 <.LVL51>:
     bc2:	b3 cf       	rjmp	.-154    	; 0xb2a <.L40>

00000bc4 <.L54>:
        distance = (left + right) / 2;
     bc4:	2f 5f       	subi	r18, 0xFF	; 255
     bc6:	3f 4f       	sbci	r19, 0xFF	; 255
     bc8:	e8 cf       	rjmp	.-48     	; 0xb9a <.L39>

00000bca <.L42>:
            stepper_control(speed, FOLLOW_STEERING);
     bca:	6c e3       	ldi	r22, 0x3C	; 60
     bcc:	70 e0       	ldi	r23, 0x00	; 0
     bce:	0e 94 87 0b 	call	0x170e	; 0x170e <stepper_control>

00000bd2 <.LVL52>:
     bd2:	a1 cf       	rjmp	.-190    	; 0xb16 <.L43>

00000bd4 <.L41>:
        if(speed == 0){
     bd4:	80 91 81 02 	lds	r24, 0x0281	; 0x800281 <speed.6>
     bd8:	90 91 82 02 	lds	r25, 0x0282	; 0x800282 <speed.6+0x1>

00000bdc <.Loc.228>:
     bdc:	00 97       	sbiw	r24, 0x00	; 0
     bde:	89 f4       	brne	.+34     	; 0xc02 <.L44>

00000be0 <.Loc.229>:
            stepper_control(0, -6);
     be0:	6a ef       	ldi	r22, 0xFA	; 250
     be2:	7f ef       	ldi	r23, 0xFF	; 255
     be4:	80 e0       	ldi	r24, 0x00	; 0
     be6:	90 e0       	ldi	r25, 0x00	; 0
     be8:	0e 94 87 0b 	call	0x170e	; 0x170e <stepper_control>

00000bec <.L45>:
        distance = left;
     bec:	80 91 87 02 	lds	r24, 0x0287	; 0x800287 <left.10>
     bf0:	90 91 88 02 	lds	r25, 0x0288	; 0x800288 <left.10+0x1>
     bf4:	90 93 84 02 	sts	0x0284, r25	; 0x800284 <distance.7+0x1>
     bf8:	80 93 83 02 	sts	0x0283, r24	; 0x800283 <distance.7>

00000bfc <.Loc.232>:
        display_left();
     bfc:	0e 94 07 0e 	call	0x1c0e	; 0x1c0e <display_left>

00000c00 <.LVL54>:
     c00:	94 cf       	rjmp	.-216    	; 0xb2a <.L40>

00000c02 <.L44>:
           stepper_control(speed, -FOLLOW_STEERING);
     c02:	64 ec       	ldi	r22, 0xC4	; 196
     c04:	7f ef       	ldi	r23, 0xFF	; 255
     c06:	0e 94 87 0b 	call	0x170e	; 0x170e <stepper_control>

00000c0a <.LVL55>:
     c0a:	f0 cf       	rjmp	.-32     	; 0xbec <.L45>

00000c0c <.L52>:
    speed = CLAMP((distance - fol_dist)*FOLLOW_SPEED_MULTIPLIER, 0, 100);
     c0c:	80 e0       	ldi	r24, 0x00	; 0
     c0e:	90 e0       	ldi	r25, 0x00	; 0
     c10:	9a cf       	rjmp	.-204    	; 0xb46 <.L47>

00000c12 <.L53>:
                previous_limit_reached = 0;
     c12:	10 92 80 02 	sts	0x0280, r1	; 0x800280 <previous_limit_reached.5>

00000c16 <.Loc.237>:
                gp_timer(-1);
     c16:	8f ef       	ldi	r24, 0xFF	; 255
     c18:	9f ef       	ldi	r25, 0xFF	; 255
     c1a:	0e 94 3b 04 	call	0x876	; 0x876 <gp_timer>

00000c1e <.LVL56>:
                return 1;
     c1e:	81 e0       	ldi	r24, 0x01	; 1
     c20:	03 c0       	rjmp	.+6      	; 0xc28 <.L37>

00000c22 <.L49>:
            previous_limit_reached = 0;
     c22:	10 92 80 02 	sts	0x0280, r1	; 0x800280 <previous_limit_reached.5>

00000c26 <.Loc.242>:
    return 0;
     c26:	80 e0       	ldi	r24, 0x00	; 0

00000c28 <.L37>:
}
     c28:	df 91       	pop	r29
     c2a:	cf 91       	pop	r28
     c2c:	08 95       	ret

00000c2e <set_first_turn>:

// First turn user entry
void set_first_turn(char *turn){
     c2e:	cf 93       	push	r28
     c30:	df 93       	push	r29
     c32:	c8 2f       	mov	r28, r24
     c34:	d9 2f       	mov	r29, r25

00000c36 <.Loc.246>:
    if(plus_pressed_once() || minus_pressed_once()){
     c36:	0e 94 0c 01 	call	0x218	; 0x218 <plus_pressed_once>

00000c3a <.LVL58>:
     c3a:	88 23       	and	r24, r24
     c3c:	51 f0       	breq	.+20     	; 0xc52 <.L59>

00000c3e <.L56>:
                    (*turn)++;
     c3e:	88 81       	ld	r24, Y
     c40:	8f 5f       	subi	r24, 0xFF	; 255
     c42:	88 83       	st	Y, r24

00000c44 <.L57>:
                }
                if(*turn > 1){
     c44:	88 81       	ld	r24, Y
     c46:	82 30       	cpi	r24, 0x02	; 2
     c48:	0c f0       	brlt	.+2      	; 0xc4c <.L55>

00000c4a <.Loc.253>:
                    *turn = 0;
     c4a:	18 82       	st	Y, r1

00000c4c <.L55>:
                }
}
     c4c:	df 91       	pop	r29
     c4e:	cf 91       	pop	r28
     c50:	08 95       	ret

00000c52 <.L59>:
    if(plus_pressed_once() || minus_pressed_once()){
     c52:	0e 94 36 01 	call	0x26c	; 0x26c <minus_pressed_once>

00000c56 <.LVL59>:
     c56:	88 23       	and	r24, r24
     c58:	a9 f3       	breq	.-22     	; 0xc44 <.L57>
     c5a:	f1 cf       	rjmp	.-30     	; 0xc3e <.L56>

00000c5c <set_package_count>:
// Package count limit user entry
void set_package_count(int *pac_lim){
     c5c:	cf 93       	push	r28
     c5e:	df 93       	push	r29
     c60:	c8 2f       	mov	r28, r24
     c62:	d9 2f       	mov	r29, r25

00000c64 <.Loc.260>:
    if(plus_pressed_once() && *pac_lim < PACKAGE_COUNT_MAX){
     c64:	0e 94 0c 01 	call	0x218	; 0x218 <plus_pressed_once>

00000c68 <.LVL61>:
     c68:	88 23       	and	r24, r24
     c6a:	41 f0       	breq	.+16     	; 0xc7c <.L61>

00000c6c <.Loc.263>:
     c6c:	88 81       	ld	r24, Y
     c6e:	99 81       	ldd	r25, Y+1	; 0x01

00000c70 <.Loc.264>:
     c70:	83 36       	cpi	r24, 0x63	; 99
     c72:	91 05       	cpc	r25, r1
     c74:	1c f4       	brge	.+6      	; 0xc7c <.L61>

00000c76 <.Loc.265>:
        (*pac_lim)++;
     c76:	01 96       	adiw	r24, 0x01	; 1
     c78:	99 83       	std	Y+1, r25	; 0x01
     c7a:	88 83       	st	Y, r24

00000c7c <.L61>:
    }
    if(minus_pressed_once() && *pac_lim > PACKAGE_COUNT_MIN){
     c7c:	0e 94 36 01 	call	0x26c	; 0x26c <minus_pressed_once>

00000c80 <.LVL62>:
     c80:	88 23       	and	r24, r24
     c82:	41 f0       	breq	.+16     	; 0xc94 <.L60>

00000c84 <.Loc.270>:
     c84:	88 81       	ld	r24, Y
     c86:	99 81       	ldd	r25, Y+1	; 0x01

00000c88 <.Loc.271>:
     c88:	82 30       	cpi	r24, 0x02	; 2
     c8a:	91 05       	cpc	r25, r1
     c8c:	1c f0       	brlt	.+6      	; 0xc94 <.L60>

00000c8e <.Loc.272>:
        (*pac_lim)--;
     c8e:	01 97       	sbiw	r24, 0x01	; 1
     c90:	99 83       	std	Y+1, r25	; 0x01
     c92:	88 83       	st	Y, r24

00000c94 <.L60>:
    }
}
     c94:	df 91       	pop	r29
     c96:	cf 91       	pop	r28
     c98:	08 95       	ret

00000c9a <set_follow_distance>:
// Following distance user entry
void set_follow_distance(int *dist){
     c9a:	cf 93       	push	r28
     c9c:	df 93       	push	r29
     c9e:	c8 2f       	mov	r28, r24
     ca0:	d9 2f       	mov	r29, r25

00000ca2 <.Loc.277>:
    if(plus_pressed_once() && *dist < FOLLOW_DISTANCE_MAX){
     ca2:	0e 94 0c 01 	call	0x218	; 0x218 <plus_pressed_once>

00000ca6 <.LVL64>:
     ca6:	88 23       	and	r24, r24
     ca8:	41 f0       	breq	.+16     	; 0xcba <.L64>

00000caa <.Loc.280>:
     caa:	88 81       	ld	r24, Y
     cac:	99 81       	ldd	r25, Y+1	; 0x01

00000cae <.Loc.281>:
     cae:	84 36       	cpi	r24, 0x64	; 100
     cb0:	91 05       	cpc	r25, r1
     cb2:	1c f4       	brge	.+6      	; 0xcba <.L64>

00000cb4 <.Loc.282>:
        (*dist)+= FOLLOW_DISTANCE_STEP;
     cb4:	0a 96       	adiw	r24, 0x0a	; 10
     cb6:	99 83       	std	Y+1, r25	; 0x01
     cb8:	88 83       	st	Y, r24

00000cba <.L64>:
    }
    if(minus_pressed_once() && *dist > FOLLOW_DISTANCE_MIN){
     cba:	0e 94 36 01 	call	0x26c	; 0x26c <minus_pressed_once>

00000cbe <.LVL65>:
     cbe:	88 23       	and	r24, r24
     cc0:	41 f0       	breq	.+16     	; 0xcd2 <.L63>

00000cc2 <.Loc.287>:
     cc2:	88 81       	ld	r24, Y
     cc4:	99 81       	ldd	r25, Y+1	; 0x01

00000cc6 <.Loc.288>:
     cc6:	8b 30       	cpi	r24, 0x0B	; 11
     cc8:	91 05       	cpc	r25, r1
     cca:	1c f0       	brlt	.+6      	; 0xcd2 <.L63>

00000ccc <.Loc.289>:
        (*dist)-= FOLLOW_DISTANCE_STEP;
     ccc:	0a 97       	sbiw	r24, 0x0a	; 10
     cce:	99 83       	std	Y+1, r25	; 0x01
     cd0:	88 83       	st	Y, r24

00000cd2 <.L63>:
    }
}
     cd2:	df 91       	pop	r29
     cd4:	cf 91       	pop	r28
     cd6:	08 95       	ret

00000cd8 <person_detected>:

// Detect person based on front distances
char person_detected(int fol_dist){
     cd8:	0f 93       	push	r16
     cda:	1f 93       	push	r17
     cdc:	cf 93       	push	r28
     cde:	df 93       	push	r29
     ce0:	c8 2f       	mov	r28, r24
     ce2:	d9 2f       	mov	r29, r25

00000ce4 <.Loc.294>:
    static int left;
    static int right;
    static int last_detection = 0;
    left = get_left_distance();
     ce4:	0e 94 12 04 	call	0x824	; 0x824 <get_left_distance>

00000ce8 <.LVL67>:
     ce8:	90 93 7f 02 	sts	0x027F, r25	; 0x80027f <left.4+0x1>
     cec:	80 93 7e 02 	sts	0x027E, r24	; 0x80027e <left.4>

00000cf0 <.Loc.300>:
    right = get_right_distance();
     cf0:	0e 94 1a 04 	call	0x834	; 0x834 <get_right_distance>

00000cf4 <.LVL68>:
     cf4:	08 2f       	mov	r16, r24
     cf6:	19 2f       	mov	r17, r25

00000cf8 <.Loc.302>:
     cf8:	10 93 7d 02 	sts	0x027D, r17	; 0x80027d <right.3+0x1>
     cfc:	00 93 7c 02 	sts	0x027C, r16	; 0x80027c <right.3>

00000d00 <.Loc.303>:
    // Person needs to be in range for set time
    if(gp_timer(SENSOR_TIMING)){
     d00:	81 e0       	ldi	r24, 0x01	; 1
     d02:	90 e0       	ldi	r25, 0x00	; 0
     d04:	0e 94 3b 04 	call	0x876	; 0x876 <gp_timer>

00000d08 <.LVL69>:
     d08:	88 23       	and	r24, r24
     d0a:	41 f1       	breq	.+80     	; 0xd5c <.L66>

00000d0c <.Loc.306>:
        if(left < fol_dist + FOLLOW_DETECTION_MARGIN && right < fol_dist + FOLLOW_DETECTION_MARGIN){
     d0c:	6d 96       	adiw	r28, 0x1d	; 29

00000d0e <.Loc.308>:
     d0e:	80 91 7e 02 	lds	r24, 0x027E	; 0x80027e <left.4>
     d12:	90 91 7f 02 	lds	r25, 0x027F	; 0x80027f <left.4+0x1>
     d16:	c8 17       	cp	r28, r24
     d18:	d9 07       	cpc	r29, r25
     d1a:	dc f0       	brlt	.+54     	; 0xd52 <.L68>

00000d1c <.Loc.309>:
     d1c:	c0 17       	cp	r28, r16
     d1e:	d1 07       	cpc	r29, r17
     d20:	c4 f0       	brlt	.+48     	; 0xd52 <.L68>

00000d22 <.Loc.310>:
            if(last_detection >= PERSON_SENSITIVITY){
     d22:	80 91 7a 02 	lds	r24, 0x027A	; 0x80027a <last_detection.2>
     d26:	90 91 7b 02 	lds	r25, 0x027B	; 0x80027b <last_detection.2+0x1>

00000d2a <.Loc.312>:
     d2a:	82 30       	cpi	r24, 0x02	; 2
     d2c:	91 05       	cpc	r25, r1
     d2e:	3c f4       	brge	.+14     	; 0xd3e <.L70>

00000d30 <.Loc.313>:
                last_detection = 0;
                // Reset timer
                gp_timer(-1);
                return 1;
            }
            last_detection++;
     d30:	01 96       	adiw	r24, 0x01	; 1
     d32:	90 93 7b 02 	sts	0x027B, r25	; 0x80027b <last_detection.2+0x1>
     d36:	80 93 7a 02 	sts	0x027A, r24	; 0x80027a <last_detection.2>

00000d3a <.Loc.315>:
        }
        else{
            last_detection = 0;
        }
    }
    return 0;
     d3a:	80 e0       	ldi	r24, 0x00	; 0

00000d3c <.Loc.316>:
            last_detection++;
     d3c:	0f c0       	rjmp	.+30     	; 0xd5c <.L66>

00000d3e <.L70>:
                last_detection = 0;
     d3e:	10 92 7b 02 	sts	0x027B, r1	; 0x80027b <last_detection.2+0x1>
     d42:	10 92 7a 02 	sts	0x027A, r1	; 0x80027a <last_detection.2>

00000d46 <.Loc.319>:
                gp_timer(-1);
     d46:	8f ef       	ldi	r24, 0xFF	; 255
     d48:	9f ef       	ldi	r25, 0xFF	; 255
     d4a:	0e 94 3b 04 	call	0x876	; 0x876 <gp_timer>

00000d4e <.LVL70>:
                return 1;
     d4e:	81 e0       	ldi	r24, 0x01	; 1
     d50:	05 c0       	rjmp	.+10     	; 0xd5c <.L66>

00000d52 <.L68>:
            last_detection = 0;
     d52:	10 92 7b 02 	sts	0x027B, r1	; 0x80027b <last_detection.2+0x1>
     d56:	10 92 7a 02 	sts	0x027A, r1	; 0x80027a <last_detection.2>

00000d5a <.Loc.324>:
    return 0;
     d5a:	80 e0       	ldi	r24, 0x00	; 0

00000d5c <.L66>:
}
     d5c:	df 91       	pop	r29
     d5e:	cf 91       	pop	r28
     d60:	1f 91       	pop	r17
     d62:	0f 91       	pop	r16
     d64:	08 95       	ret

00000d66 <step_count_end>:
// Check if step count has ended before new command
char step_count_end(void){
    if(step_count_left == -1 && step_count_right == -1){
     d66:	80 91 99 02 	lds	r24, 0x0299	; 0x800299 <step_count_left>
     d6a:	90 91 9a 02 	lds	r25, 0x029A	; 0x80029a <step_count_left+0x1>

00000d6e <.Loc.329>:
     d6e:	01 96       	adiw	r24, 0x01	; 1
     d70:	11 f0       	breq	.+4      	; 0xd76 <.L75>

00000d72 <.Loc.330>:
        return 1;
    }
    return 0;
     d72:	80 e0       	ldi	r24, 0x00	; 0

00000d74 <.L71>:
}
     d74:	08 95       	ret

00000d76 <.L75>:
    if(step_count_left == -1 && step_count_right == -1){
     d76:	20 91 97 02 	lds	r18, 0x0297	; 0x800297 <step_count_right>
     d7a:	30 91 98 02 	lds	r19, 0x0298	; 0x800298 <step_count_right+0x1>

00000d7e <.Loc.333>:
     d7e:	81 e0       	ldi	r24, 0x01	; 1
     d80:	2f 3f       	cpi	r18, 0xFF	; 255
     d82:	3f 4f       	sbci	r19, 0xFF	; 255
     d84:	b9 f3       	breq	.-18     	; 0xd74 <.L71>
     d86:	80 e0       	ldi	r24, 0x00	; 0
     d88:	08 95       	ret

00000d8a <sensor_turn>:

void sensor_turn(char direction){
     d8a:	cf 93       	push	r28
     d8c:	df 93       	push	r29
     d8e:	00 d0       	rcall	.+0      	; 0xd90 <L0^A>

00000d90 <L0^A>:
     d90:	0f 92       	push	r0
     d92:	cd b7       	in	r28, 0x3d	; 61
     d94:	de b7       	in	r29, 0x3e	; 62

00000d96 <.Loc.336>:
    static int distance;
    static int turn_ratio;
    if(direction){
     d96:	88 23       	and	r24, r24
     d98:	09 f4       	brne	.+2      	; 0xd9c <.Loc.340>

00000d9a <L0^A>:
     d9a:	4a c0       	rjmp	.+148    	; 0xe30 <.L77>

00000d9c <.Loc.340>:
        distance = get_right_distance();
     d9c:	0e 94 1a 04 	call	0x834	; 0x834 <get_right_distance>

00000da0 <.LVL72>:
     da0:	28 2f       	mov	r18, r24
     da2:	39 2f       	mov	r19, r25

00000da4 <.Loc.343>:
        turn_ratio = 1.2*CLAMP(distance - TURN_WALL_DISTANCE, -TURNING_RATIO, TURNING_RATIO);
     da4:	2b 3b       	cpi	r18, 0xBB	; 187
     da6:	8f ef       	ldi	r24, 0xFF	; 255
     da8:	38 07       	cpc	r19, r24
     daa:	94 f0       	brlt	.+36     	; 0xdd0 <.L81>

00000dac <.Loc.345>:
     dac:	2e 35       	cpi	r18, 0x5E	; 94
     dae:	31 05       	cpc	r19, r1
     db0:	d4 f5       	brge	.+116    	; 0xe26 <.L82>

00000db2 <.Loc.346>:
     db2:	2c 50       	subi	r18, 0x0C	; 12
     db4:	31 09       	sbc	r19, r1

00000db6 <.Loc.347>:
     db6:	c9 01       	movw	r24, r18
     db8:	33 0f       	add	r19, r19
     dba:	aa 0b       	sbc	r26, r26
     dbc:	bb 0b       	sbc	r27, r27
     dbe:	89 83       	std	Y+1, r24	; 0x01
     dc0:	9a 83       	std	Y+2, r25	; 0x02
     dc2:	ab 83       	std	Y+3, r26	; 0x03
     dc4:	bc 83       	std	Y+4, r27	; 0x04
     dc6:	bc 01       	movw	r22, r24
     dc8:	cd 01       	movw	r24, r26
     dca:	0e 94 45 0f 	call	0x1e8a	; 0x1e8a <__floatsisf>

00000dce <.LVL73>:
     dce:	04 c0       	rjmp	.+8      	; 0xdd8 <.L78>

00000dd0 <.L81>:
     dd0:	60 e0       	ldi	r22, 0x00	; 0
     dd2:	70 e0       	ldi	r23, 0x00	; 0
     dd4:	82 ea       	ldi	r24, 0xA2	; 162
     dd6:	92 ec       	ldi	r25, 0xC2	; 194

00000dd8 <.L78>:
     dd8:	2a e9       	ldi	r18, 0x9A	; 154
     dda:	39 e9       	ldi	r19, 0x99	; 153
     ddc:	49 e9       	ldi	r20, 0x99	; 153
     dde:	5f e3       	ldi	r21, 0x3F	; 63
     de0:	69 83       	std	Y+1, r22	; 0x01
     de2:	7a 83       	std	Y+2, r23	; 0x02
     de4:	8b 83       	std	Y+3, r24	; 0x03
     de6:	9c 83       	std	Y+4, r25	; 0x04
     de8:	69 81       	ldd	r22, Y+1	; 0x01
     dea:	7a 81       	ldd	r23, Y+2	; 0x02
     dec:	8b 81       	ldd	r24, Y+3	; 0x03
     dee:	9c 81       	ldd	r25, Y+4	; 0x04
     df0:	0e 94 a9 0f 	call	0x1f52	; 0x1f52 <__mulsf3>

00000df4 <.LVL74>:
     df4:	69 83       	std	Y+1, r22	; 0x01
     df6:	7a 83       	std	Y+2, r23	; 0x02
     df8:	8b 83       	std	Y+3, r24	; 0x03
     dfa:	9c 83       	std	Y+4, r25	; 0x04
     dfc:	69 81       	ldd	r22, Y+1	; 0x01
     dfe:	7a 81       	ldd	r23, Y+2	; 0x02
     e00:	8b 81       	ldd	r24, Y+3	; 0x03
     e02:	9c 81       	ldd	r25, Y+4	; 0x04
     e04:	0e 94 0d 0f 	call	0x1e1a	; 0x1e1a <__fixsfsi>

00000e08 <.L79>:
     e08:	70 93 79 02 	sts	0x0279, r23	; 0x800279 <turn_ratio.0+0x1>
     e0c:	60 93 78 02 	sts	0x0278, r22	; 0x800278 <turn_ratio.0>

00000e10 <.Loc.352>:
    }
    else{
        distance = get_left_distance();
        turn_ratio = -1.2*CLAMP(distance - TURN_WALL_DISTANCE, -TURNING_RATIO, TURNING_RATIO);
    }
    stepper_control(TURNING_SPEED, turn_ratio);
     e10:	88 e0       	ldi	r24, 0x08	; 8
     e12:	90 e0       	ldi	r25, 0x00	; 0
     e14:	0e 94 87 0b 	call	0x170e	; 0x170e <stepper_control>

00000e18 <.LVL76>:
}
     e18:	0f 90       	pop	r0
     e1a:	0f 90       	pop	r0
     e1c:	0f 90       	pop	r0
     e1e:	0f 90       	pop	r0
     e20:	df 91       	pop	r29
     e22:	cf 91       	pop	r28
     e24:	08 95       	ret

00000e26 <.L82>:
        turn_ratio = 1.2*CLAMP(distance - TURN_WALL_DISTANCE, -TURNING_RATIO, TURNING_RATIO);
     e26:	60 e0       	ldi	r22, 0x00	; 0
     e28:	70 e0       	ldi	r23, 0x00	; 0
     e2a:	82 ea       	ldi	r24, 0xA2	; 162
     e2c:	92 e4       	ldi	r25, 0x42	; 66
     e2e:	d4 cf       	rjmp	.-88     	; 0xdd8 <.L78>

00000e30 <.L77>:
        distance = get_left_distance();
     e30:	0e 94 12 04 	call	0x824	; 0x824 <get_left_distance>

00000e34 <.LVL78>:
     e34:	28 2f       	mov	r18, r24
     e36:	39 2f       	mov	r19, r25

00000e38 <.Loc.358>:
        turn_ratio = -1.2*CLAMP(distance - TURN_WALL_DISTANCE, -TURNING_RATIO, TURNING_RATIO);
     e38:	2b 3b       	cpi	r18, 0xBB	; 187
     e3a:	9f ef       	ldi	r25, 0xFF	; 255
     e3c:	39 07       	cpc	r19, r25
     e3e:	94 f0       	brlt	.+36     	; 0xe64 <.L83>

00000e40 <.Loc.360>:
     e40:	2e 35       	cpi	r18, 0x5E	; 94
     e42:	31 05       	cpc	r19, r1
     e44:	64 f5       	brge	.+88     	; 0xe9e <.L84>

00000e46 <.Loc.361>:
     e46:	2c 50       	subi	r18, 0x0C	; 12
     e48:	31 09       	sbc	r19, r1

00000e4a <.Loc.362>:
     e4a:	c9 01       	movw	r24, r18
     e4c:	33 0f       	add	r19, r19
     e4e:	aa 0b       	sbc	r26, r26
     e50:	bb 0b       	sbc	r27, r27
     e52:	89 83       	std	Y+1, r24	; 0x01
     e54:	9a 83       	std	Y+2, r25	; 0x02
     e56:	ab 83       	std	Y+3, r26	; 0x03
     e58:	bc 83       	std	Y+4, r27	; 0x04
     e5a:	bc 01       	movw	r22, r24
     e5c:	cd 01       	movw	r24, r26
     e5e:	0e 94 45 0f 	call	0x1e8a	; 0x1e8a <__floatsisf>

00000e62 <.LVL79>:
     e62:	04 c0       	rjmp	.+8      	; 0xe6c <.L80>

00000e64 <.L83>:
     e64:	60 e0       	ldi	r22, 0x00	; 0
     e66:	70 e0       	ldi	r23, 0x00	; 0
     e68:	82 ea       	ldi	r24, 0xA2	; 162
     e6a:	92 ec       	ldi	r25, 0xC2	; 194

00000e6c <.L80>:
     e6c:	2a e9       	ldi	r18, 0x9A	; 154
     e6e:	39 e9       	ldi	r19, 0x99	; 153
     e70:	49 e9       	ldi	r20, 0x99	; 153
     e72:	5f eb       	ldi	r21, 0xBF	; 191
     e74:	69 83       	std	Y+1, r22	; 0x01
     e76:	7a 83       	std	Y+2, r23	; 0x02
     e78:	8b 83       	std	Y+3, r24	; 0x03
     e7a:	9c 83       	std	Y+4, r25	; 0x04
     e7c:	69 81       	ldd	r22, Y+1	; 0x01
     e7e:	7a 81       	ldd	r23, Y+2	; 0x02
     e80:	8b 81       	ldd	r24, Y+3	; 0x03
     e82:	9c 81       	ldd	r25, Y+4	; 0x04
     e84:	0e 94 a9 0f 	call	0x1f52	; 0x1f52 <__mulsf3>

00000e88 <.LVL80>:
     e88:	69 83       	std	Y+1, r22	; 0x01
     e8a:	7a 83       	std	Y+2, r23	; 0x02
     e8c:	8b 83       	std	Y+3, r24	; 0x03
     e8e:	9c 83       	std	Y+4, r25	; 0x04
     e90:	69 81       	ldd	r22, Y+1	; 0x01
     e92:	7a 81       	ldd	r23, Y+2	; 0x02
     e94:	8b 81       	ldd	r24, Y+3	; 0x03
     e96:	9c 81       	ldd	r25, Y+4	; 0x04
     e98:	0e 94 0d 0f 	call	0x1e1a	; 0x1e1a <__fixsfsi>

00000e9c <.LVL81>:
     e9c:	b5 cf       	rjmp	.-150    	; 0xe08 <.L79>

00000e9e <.L84>:
     e9e:	60 e0       	ldi	r22, 0x00	; 0
     ea0:	70 e0       	ldi	r23, 0x00	; 0
     ea2:	82 ea       	ldi	r24, 0xA2	; 162
     ea4:	92 e4       	ldi	r25, 0x42	; 66
     ea6:	e2 cf       	rjmp	.-60     	; 0xe6c <.L80>

00000ea8 <init_limit_switches>:

//OPERATOR (MASTER)
/// --- limit_switches---///
void init_limit_switches() {
    // Set PD0 and PD1 (pins 25, 26) as input
    DDRA &= ~((1 << PA3) | (1 << PA4));
     ea8:	81 b1       	in	r24, 0x01	; 1
     eaa:	87 7e       	andi	r24, 0xE7	; 231
     eac:	81 b9       	out	0x01, r24	; 1

00000eae <.Loc.3>:

    // Optional: Enable pull-up resistors
    PORTA |= (1 << PA3) | (1 << PA4);
     eae:	82 b1       	in	r24, 0x02	; 2

00000eb0 <.Loc.4>:
     eb0:	88 61       	ori	r24, 0x18	; 24
     eb2:	82 b9       	out	0x02, r24	; 2

00000eb4 <.Loc.5>:
    // Set PD1 startbutton
    DDRD &= ~((1 << PD1));
     eb4:	51 98       	cbi	0x0a, 1	; 10

00000eb6 <.Loc.7>:

    // Optional: Enable pull-up resistors startbutton
    PORTD |= (1 << PD1);
     eb6:	59 9a       	sbi	0x0b, 1	; 11

00000eb8 <.Loc.9>:
}
     eb8:	08 95       	ret

00000eba <light_limit_switch_25>:

uint8_t light_limit_switch_25() {
    // Returns 0 if pressed (connected to GND), 1 if not pressed
    return (PINA & (1 << PA3)) ? 1 : 0;
     eba:	80 b1       	in	r24, 0x00	; 0

00000ebc <.Loc.13>:
}
     ebc:	83 fb       	bst	r24, 3
     ebe:	88 27       	eor	r24, r24
     ec0:	80 f9       	bld	r24, 0
     ec2:	08 95       	ret

00000ec4 <heavy_limit_switch_26>:

uint8_t heavy_limit_switch_26() {
    return (PINA & (1 << PA2)) ? 1 : 0;
     ec4:	80 b1       	in	r24, 0x00	; 0

00000ec6 <.Loc.17>:
}
     ec6:	82 fb       	bst	r24, 2
     ec8:	88 27       	eor	r24, r24
     eca:	80 f9       	bld	r24, 0
     ecc:	08 95       	ret

00000ece <starting_button>:
//starting button
uint8_t starting_button() {
    return (PIND & (1 << PD1)) ? 1 : 0;
     ece:	89 b1       	in	r24, 0x09	; 9

00000ed0 <.Loc.21>:
}
     ed0:	86 95       	lsr	r24
     ed2:	81 70       	andi	r24, 0x01	; 1
     ed4:	08 95       	ret

00000ed6 <main>:

    enum available_states current_state =       STARTING_STATE;
    // First turn 0 is left, 1 is right

    /// --- Init --- ///
    init();
     ed6:	0e 94 31 04 	call	0x862	; 0x862 <init>

00000eda <.LVL1>:
    init_limit_switches();
     eda:	0e 94 54 07 	call	0xea8	; 0xea8 <init_limit_switches>

00000ede <.LVL2>:
            if (light_limit_switch_25() == 0) {
                current_state = weight_detection;
            }

        default: // Should be starting_state?
            if(starting_button()){
     ede:	0e 94 67 07 	call	0xece	; 0xece <starting_button>

00000ee2 <.LVL3>:
     ee2:	81 11       	cpse	r24, r1
     ee4:	03 c0       	rjmp	.+6      	; 0xeec <.L7>

00000ee6 <.L6>:

        //display_statemachine(current_state);
    } // end of Main loop //

    return 0;
}} // end of Main //
     ee6:	80 e0       	ldi	r24, 0x00	; 0
     ee8:	90 e0       	ldi	r25, 0x00	; 0
     eea:	08 95       	ret

00000eec <.L7>:
            task_manager(forward_fast, standard_speed, standard_acceleration);//does AGV return an ack here?
     eec:	41 e0       	ldi	r20, 0x01	; 1
     eee:	61 e0       	ldi	r22, 0x01	; 1
     ef0:	81 e0       	ldi	r24, 0x01	; 1
     ef2:	90 e0       	ldi	r25, 0x00	; 0
     ef4:	0e 94 ba 02 	call	0x574	; 0x574 <task_manager>

00000ef8 <.LVL6>:
            current_state = forward;
     ef8:	f6 cf       	rjmp	.-20     	; 0xee6 <.L6>

00000efa <music_init>:
#include "intermediate_control.h"

void music_init(void){
    // Start as high input to prevent noise from voltage fluctuations
    // Set to output in separate function
    DDR_BUZZ &= ~(1<<PIN_BUZZ);
     efa:	6d 98       	cbi	0x0d, 5	; 13

00000efc <.Loc.3>:
    PORT_BUZZ |= (1<<PIN_BUZZ);
     efc:	75 9a       	sbi	0x0e, 5	; 14

00000efe <.Loc.5>:
    // OC3C Mode 14, Fast PWM, prescaler 1
    // COM bits are set in separate function
    TCCR3A = (1<<WGM31);
     efe:	82 e0       	ldi	r24, 0x02	; 2
     f00:	80 93 90 00 	sts	0x0090, r24	; 0x800090 <__TEXT_REGION_LENGTH__+0x700090>

00000f04 <.Loc.7>:
    TCCR3B = (1<<CS30) | (1<<WGM33) | (1<<WGM32);
     f04:	89 e1       	ldi	r24, 0x19	; 25
     f06:	80 93 91 00 	sts	0x0091, r24	; 0x800091 <__TEXT_REGION_LENGTH__+0x700091>

00000f0a <.Loc.10>:
    OCR3C = 65535*0.02;
     f0a:	8e e1       	ldi	r24, 0x1E	; 30
     f0c:	95 e0       	ldi	r25, 0x05	; 5
     f0e:	90 93 9d 00 	sts	0x009D, r25	; 0x80009d <__TEXT_REGION_LENGTH__+0x70009d>
     f12:	80 93 9c 00 	sts	0x009C, r24	; 0x80009c <__TEXT_REGION_LENGTH__+0x70009c>

00000f16 <.Loc.11>:
}
     f16:	08 95       	ret

00000f18 <buzzer_enable>:
// Set buzzer to output and enable COM bits for PWM
void buzzer_enable(char input){
    if(input){
     f18:	88 23       	and	r24, r24
     f1a:	39 f0       	breq	.+14     	; 0xf2a <.L3>

00000f1c <.Loc.15>:
        DDR_BUZZ |= (1<<PIN_BUZZ);
     f1c:	6d 9a       	sbi	0x0d, 5	; 13

00000f1e <.Loc.17>:
        TCCR3A |= (1<<COM3C1) | (1<<COM3C0);
     f1e:	e0 e9       	ldi	r30, 0x90	; 144
     f20:	f0 e0       	ldi	r31, 0x00	; 0
     f22:	80 81       	ld	r24, Z

00000f24 <.Loc.18>:
     f24:	8c 60       	ori	r24, 0x0C	; 12
     f26:	80 83       	st	Z, r24
     f28:	08 95       	ret

00000f2a <.L3>:
    }
    else{
        DDR_BUZZ &= ~(1<<PIN_BUZZ);
     f2a:	6d 98       	cbi	0x0d, 5	; 13

00000f2c <.Loc.21>:
        TCCR3A &= ~((1<<COM3C1) | (1<<COM3C0));
     f2c:	e0 e9       	ldi	r30, 0x90	; 144
     f2e:	f0 e0       	ldi	r31, 0x00	; 0
     f30:	80 81       	ld	r24, Z

00000f32 <.Loc.23>:
     f32:	83 7f       	andi	r24, 0xF3	; 243
     f34:	80 83       	st	Z, r24

00000f36 <.Loc.24>:
    }
}
     f36:	08 95       	ret

00000f38 <hz_to_icr_value>:

int hz_to_icr_value(int hz){
    return (16000000/hz);
     f38:	9c 01       	movw	r18, r24
     f3a:	99 0f       	add	r25, r25
     f3c:	44 0b       	sbc	r20, r20
     f3e:	55 0b       	sbc	r21, r21
     f40:	60 e0       	ldi	r22, 0x00	; 0
     f42:	74 e2       	ldi	r23, 0x24	; 36
     f44:	84 ef       	ldi	r24, 0xF4	; 244
     f46:	90 e0       	ldi	r25, 0x00	; 0
     f48:	0e 94 c3 0e 	call	0x1d86	; 0x1d86 <__divmodsi4>

00000f4c <.Loc.28>:
}
     f4c:	c9 01       	movw	r24, r18

00000f4e <.Loc.29>:
     f4e:	08 95       	ret

00000f50 <play_note>:

void play_note(int note, int beats, int state, int *note_num){
     f50:	ef 92       	push	r14
     f52:	ff 92       	push	r15
     f54:	0f 93       	push	r16
     f56:	1f 93       	push	r17
     f58:	cf 93       	push	r28
     f5a:	df 93       	push	r29
     f5c:	c8 2f       	mov	r28, r24
     f5e:	d9 2f       	mov	r29, r25
     f60:	cb 01       	movw	r24, r22

00000f62 <.Loc.32>:
     f62:	e4 2e       	mov	r14, r20
     f64:	f5 2e       	mov	r15, r21
     f66:	02 2f       	mov	r16, r18
     f68:	13 2f       	mov	r17, r19

00000f6a <.Loc.33>:
    // Use GP timer to time beats
    if(!gp_timer(beats)){
     f6a:	0e 94 3b 04 	call	0x876	; 0x876 <gp_timer>

00000f6e <.LVL8>:
     f6e:	81 11       	cpse	r24, r1
     f70:	22 c0       	rjmp	.+68     	; 0xfb6 <.L7>

00000f72 <.LBB5>:
    return (16000000/hz);
     f72:	9e 01       	movw	r18, r28
     f74:	dd 0f       	add	r29, r29
     f76:	44 0b       	sbc	r20, r20
     f78:	55 0b       	sbc	r21, r21
     f7a:	60 e0       	ldi	r22, 0x00	; 0
     f7c:	74 e2       	ldi	r23, 0x24	; 36
     f7e:	84 ef       	ldi	r24, 0xF4	; 244
     f80:	90 e0       	ldi	r25, 0x00	; 0
     f82:	0e 94 c3 0e 	call	0x1d86	; 0x1d86 <__divmodsi4>

00000f86 <.Loc.43>:
        // Set frequency and volume
        int ICR_value = (hz_to_icr_value(note));
        int OCR_value = 65535*0.01;
        ICR3 =  ICR_value;
     f86:	30 93 97 00 	sts	0x0097, r19	; 0x800097 <__TEXT_REGION_LENGTH__+0x700097>
     f8a:	20 93 96 00 	sts	0x0096, r18	; 0x800096 <__TEXT_REGION_LENGTH__+0x700096>

00000f8e <.Loc.44>:
        OCR3C = OCR_value*state;
     f8e:	2f e8       	ldi	r18, 0x8F	; 143
     f90:	32 e0       	ldi	r19, 0x02	; 2
     f92:	e2 9e       	mul	r14, r18
     f94:	c0 01       	movw	r24, r0
     f96:	e3 9e       	mul	r14, r19
     f98:	90 0d       	add	r25, r0
     f9a:	f2 9e       	mul	r15, r18
     f9c:	90 0d       	add	r25, r0
     f9e:	11 24       	eor	r1, r1

00000fa0 <.Loc.46>:
     fa0:	90 93 9d 00 	sts	0x009D, r25	; 0x80009d <__TEXT_REGION_LENGTH__+0x70009d>
     fa4:	80 93 9c 00 	sts	0x009C, r24	; 0x80009c <__TEXT_REGION_LENGTH__+0x70009c>

00000fa8 <.L6>:
    }
    // Next note
    else{
        (*note_num)++;
    }
}
     fa8:	df 91       	pop	r29
     faa:	cf 91       	pop	r28
     fac:	1f 91       	pop	r17
     fae:	0f 91       	pop	r16
     fb0:	ff 90       	pop	r15
     fb2:	ef 90       	pop	r14
     fb4:	08 95       	ret

00000fb6 <.L7>:
        (*note_num)++;
     fb6:	f8 01       	movw	r30, r16
     fb8:	80 81       	ld	r24, Z
     fba:	91 81       	ldd	r25, Z+1	; 0x01
     fbc:	01 96       	adiw	r24, 0x01	; 1
     fbe:	91 83       	std	Z+1, r25	; 0x01
     fc0:	80 83       	st	Z, r24

00000fc2 <.Loc.51>:
}
     fc2:	f2 cf       	rjmp	.-28     	; 0xfa8 <.L6>

00000fc4 <play_beep>:
// Play multiple notes with switch
char play_beep(){
    static int note_number = 0;
    if(!note_number){
     fc4:	80 91 93 02 	lds	r24, 0x0293	; 0x800293 <note_number.2>
     fc8:	90 91 94 02 	lds	r25, 0x0294	; 0x800294 <note_number.2+0x1>
     fcc:	89 2b       	or	r24, r25
     fce:	d9 f0       	breq	.+54     	; 0x1006 <.L19>

00000fd0 <.L10>:
        buzzer_enable(1);
    }
    switch(note_number){
     fd0:	80 91 93 02 	lds	r24, 0x0293	; 0x800293 <note_number.2>
     fd4:	90 91 94 02 	lds	r25, 0x0294	; 0x800294 <note_number.2+0x1>
     fd8:	83 30       	cpi	r24, 0x03	; 3
     fda:	91 05       	cpc	r25, r1
     fdc:	09 f4       	brne	.+2      	; 0xfe0 <L0^A+0x2>

00000fde <L0^A>:
     fde:	43 c0       	rjmp	.+134    	; 0x1066 <.L11>
     fe0:	34 f5       	brge	.+76     	; 0x102e <.L12>
     fe2:	81 30       	cpi	r24, 0x01	; 1
     fe4:	91 05       	cpc	r25, r1
     fe6:	99 f1       	breq	.+102    	; 0x104e <.L13>
     fe8:	82 30       	cpi	r24, 0x02	; 2
     fea:	91 05       	cpc	r25, r1
     fec:	81 f4       	brne	.+32     	; 0x100e <.L20>

00000fee <.Loc.57>:
        break;
    case 1:
        play_note(NOTE_3, 1, 0, &note_number);
        break;
    case 2:
        play_note(NOTE_1, 1, 10, &note_number);
     fee:	23 e9       	ldi	r18, 0x93	; 147
     ff0:	32 e0       	ldi	r19, 0x02	; 2
     ff2:	4a e0       	ldi	r20, 0x0A	; 10
     ff4:	50 e0       	ldi	r21, 0x00	; 0
     ff6:	61 e0       	ldi	r22, 0x01	; 1
     ff8:	70 e0       	ldi	r23, 0x00	; 0
     ffa:	8a e6       	ldi	r24, 0x6A	; 106
     ffc:	91 e0       	ldi	r25, 0x01	; 1
     ffe:	0e 94 a8 07 	call	0xf50	; 0xf50 <play_note>

00001002 <.LVL11>:
        buzzer_enable(0);
        note_number = 0;
        return 0;
        break;
    }
    return 1;
    1002:	81 e0       	ldi	r24, 0x01	; 1

00001004 <.Loc.60>:
        break;
    1004:	08 95       	ret

00001006 <.L19>:
        buzzer_enable(1);
    1006:	81 e0       	ldi	r24, 0x01	; 1
    1008:	0e 94 8c 07 	call	0xf18	; 0xf18 <buzzer_enable>

0000100c <.LVL12>:
    100c:	e1 cf       	rjmp	.-62     	; 0xfd0 <.L10>

0000100e <.L20>:
    switch(note_number){
    100e:	89 2b       	or	r24, r25
    1010:	61 f4       	brne	.+24     	; 0x102a <.L21>

00001012 <.Loc.63>:
        play_note(NOTE_5, 1, 10, &note_number);
    1012:	23 e9       	ldi	r18, 0x93	; 147
    1014:	32 e0       	ldi	r19, 0x02	; 2
    1016:	4a e0       	ldi	r20, 0x0A	; 10
    1018:	50 e0       	ldi	r21, 0x00	; 0
    101a:	61 e0       	ldi	r22, 0x01	; 1
    101c:	70 e0       	ldi	r23, 0x00	; 0
    101e:	8c ee       	ldi	r24, 0xEC	; 236
    1020:	91 e0       	ldi	r25, 0x01	; 1
    1022:	0e 94 a8 07 	call	0xf50	; 0xf50 <play_note>

00001026 <.LVL13>:
    return 1;
    1026:	81 e0       	ldi	r24, 0x01	; 1

00001028 <.Loc.66>:
        break;
    1028:	08 95       	ret

0000102a <.L21>:
    switch(note_number){
    102a:	81 e0       	ldi	r24, 0x01	; 1
    102c:	08 95       	ret

0000102e <.L12>:
    102e:	84 30       	cpi	r24, 0x04	; 4
    1030:	91 05       	cpc	r25, r1
    1032:	29 f1       	breq	.+74     	; 0x107e <.L17>
    1034:	05 97       	sbiw	r24, 0x05	; 5
    1036:	49 f4       	brne	.+18     	; 0x104a <.L22>

00001038 <.Loc.68>:
        buzzer_enable(0);
    1038:	80 e0       	ldi	r24, 0x00	; 0
    103a:	0e 94 8c 07 	call	0xf18	; 0xf18 <buzzer_enable>

0000103e <.LVL14>:
        note_number = 0;
    103e:	10 92 94 02 	sts	0x0294, r1	; 0x800294 <note_number.2+0x1>
    1042:	10 92 93 02 	sts	0x0293, r1	; 0x800293 <note_number.2>

00001046 <.Loc.71>:
        return 0;
    1046:	80 e0       	ldi	r24, 0x00	; 0

00001048 <.Loc.73>:
}
    1048:	08 95       	ret

0000104a <.L22>:
    switch(note_number){
    104a:	81 e0       	ldi	r24, 0x01	; 1
    104c:	08 95       	ret

0000104e <.L13>:
        play_note(NOTE_3, 1, 0, &note_number);
    104e:	23 e9       	ldi	r18, 0x93	; 147
    1050:	32 e0       	ldi	r19, 0x02	; 2
    1052:	40 e0       	ldi	r20, 0x00	; 0
    1054:	50 e0       	ldi	r21, 0x00	; 0
    1056:	61 e0       	ldi	r22, 0x01	; 1
    1058:	70 e0       	ldi	r23, 0x00	; 0
    105a:	8e ea       	ldi	r24, 0xAE	; 174
    105c:	91 e0       	ldi	r25, 0x01	; 1
    105e:	0e 94 a8 07 	call	0xf50	; 0xf50 <play_note>

00001062 <.LVL15>:
    return 1;
    1062:	81 e0       	ldi	r24, 0x01	; 1

00001064 <.Loc.78>:
        break;
    1064:	08 95       	ret

00001066 <.L11>:
        play_note(NOTE_8, 1, 10, &note_number);
    1066:	23 e9       	ldi	r18, 0x93	; 147
    1068:	32 e0       	ldi	r19, 0x02	; 2
    106a:	4a e0       	ldi	r20, 0x0A	; 10
    106c:	50 e0       	ldi	r21, 0x00	; 0
    106e:	61 e0       	ldi	r22, 0x01	; 1
    1070:	70 e0       	ldi	r23, 0x00	; 0
    1072:	8f e6       	ldi	r24, 0x6F	; 111
    1074:	92 e0       	ldi	r25, 0x02	; 2
    1076:	0e 94 a8 07 	call	0xf50	; 0xf50 <play_note>

0000107a <.LVL16>:
    return 1;
    107a:	81 e0       	ldi	r24, 0x01	; 1

0000107c <.Loc.82>:
        break;
    107c:	08 95       	ret

0000107e <.L17>:
        play_note(NOTE_8, 1, 0, &note_number);
    107e:	23 e9       	ldi	r18, 0x93	; 147
    1080:	32 e0       	ldi	r19, 0x02	; 2
    1082:	40 e0       	ldi	r20, 0x00	; 0
    1084:	50 e0       	ldi	r21, 0x00	; 0
    1086:	61 e0       	ldi	r22, 0x01	; 1
    1088:	70 e0       	ldi	r23, 0x00	; 0
    108a:	8f e6       	ldi	r24, 0x6F	; 111
    108c:	92 e0       	ldi	r25, 0x02	; 2
    108e:	0e 94 a8 07 	call	0xf50	; 0xf50 <play_note>

00001092 <.LVL17>:
    return 1;
    1092:	81 e0       	ldi	r24, 0x01	; 1

00001094 <.Loc.86>:
        break;
    1094:	08 95       	ret

00001096 <play_beep_sad>:
// Slight variation on beep
char play_beep_sad(){
    static int note_number = 0;
    if(!note_number){
    1096:	80 91 91 02 	lds	r24, 0x0291	; 0x800291 <note_number.1>
    109a:	90 91 92 02 	lds	r25, 0x0292	; 0x800292 <note_number.1+0x1>
    109e:	89 2b       	or	r24, r25
    10a0:	d9 f0       	breq	.+54     	; 0x10d8 <.L33>

000010a2 <.L24>:
        buzzer_enable(1);
    }
    switch(note_number){
    10a2:	80 91 91 02 	lds	r24, 0x0291	; 0x800291 <note_number.1>
    10a6:	90 91 92 02 	lds	r25, 0x0292	; 0x800292 <note_number.1+0x1>
    10aa:	83 30       	cpi	r24, 0x03	; 3
    10ac:	91 05       	cpc	r25, r1
    10ae:	09 f4       	brne	.+2      	; 0x10b2 <L0^A+0x2>

000010b0 <L0^A>:
    10b0:	43 c0       	rjmp	.+134    	; 0x1138 <.L25>
    10b2:	34 f5       	brge	.+76     	; 0x1100 <.L26>
    10b4:	81 30       	cpi	r24, 0x01	; 1
    10b6:	91 05       	cpc	r25, r1
    10b8:	99 f1       	breq	.+102    	; 0x1120 <.L27>
    10ba:	82 30       	cpi	r24, 0x02	; 2
    10bc:	91 05       	cpc	r25, r1
    10be:	81 f4       	brne	.+32     	; 0x10e0 <.L34>

000010c0 <.Loc.92>:
        break;
    case 1:
        play_note(NOTE_3, 2, 0, &note_number);
        break;
    case 2:
        play_note(NOTE_2, 3, 1, &note_number);
    10c0:	21 e9       	ldi	r18, 0x91	; 145
    10c2:	32 e0       	ldi	r19, 0x02	; 2
    10c4:	41 e0       	ldi	r20, 0x01	; 1
    10c6:	50 e0       	ldi	r21, 0x00	; 0
    10c8:	63 e0       	ldi	r22, 0x03	; 3
    10ca:	70 e0       	ldi	r23, 0x00	; 0
    10cc:	8a e8       	ldi	r24, 0x8A	; 138
    10ce:	91 e0       	ldi	r25, 0x01	; 1
    10d0:	0e 94 a8 07 	call	0xf50	; 0xf50 <play_note>

000010d4 <.LVL18>:
        buzzer_enable(0);
        note_number = 0;
        return 0;
        break;
    }
    return 1;
    10d4:	81 e0       	ldi	r24, 0x01	; 1

000010d6 <.Loc.95>:
        break;
    10d6:	08 95       	ret

000010d8 <.L33>:
        buzzer_enable(1);
    10d8:	81 e0       	ldi	r24, 0x01	; 1
    10da:	0e 94 8c 07 	call	0xf18	; 0xf18 <buzzer_enable>

000010de <.LVL19>:
    10de:	e1 cf       	rjmp	.-62     	; 0x10a2 <.L24>

000010e0 <.L34>:
    switch(note_number){
    10e0:	89 2b       	or	r24, r25
    10e2:	61 f4       	brne	.+24     	; 0x10fc <.L35>

000010e4 <.Loc.98>:
        play_note(NOTE_3, 3, 1, &note_number);
    10e4:	21 e9       	ldi	r18, 0x91	; 145
    10e6:	32 e0       	ldi	r19, 0x02	; 2
    10e8:	41 e0       	ldi	r20, 0x01	; 1
    10ea:	50 e0       	ldi	r21, 0x00	; 0
    10ec:	63 e0       	ldi	r22, 0x03	; 3
    10ee:	70 e0       	ldi	r23, 0x00	; 0
    10f0:	8e ea       	ldi	r24, 0xAE	; 174
    10f2:	91 e0       	ldi	r25, 0x01	; 1
    10f4:	0e 94 a8 07 	call	0xf50	; 0xf50 <play_note>

000010f8 <.LVL20>:
    return 1;
    10f8:	81 e0       	ldi	r24, 0x01	; 1

000010fa <.Loc.101>:
        break;
    10fa:	08 95       	ret

000010fc <.L35>:
    switch(note_number){
    10fc:	81 e0       	ldi	r24, 0x01	; 1
    10fe:	08 95       	ret

00001100 <.L26>:
    1100:	84 30       	cpi	r24, 0x04	; 4
    1102:	91 05       	cpc	r25, r1
    1104:	29 f1       	breq	.+74     	; 0x1150 <.L31>
    1106:	05 97       	sbiw	r24, 0x05	; 5
    1108:	49 f4       	brne	.+18     	; 0x111c <.L36>

0000110a <.Loc.103>:
        buzzer_enable(0);
    110a:	80 e0       	ldi	r24, 0x00	; 0
    110c:	0e 94 8c 07 	call	0xf18	; 0xf18 <buzzer_enable>

00001110 <.LVL21>:
        note_number = 0;
    1110:	10 92 92 02 	sts	0x0292, r1	; 0x800292 <note_number.1+0x1>
    1114:	10 92 91 02 	sts	0x0291, r1	; 0x800291 <note_number.1>

00001118 <.Loc.106>:
        return 0;
    1118:	80 e0       	ldi	r24, 0x00	; 0

0000111a <.Loc.108>:
}
    111a:	08 95       	ret

0000111c <.L36>:
    switch(note_number){
    111c:	81 e0       	ldi	r24, 0x01	; 1
    111e:	08 95       	ret

00001120 <.L27>:
        play_note(NOTE_3, 2, 0, &note_number);
    1120:	21 e9       	ldi	r18, 0x91	; 145
    1122:	32 e0       	ldi	r19, 0x02	; 2
    1124:	40 e0       	ldi	r20, 0x00	; 0
    1126:	50 e0       	ldi	r21, 0x00	; 0
    1128:	62 e0       	ldi	r22, 0x02	; 2
    112a:	70 e0       	ldi	r23, 0x00	; 0
    112c:	8e ea       	ldi	r24, 0xAE	; 174
    112e:	91 e0       	ldi	r25, 0x01	; 1
    1130:	0e 94 a8 07 	call	0xf50	; 0xf50 <play_note>

00001134 <.LVL22>:
    return 1;
    1134:	81 e0       	ldi	r24, 0x01	; 1

00001136 <.Loc.113>:
        break;
    1136:	08 95       	ret

00001138 <.L25>:
        play_note(NOTE_1, 7, 1, &note_number);
    1138:	21 e9       	ldi	r18, 0x91	; 145
    113a:	32 e0       	ldi	r19, 0x02	; 2
    113c:	41 e0       	ldi	r20, 0x01	; 1
    113e:	50 e0       	ldi	r21, 0x00	; 0
    1140:	67 e0       	ldi	r22, 0x07	; 7
    1142:	70 e0       	ldi	r23, 0x00	; 0
    1144:	8a e6       	ldi	r24, 0x6A	; 106
    1146:	91 e0       	ldi	r25, 0x01	; 1
    1148:	0e 94 a8 07 	call	0xf50	; 0xf50 <play_note>

0000114c <.LVL23>:
    return 1;
    114c:	81 e0       	ldi	r24, 0x01	; 1

0000114e <.Loc.117>:
        break;
    114e:	08 95       	ret

00001150 <.L31>:
        play_note(NOTE_8, 30, 0, &note_number);
    1150:	21 e9       	ldi	r18, 0x91	; 145
    1152:	32 e0       	ldi	r19, 0x02	; 2
    1154:	40 e0       	ldi	r20, 0x00	; 0
    1156:	50 e0       	ldi	r21, 0x00	; 0
    1158:	6e e1       	ldi	r22, 0x1E	; 30
    115a:	70 e0       	ldi	r23, 0x00	; 0
    115c:	8f e6       	ldi	r24, 0x6F	; 111
    115e:	92 e0       	ldi	r25, 0x02	; 2
    1160:	0e 94 a8 07 	call	0xf50	; 0xf50 <play_note>

00001164 <.LVL24>:
    return 1;
    1164:	81 e0       	ldi	r24, 0x01	; 1

00001166 <.Loc.121>:
        break;
    1166:	08 95       	ret

00001168 <play_song>:
// Sounds like old nokia
char play_song(){
    static int note_number = 0;
    if(!note_number){
    1168:	80 91 8f 02 	lds	r24, 0x028F	; 0x80028f <note_number.0>
    116c:	90 91 90 02 	lds	r25, 0x0290	; 0x800290 <note_number.0+0x1>
    1170:	89 2b       	or	r24, r25
    1172:	71 f0       	breq	.+28     	; 0x1190 <.L57>

00001174 <.L38>:
        buzzer_enable(1);
    }
    switch(note_number){
    1174:	e0 91 8f 02 	lds	r30, 0x028F	; 0x80028f <note_number.0>
    1178:	f0 91 90 02 	lds	r31, 0x0290	; 0x800290 <note_number.0+0x1>
    117c:	ef 30       	cpi	r30, 0x0F	; 15
    117e:	f1 05       	cpc	r31, r1
    1180:	08 f0       	brcs	.+2      	; 0x1184 <L0^A+0x2>

00001182 <L0^A>:
    1182:	bb c0       	rjmp	.+374    	; 0x12fa <.L56>
    1184:	88 27       	eor	r24, r24
    1186:	e7 5b       	subi	r30, 0xB7	; 183
    1188:	ff 4e       	sbci	r31, 0xEF	; 239
    118a:	8f 4f       	sbci	r24, 0xFF	; 255
    118c:	0c 94 e2 0e 	jmp	0x1dc4	; 0x1dc4 <__tablejump2__>

00001190 <.L57>:
        buzzer_enable(1);
    1190:	81 e0       	ldi	r24, 0x01	; 1
    1192:	0e 94 8c 07 	call	0xf18	; 0xf18 <buzzer_enable>

00001196 <.LVL25>:
    1196:	ee cf       	rjmp	.-36     	; 0x1174 <.L38>

00001198 <.L55>:
    case 0:
        play_note(NOTE_8, 1, 1, &note_number);
    1198:	2f e8       	ldi	r18, 0x8F	; 143
    119a:	32 e0       	ldi	r19, 0x02	; 2
    119c:	41 e0       	ldi	r20, 0x01	; 1
    119e:	50 e0       	ldi	r21, 0x00	; 0
    11a0:	61 e0       	ldi	r22, 0x01	; 1
    11a2:	70 e0       	ldi	r23, 0x00	; 0
    11a4:	8f e6       	ldi	r24, 0x6F	; 111
    11a6:	92 e0       	ldi	r25, 0x02	; 2
    11a8:	0e 94 a8 07 	call	0xf50	; 0xf50 <play_note>

000011ac <.LVL26>:
        buzzer_enable(0);
        note_number = 0;
        return 0;
        break;
    }
    return 1;
    11ac:	81 e0       	ldi	r24, 0x01	; 1

000011ae <.Loc.131>:
        break;
    11ae:	08 95       	ret

000011b0 <.L54>:
        play_note(NOTE_7, 1, 1, &note_number);
    11b0:	2f e8       	ldi	r18, 0x8F	; 143
    11b2:	32 e0       	ldi	r19, 0x02	; 2
    11b4:	41 e0       	ldi	r20, 0x01	; 1
    11b6:	50 e0       	ldi	r21, 0x00	; 0
    11b8:	61 e0       	ldi	r22, 0x01	; 1
    11ba:	70 e0       	ldi	r23, 0x00	; 0
    11bc:	82 e5       	ldi	r24, 0x52	; 82
    11be:	92 e0       	ldi	r25, 0x02	; 2
    11c0:	0e 94 a8 07 	call	0xf50	; 0xf50 <play_note>

000011c4 <.LVL27>:
    return 1;
    11c4:	81 e0       	ldi	r24, 0x01	; 1

000011c6 <.Loc.135>:
        break;
    11c6:	08 95       	ret

000011c8 <.L53>:
        play_note(NOTE_3, 2, 1, &note_number);
    11c8:	2f e8       	ldi	r18, 0x8F	; 143
    11ca:	32 e0       	ldi	r19, 0x02	; 2
    11cc:	41 e0       	ldi	r20, 0x01	; 1
    11ce:	50 e0       	ldi	r21, 0x00	; 0
    11d0:	62 e0       	ldi	r22, 0x02	; 2
    11d2:	70 e0       	ldi	r23, 0x00	; 0
    11d4:	8e ea       	ldi	r24, 0xAE	; 174
    11d6:	91 e0       	ldi	r25, 0x01	; 1
    11d8:	0e 94 a8 07 	call	0xf50	; 0xf50 <play_note>

000011dc <.LVL28>:
    return 1;
    11dc:	81 e0       	ldi	r24, 0x01	; 1

000011de <.Loc.139>:
        break;
    11de:	08 95       	ret

000011e0 <.L52>:
        play_note(NOTE_4, 2, 1, &note_number);
    11e0:	2f e8       	ldi	r18, 0x8F	; 143
    11e2:	32 e0       	ldi	r19, 0x02	; 2
    11e4:	41 e0       	ldi	r20, 0x01	; 1
    11e6:	50 e0       	ldi	r21, 0x00	; 0
    11e8:	62 e0       	ldi	r22, 0x02	; 2
    11ea:	70 e0       	ldi	r23, 0x00	; 0
    11ec:	81 ec       	ldi	r24, 0xC1	; 193
    11ee:	91 e0       	ldi	r25, 0x01	; 1
    11f0:	0e 94 a8 07 	call	0xf50	; 0xf50 <play_note>

000011f4 <.LVL29>:
    return 1;
    11f4:	81 e0       	ldi	r24, 0x01	; 1

000011f6 <.Loc.143>:
        break;
    11f6:	08 95       	ret

000011f8 <.L51>:
        play_note(NOTE_7, 1, 1, &note_number);
    11f8:	2f e8       	ldi	r18, 0x8F	; 143
    11fa:	32 e0       	ldi	r19, 0x02	; 2
    11fc:	41 e0       	ldi	r20, 0x01	; 1
    11fe:	50 e0       	ldi	r21, 0x00	; 0
    1200:	61 e0       	ldi	r22, 0x01	; 1
    1202:	70 e0       	ldi	r23, 0x00	; 0
    1204:	82 e5       	ldi	r24, 0x52	; 82
    1206:	92 e0       	ldi	r25, 0x02	; 2
    1208:	0e 94 a8 07 	call	0xf50	; 0xf50 <play_note>

0000120c <.LVL30>:
    return 1;
    120c:	81 e0       	ldi	r24, 0x01	; 1

0000120e <.Loc.147>:
        break;
    120e:	08 95       	ret

00001210 <.L50>:
        play_note(NOTE_6, 1, 1, &note_number);
    1210:	2f e8       	ldi	r18, 0x8F	; 143
    1212:	32 e0       	ldi	r19, 0x02	; 2
    1214:	41 e0       	ldi	r20, 0x01	; 1
    1216:	50 e0       	ldi	r21, 0x00	; 0
    1218:	61 e0       	ldi	r22, 0x01	; 1
    121a:	70 e0       	ldi	r23, 0x00	; 0
    121c:	8c e1       	ldi	r24, 0x1C	; 28
    121e:	92 e0       	ldi	r25, 0x02	; 2
    1220:	0e 94 a8 07 	call	0xf50	; 0xf50 <play_note>

00001224 <.LVL31>:
    return 1;
    1224:	81 e0       	ldi	r24, 0x01	; 1

00001226 <.Loc.151>:
        break;
    1226:	08 95       	ret

00001228 <.L49>:
        play_note(NOTE_1, 2, 1, &note_number);
    1228:	2f e8       	ldi	r18, 0x8F	; 143
    122a:	32 e0       	ldi	r19, 0x02	; 2
    122c:	41 e0       	ldi	r20, 0x01	; 1
    122e:	50 e0       	ldi	r21, 0x00	; 0
    1230:	62 e0       	ldi	r22, 0x02	; 2
    1232:	70 e0       	ldi	r23, 0x00	; 0
    1234:	8a e6       	ldi	r24, 0x6A	; 106
    1236:	91 e0       	ldi	r25, 0x01	; 1
    1238:	0e 94 a8 07 	call	0xf50	; 0xf50 <play_note>

0000123c <.LVL32>:
    return 1;
    123c:	81 e0       	ldi	r24, 0x01	; 1

0000123e <.Loc.155>:
        break;
    123e:	08 95       	ret

00001240 <.L48>:
        play_note(NOTE_2, 2, 1, &note_number);
    1240:	2f e8       	ldi	r18, 0x8F	; 143
    1242:	32 e0       	ldi	r19, 0x02	; 2
    1244:	41 e0       	ldi	r20, 0x01	; 1
    1246:	50 e0       	ldi	r21, 0x00	; 0
    1248:	62 e0       	ldi	r22, 0x02	; 2
    124a:	70 e0       	ldi	r23, 0x00	; 0
    124c:	8a e8       	ldi	r24, 0x8A	; 138
    124e:	91 e0       	ldi	r25, 0x01	; 1
    1250:	0e 94 a8 07 	call	0xf50	; 0xf50 <play_note>

00001254 <.LVL33>:
    return 1;
    1254:	81 e0       	ldi	r24, 0x01	; 1

00001256 <.Loc.159>:
        break;
    1256:	08 95       	ret

00001258 <.L47>:
        play_note(NOTE_6, 1, 1, &note_number);
    1258:	2f e8       	ldi	r18, 0x8F	; 143
    125a:	32 e0       	ldi	r19, 0x02	; 2
    125c:	41 e0       	ldi	r20, 0x01	; 1
    125e:	50 e0       	ldi	r21, 0x00	; 0
    1260:	61 e0       	ldi	r22, 0x01	; 1
    1262:	70 e0       	ldi	r23, 0x00	; 0
    1264:	8c e1       	ldi	r24, 0x1C	; 28
    1266:	92 e0       	ldi	r25, 0x02	; 2
    1268:	0e 94 a8 07 	call	0xf50	; 0xf50 <play_note>

0000126c <.LVL34>:
    return 1;
    126c:	81 e0       	ldi	r24, 0x01	; 1

0000126e <.Loc.163>:
        break;
    126e:	08 95       	ret

00001270 <.L46>:
        play_note(NOTE_5, 1, 1, &note_number);
    1270:	2f e8       	ldi	r18, 0x8F	; 143
    1272:	32 e0       	ldi	r19, 0x02	; 2
    1274:	41 e0       	ldi	r20, 0x01	; 1
    1276:	50 e0       	ldi	r21, 0x00	; 0
    1278:	61 e0       	ldi	r22, 0x01	; 1
    127a:	70 e0       	ldi	r23, 0x00	; 0
    127c:	8c ee       	ldi	r24, 0xEC	; 236
    127e:	91 e0       	ldi	r25, 0x01	; 1
    1280:	0e 94 a8 07 	call	0xf50	; 0xf50 <play_note>

00001284 <.LVL35>:
    return 1;
    1284:	81 e0       	ldi	r24, 0x01	; 1

00001286 <.Loc.167>:
        break;
    1286:	08 95       	ret

00001288 <.L45>:
        play_note(NOTE_1, 2, 1, &note_number);
    1288:	2f e8       	ldi	r18, 0x8F	; 143
    128a:	32 e0       	ldi	r19, 0x02	; 2
    128c:	41 e0       	ldi	r20, 0x01	; 1
    128e:	50 e0       	ldi	r21, 0x00	; 0
    1290:	62 e0       	ldi	r22, 0x02	; 2
    1292:	70 e0       	ldi	r23, 0x00	; 0
    1294:	8a e6       	ldi	r24, 0x6A	; 106
    1296:	91 e0       	ldi	r25, 0x01	; 1
    1298:	0e 94 a8 07 	call	0xf50	; 0xf50 <play_note>

0000129c <.LVL36>:
    return 1;
    129c:	81 e0       	ldi	r24, 0x01	; 1

0000129e <.Loc.171>:
        break;
    129e:	08 95       	ret

000012a0 <.L44>:
        play_note(NOTE_2, 2, 1, &note_number);
    12a0:	2f e8       	ldi	r18, 0x8F	; 143
    12a2:	32 e0       	ldi	r19, 0x02	; 2
    12a4:	41 e0       	ldi	r20, 0x01	; 1
    12a6:	50 e0       	ldi	r21, 0x00	; 0
    12a8:	62 e0       	ldi	r22, 0x02	; 2
    12aa:	70 e0       	ldi	r23, 0x00	; 0
    12ac:	8a e8       	ldi	r24, 0x8A	; 138
    12ae:	91 e0       	ldi	r25, 0x01	; 1
    12b0:	0e 94 a8 07 	call	0xf50	; 0xf50 <play_note>

000012b4 <.LVL37>:
    return 1;
    12b4:	81 e0       	ldi	r24, 0x01	; 1

000012b6 <.Loc.175>:
        break;
    12b6:	08 95       	ret

000012b8 <.L43>:
        play_note(NOTE_3, 5, 1, &note_number);
    12b8:	2f e8       	ldi	r18, 0x8F	; 143
    12ba:	32 e0       	ldi	r19, 0x02	; 2
    12bc:	41 e0       	ldi	r20, 0x01	; 1
    12be:	50 e0       	ldi	r21, 0x00	; 0
    12c0:	65 e0       	ldi	r22, 0x05	; 5
    12c2:	70 e0       	ldi	r23, 0x00	; 0
    12c4:	8e ea       	ldi	r24, 0xAE	; 174
    12c6:	91 e0       	ldi	r25, 0x01	; 1
    12c8:	0e 94 a8 07 	call	0xf50	; 0xf50 <play_note>

000012cc <.LVL38>:
    return 1;
    12cc:	81 e0       	ldi	r24, 0x01	; 1

000012ce <.Loc.179>:
        break;
    12ce:	08 95       	ret

000012d0 <.L42>:
        play_note(NOTE_1, 5, 0, &note_number);
    12d0:	2f e8       	ldi	r18, 0x8F	; 143
    12d2:	32 e0       	ldi	r19, 0x02	; 2
    12d4:	40 e0       	ldi	r20, 0x00	; 0
    12d6:	50 e0       	ldi	r21, 0x00	; 0
    12d8:	65 e0       	ldi	r22, 0x05	; 5
    12da:	70 e0       	ldi	r23, 0x00	; 0
    12dc:	8a e6       	ldi	r24, 0x6A	; 106
    12de:	91 e0       	ldi	r25, 0x01	; 1
    12e0:	0e 94 a8 07 	call	0xf50	; 0xf50 <play_note>

000012e4 <.LVL39>:
    return 1;
    12e4:	81 e0       	ldi	r24, 0x01	; 1

000012e6 <.Loc.183>:
        break;
    12e6:	08 95       	ret

000012e8 <.L40>:
        buzzer_enable(0);
    12e8:	80 e0       	ldi	r24, 0x00	; 0
    12ea:	0e 94 8c 07 	call	0xf18	; 0xf18 <buzzer_enable>

000012ee <.LVL40>:
        note_number = 0;
    12ee:	10 92 90 02 	sts	0x0290, r1	; 0x800290 <note_number.0+0x1>
    12f2:	10 92 8f 02 	sts	0x028F, r1	; 0x80028f <note_number.0>

000012f6 <.Loc.187>:
        return 0;
    12f6:	80 e0       	ldi	r24, 0x00	; 0
    12f8:	08 95       	ret

000012fa <.L56>:
    switch(note_number){
    12fa:	81 e0       	ldi	r24, 0x01	; 1

000012fc <.Loc.190>:
}
    12fc:	08 95       	ret

000012fe <__vector_23>:
    12fe:	1f 92       	push	r1
    1300:	1f b6       	in	r1, 0x3f	; 63
    1302:	1f 92       	push	r1
    1304:	11 24       	eor	r1, r1
    1306:	8f 93       	push	r24
    1308:	8b b7       	in	r24, 0x3b	; 59
    130a:	8f 93       	push	r24
    130c:	9f 93       	push	r25
    130e:	ef 93       	push	r30
    1310:	ff 93       	push	r31

00001312 <.Loc.1>:
    1312:	80 91 99 02 	lds	r24, 0x0299	; 0x800299 <step_count_left>
    1316:	90 91 9a 02 	lds	r25, 0x029A	; 0x80029a <step_count_left+0x1>

0000131a <.Loc.3>:
    131a:	18 16       	cp	r1, r24
    131c:	19 06       	cpc	r1, r25
    131e:	9c f4       	brge	.+38     	; 0x1346 <.L2>

00001320 <.Loc.4>:
    1320:	80 91 99 02 	lds	r24, 0x0299	; 0x800299 <step_count_left>
    1324:	90 91 9a 02 	lds	r25, 0x029A	; 0x80029a <step_count_left+0x1>
    1328:	01 97       	sbiw	r24, 0x01	; 1
    132a:	90 93 9a 02 	sts	0x029A, r25	; 0x80029a <step_count_left+0x1>
    132e:	80 93 99 02 	sts	0x0299, r24	; 0x800299 <step_count_left>

00001332 <.L1>:
    1332:	ff 91       	pop	r31
    1334:	ef 91       	pop	r30
    1336:	9f 91       	pop	r25
    1338:	8f 91       	pop	r24
    133a:	8b bf       	out	0x3b, r24	; 59
    133c:	8f 91       	pop	r24
    133e:	1f 90       	pop	r1
    1340:	1f be       	out	0x3f, r1	; 63
    1342:	1f 90       	pop	r1
    1344:	18 95       	reti

00001346 <.L2>:
    1346:	80 91 99 02 	lds	r24, 0x0299	; 0x800299 <step_count_left>
    134a:	90 91 9a 02 	lds	r25, 0x029A	; 0x80029a <step_count_left+0x1>

0000134e <.Loc.9>:
    134e:	89 2b       	or	r24, r25
    1350:	81 f7       	brne	.-32     	; 0x1332 <.L1>

00001352 <.Loc.10>:
    1352:	8f ef       	ldi	r24, 0xFF	; 255
    1354:	9f ef       	ldi	r25, 0xFF	; 255
    1356:	90 93 9a 02 	sts	0x029A, r25	; 0x80029a <step_count_left+0x1>
    135a:	80 93 99 02 	sts	0x0299, r24	; 0x800299 <step_count_left>

0000135e <.Loc.12>:
    135e:	90 93 98 02 	sts	0x0298, r25	; 0x800298 <step_count_right+0x1>
    1362:	80 93 97 02 	sts	0x0297, r24	; 0x800297 <step_count_right>

00001366 <.Loc.14>:
    1366:	ee e6       	ldi	r30, 0x6E	; 110
    1368:	f0 e0       	ldi	r31, 0x00	; 0
    136a:	80 81       	ld	r24, Z
    136c:	8e 7f       	andi	r24, 0xFE	; 254
    136e:	80 83       	st	Z, r24

00001370 <.Loc.16>:
    1370:	e0 e7       	ldi	r30, 0x70	; 112
    1372:	f0 e0       	ldi	r31, 0x00	; 0
    1374:	80 81       	ld	r24, Z
    1376:	8e 7f       	andi	r24, 0xFE	; 254
    1378:	80 83       	st	Z, r24

0000137a <.Loc.18>:
    137a:	db cf       	rjmp	.-74     	; 0x1332 <.L1>

0000137c <__vector_15>:
    137c:	1f 92       	push	r1
    137e:	1f b6       	in	r1, 0x3f	; 63
    1380:	1f 92       	push	r1
    1382:	11 24       	eor	r1, r1
    1384:	8f 93       	push	r24
    1386:	8b b7       	in	r24, 0x3b	; 59
    1388:	8f 93       	push	r24
    138a:	9f 93       	push	r25
    138c:	ef 93       	push	r30
    138e:	ff 93       	push	r31

00001390 <.Loc.20>:
    1390:	80 91 97 02 	lds	r24, 0x0297	; 0x800297 <step_count_right>
    1394:	90 91 98 02 	lds	r25, 0x0298	; 0x800298 <step_count_right+0x1>

00001398 <.Loc.22>:
    1398:	18 16       	cp	r1, r24
    139a:	19 06       	cpc	r1, r25
    139c:	9c f4       	brge	.+38     	; 0x13c4 <.L5>

0000139e <.Loc.23>:
    139e:	80 91 97 02 	lds	r24, 0x0297	; 0x800297 <step_count_right>
    13a2:	90 91 98 02 	lds	r25, 0x0298	; 0x800298 <step_count_right+0x1>
    13a6:	01 97       	sbiw	r24, 0x01	; 1
    13a8:	90 93 98 02 	sts	0x0298, r25	; 0x800298 <step_count_right+0x1>
    13ac:	80 93 97 02 	sts	0x0297, r24	; 0x800297 <step_count_right>

000013b0 <.L4>:
    13b0:	ff 91       	pop	r31
    13b2:	ef 91       	pop	r30
    13b4:	9f 91       	pop	r25
    13b6:	8f 91       	pop	r24
    13b8:	8b bf       	out	0x3b, r24	; 59
    13ba:	8f 91       	pop	r24
    13bc:	1f 90       	pop	r1
    13be:	1f be       	out	0x3f, r1	; 63
    13c0:	1f 90       	pop	r1
    13c2:	18 95       	reti

000013c4 <.L5>:
    13c4:	80 91 97 02 	lds	r24, 0x0297	; 0x800297 <step_count_right>
    13c8:	90 91 98 02 	lds	r25, 0x0298	; 0x800298 <step_count_right+0x1>

000013cc <.Loc.28>:
    13cc:	89 2b       	or	r24, r25
    13ce:	81 f7       	brne	.-32     	; 0x13b0 <.L4>

000013d0 <.Loc.29>:
    13d0:	8f ef       	ldi	r24, 0xFF	; 255
    13d2:	9f ef       	ldi	r25, 0xFF	; 255
    13d4:	90 93 9a 02 	sts	0x029A, r25	; 0x80029a <step_count_left+0x1>
    13d8:	80 93 99 02 	sts	0x0299, r24	; 0x800299 <step_count_left>

000013dc <.Loc.31>:
    13dc:	90 93 98 02 	sts	0x0298, r25	; 0x800298 <step_count_right+0x1>
    13e0:	80 93 97 02 	sts	0x0297, r24	; 0x800297 <step_count_right>

000013e4 <.Loc.33>:
    13e4:	ee e6       	ldi	r30, 0x6E	; 110
    13e6:	f0 e0       	ldi	r31, 0x00	; 0
    13e8:	80 81       	ld	r24, Z
    13ea:	8e 7f       	andi	r24, 0xFE	; 254
    13ec:	80 83       	st	Z, r24

000013ee <.Loc.35>:
    13ee:	e0 e7       	ldi	r30, 0x70	; 112
    13f0:	f0 e0       	ldi	r31, 0x00	; 0
    13f2:	80 81       	ld	r24, Z
    13f4:	8e 7f       	andi	r24, 0xFE	; 254
    13f6:	80 83       	st	Z, r24

000013f8 <.Loc.37>:
    13f8:	db cf       	rjmp	.-74     	; 0x13b0 <.L4>

000013fa <__vector_50>:
    13fa:	1f 92       	push	r1
    13fc:	1f b6       	in	r1, 0x3f	; 63
    13fe:	1f 92       	push	r1
    1400:	11 24       	eor	r1, r1
    1402:	2f 93       	push	r18
    1404:	2b b7       	in	r18, 0x3b	; 59
    1406:	2f 93       	push	r18
    1408:	3f 93       	push	r19
    140a:	8f 93       	push	r24
    140c:	9f 93       	push	r25
    140e:	ef 93       	push	r30
    1410:	ff 93       	push	r31

00001412 <.Loc.39>:
    1412:	80 91 96 02 	lds	r24, 0x0296	; 0x800296 <direction_change_left>

00001416 <.Loc.43>:
    1416:	88 23       	and	r24, r24
    1418:	09 f4       	brne	.+2      	; 0x141c <.Loc.44>

0000141a <L0^A>:
    141a:	56 c0       	rjmp	.+172    	; 0x14c8 <.L8>

0000141c <.Loc.44>:
    141c:	87 b5       	in	r24, 0x27	; 39

0000141e <.Loc.46>:
    141e:	8f 3f       	cpi	r24, 0xFF	; 255
    1420:	39 f1       	breq	.+78     	; 0x1470 <.L9>

00001422 <.Loc.47>:
    1422:	87 b5       	in	r24, 0x27	; 39

00001424 <.Loc.49>:
    1424:	8e 3e       	cpi	r24, 0xEE	; 238
    1426:	00 f1       	brcs	.+64     	; 0x1468 <.L10>

00001428 <.Loc.50>:
    1428:	8f ef       	ldi	r24, 0xFF	; 255
    142a:	87 bd       	out	0x27, r24	; 39

0000142c <.L11>:
    142c:	80 91 95 02 	lds	r24, 0x0295	; 0x800295 <direction_change_right>

00001430 <.Loc.54>:
    1430:	88 23       	and	r24, r24
    1432:	09 f4       	brne	.+2      	; 0x1436 <.Loc.55>

00001434 <L0^A>:
    1434:	b4 c0       	rjmp	.+360    	; 0x159e <.L18>

00001436 <.Loc.55>:
    1436:	80 91 b3 00 	lds	r24, 0x00B3	; 0x8000b3 <__TEXT_REGION_LENGTH__+0x7000b3>

0000143a <.Loc.57>:
    143a:	8f 3f       	cpi	r24, 0xFF	; 255
    143c:	09 f4       	brne	.+2      	; 0x1440 <.Loc.58>

0000143e <L0^A>:
    143e:	8a c0       	rjmp	.+276    	; 0x1554 <.L19>

00001440 <.Loc.58>:
    1440:	80 91 b3 00 	lds	r24, 0x00B3	; 0x8000b3 <__TEXT_REGION_LENGTH__+0x7000b3>

00001444 <.Loc.60>:
    1444:	8e 3e       	cpi	r24, 0xEE	; 238
    1446:	08 f4       	brcc	.+2      	; 0x144a <.Loc.61>

00001448 <L0^A>:
    1448:	7f c0       	rjmp	.+254    	; 0x1548 <.L20>

0000144a <.Loc.61>:
    144a:	8f ef       	ldi	r24, 0xFF	; 255
    144c:	80 93 b3 00 	sts	0x00B3, r24	; 0x8000b3 <__TEXT_REGION_LENGTH__+0x7000b3>

00001450 <.L7>:
    1450:	ff 91       	pop	r31
    1452:	ef 91       	pop	r30
    1454:	9f 91       	pop	r25
    1456:	8f 91       	pop	r24
    1458:	3f 91       	pop	r19
    145a:	2f 91       	pop	r18
    145c:	2b bf       	out	0x3b, r18	; 59
    145e:	2f 91       	pop	r18
    1460:	1f 90       	pop	r1
    1462:	1f be       	out	0x3f, r1	; 63
    1464:	1f 90       	pop	r1
    1466:	18 95       	reti

00001468 <.L10>:
    1468:	87 b5       	in	r24, 0x27	; 39

0000146a <.Loc.65>:
    146a:	8e 5e       	subi	r24, 0xEE	; 238
    146c:	87 bd       	out	0x27, r24	; 39
    146e:	de cf       	rjmp	.-68     	; 0x142c <.L11>

00001470 <.L9>:
    1470:	e2 e0       	ldi	r30, 0x02	; 2
    1472:	f1 e0       	ldi	r31, 0x01	; 1
    1474:	80 81       	ld	r24, Z

00001476 <.Loc.67>:
    1476:	88 60       	ori	r24, 0x08	; 8
    1478:	80 83       	st	Z, r24

0000147a <.Loc.68>:
    147a:	80 91 96 02 	lds	r24, 0x0296	; 0x800296 <direction_change_left>

0000147e <.Loc.70>:
    147e:	83 30       	cpi	r24, 0x03	; 3
    1480:	f9 f0       	breq	.+62     	; 0x14c0 <.L28>

00001482 <.Loc.71>:
    1482:	80 91 96 02 	lds	r24, 0x0296	; 0x800296 <direction_change_left>

00001486 <.Loc.73>:
    1486:	81 30       	cpi	r24, 0x01	; 1
    1488:	e9 f0       	breq	.+58     	; 0x14c4 <.L29>

0000148a <.L13>:
    148a:	80 91 a1 02 	lds	r24, 0x02A1	; 0x8002a1 <count1.3>
    148e:	90 91 a2 02 	lds	r25, 0x02A2	; 0x8002a2 <count1.3+0x1>
    1492:	01 96       	adiw	r24, 0x01	; 1
    1494:	90 93 a2 02 	sts	0x02A2, r25	; 0x8002a2 <count1.3+0x1>
    1498:	80 93 a1 02 	sts	0x02A1, r24	; 0x8002a1 <count1.3>

0000149c <.Loc.76>:
    149c:	04 97       	sbiw	r24, 0x04	; 4
    149e:	34 f2       	brlt	.-116    	; 0x142c <.L11>

000014a0 <.Loc.78>:
    14a0:	80 91 96 02 	lds	r24, 0x0296	; 0x800296 <direction_change_left>

000014a4 <.Loc.80>:
    14a4:	82 30       	cpi	r24, 0x02	; 2
    14a6:	39 f0       	breq	.+14     	; 0x14b6 <.L14>

000014a8 <.Loc.81>:
    14a8:	e2 e0       	ldi	r30, 0x02	; 2
    14aa:	f1 e0       	ldi	r31, 0x01	; 1
    14ac:	80 81       	ld	r24, Z
    14ae:	87 7f       	andi	r24, 0xF7	; 247
    14b0:	80 83       	st	Z, r24

000014b2 <.Loc.83>:
    14b2:	10 92 96 02 	sts	0x0296, r1	; 0x800296 <direction_change_left>

000014b6 <.L14>:
    14b6:	10 92 a2 02 	sts	0x02A2, r1	; 0x8002a2 <count1.3+0x1>
    14ba:	10 92 a1 02 	sts	0x02A1, r1	; 0x8002a1 <count1.3>
    14be:	b6 cf       	rjmp	.-148    	; 0x142c <.L11>

000014c0 <.L28>:
    14c0:	73 98       	cbi	0x0e, 3	; 14
    14c2:	e3 cf       	rjmp	.-58     	; 0x148a <.L13>

000014c4 <.L29>:
    14c4:	73 9a       	sbi	0x0e, 3	; 14
    14c6:	e1 cf       	rjmp	.-62     	; 0x148a <.L13>

000014c8 <.L8>:
    14c8:	e2 e0       	ldi	r30, 0x02	; 2
    14ca:	f1 e0       	ldi	r31, 0x01	; 1
    14cc:	80 81       	ld	r24, Z
    14ce:	87 7f       	andi	r24, 0xF7	; 247
    14d0:	80 83       	st	Z, r24

000014d2 <.Loc.93>:
    14d2:	87 b5       	in	r24, 0x27	; 39

000014d4 <.Loc.95>:
    14d4:	20 91 04 02 	lds	r18, 0x0204	; 0x800204 <freq_target_left>
    14d8:	30 91 05 02 	lds	r19, 0x0205	; 0x800205 <freq_target_left+0x1>

000014dc <.Loc.96>:
    14dc:	90 e0       	ldi	r25, 0x00	; 0

000014de <.Loc.97>:
    14de:	82 17       	cp	r24, r18
    14e0:	93 07       	cpc	r25, r19
    14e2:	a4 f4       	brge	.+40     	; 0x150c <.L15>

000014e4 <.Loc.98>:
    14e4:	87 b5       	in	r24, 0x27	; 39

000014e6 <.Loc.100>:
    14e6:	20 91 04 02 	lds	r18, 0x0204	; 0x800204 <freq_target_left>
    14ea:	30 91 05 02 	lds	r19, 0x0205	; 0x800205 <freq_target_left+0x1>

000014ee <.Loc.101>:
    14ee:	90 e0       	ldi	r25, 0x00	; 0

000014f0 <.Loc.102>:
    14f0:	41 96       	adiw	r24, 0x11	; 17

000014f2 <.Loc.103>:
    14f2:	82 17       	cp	r24, r18
    14f4:	93 07       	cpc	r25, r19
    14f6:	34 f0       	brlt	.+12     	; 0x1504 <.L16>

000014f8 <.Loc.104>:
    14f8:	80 91 04 02 	lds	r24, 0x0204	; 0x800204 <freq_target_left>
    14fc:	90 91 05 02 	lds	r25, 0x0205	; 0x800205 <freq_target_left+0x1>
    1500:	87 bd       	out	0x27, r24	; 39
    1502:	94 cf       	rjmp	.-216    	; 0x142c <.L11>

00001504 <.L16>:
    1504:	87 b5       	in	r24, 0x27	; 39

00001506 <.Loc.107>:
    1506:	8e 5e       	subi	r24, 0xEE	; 238
    1508:	87 bd       	out	0x27, r24	; 39
    150a:	90 cf       	rjmp	.-224    	; 0x142c <.L11>

0000150c <.L15>:
    150c:	87 b5       	in	r24, 0x27	; 39

0000150e <.Loc.110>:
    150e:	20 91 04 02 	lds	r18, 0x0204	; 0x800204 <freq_target_left>
    1512:	30 91 05 02 	lds	r19, 0x0205	; 0x800205 <freq_target_left+0x1>

00001516 <.Loc.111>:
    1516:	90 e0       	ldi	r25, 0x00	; 0

00001518 <.Loc.112>:
    1518:	28 17       	cp	r18, r24
    151a:	39 07       	cpc	r19, r25
    151c:	0c f0       	brlt	.+2      	; 0x1520 <.Loc.113>

0000151e <L0^A>:
    151e:	86 cf       	rjmp	.-244    	; 0x142c <.L11>

00001520 <.Loc.113>:
    1520:	87 b5       	in	r24, 0x27	; 39

00001522 <.Loc.115>:
    1522:	20 91 04 02 	lds	r18, 0x0204	; 0x800204 <freq_target_left>
    1526:	30 91 05 02 	lds	r19, 0x0205	; 0x800205 <freq_target_left+0x1>
    152a:	81 51       	subi	r24, 0x11	; 17
    152c:	99 0b       	sbc	r25, r25

0000152e <.Loc.116>:
    152e:	28 17       	cp	r18, r24
    1530:	39 07       	cpc	r19, r25
    1532:	34 f0       	brlt	.+12     	; 0x1540 <.L17>

00001534 <.Loc.117>:
    1534:	80 91 04 02 	lds	r24, 0x0204	; 0x800204 <freq_target_left>
    1538:	90 91 05 02 	lds	r25, 0x0205	; 0x800205 <freq_target_left+0x1>
    153c:	87 bd       	out	0x27, r24	; 39
    153e:	76 cf       	rjmp	.-276    	; 0x142c <.L11>

00001540 <.L17>:
    1540:	87 b5       	in	r24, 0x27	; 39

00001542 <.Loc.120>:
    1542:	82 51       	subi	r24, 0x12	; 18
    1544:	87 bd       	out	0x27, r24	; 39
    1546:	72 cf       	rjmp	.-284    	; 0x142c <.L11>

00001548 <.L20>:
    1548:	e3 eb       	ldi	r30, 0xB3	; 179
    154a:	f0 e0       	ldi	r31, 0x00	; 0
    154c:	80 81       	ld	r24, Z

0000154e <.Loc.122>:
    154e:	8e 5e       	subi	r24, 0xEE	; 238
    1550:	80 83       	st	Z, r24
    1552:	7e cf       	rjmp	.-260    	; 0x1450 <.L7>

00001554 <.L19>:
    1554:	2d 9a       	sbi	0x05, 5	; 5

00001556 <.Loc.125>:
    1556:	80 91 95 02 	lds	r24, 0x0295	; 0x800295 <direction_change_right>

0000155a <.Loc.127>:
    155a:	81 30       	cpi	r24, 0x01	; 1
    155c:	e1 f0       	breq	.+56     	; 0x1596 <.L30>

0000155e <.Loc.128>:
    155e:	80 91 95 02 	lds	r24, 0x0295	; 0x800295 <direction_change_right>

00001562 <.Loc.130>:
    1562:	83 30       	cpi	r24, 0x03	; 3
    1564:	d1 f0       	breq	.+52     	; 0x159a <.L31>

00001566 <.L23>:
    1566:	80 91 9f 02 	lds	r24, 0x029F	; 0x80029f <count2.2>
    156a:	90 91 a0 02 	lds	r25, 0x02A0	; 0x8002a0 <count2.2+0x1>
    156e:	01 96       	adiw	r24, 0x01	; 1
    1570:	90 93 a0 02 	sts	0x02A0, r25	; 0x8002a0 <count2.2+0x1>
    1574:	80 93 9f 02 	sts	0x029F, r24	; 0x80029f <count2.2>

00001578 <.Loc.133>:
    1578:	04 97       	sbiw	r24, 0x04	; 4
    157a:	0c f4       	brge	.+2      	; 0x157e <.Loc.135>

0000157c <L0^A>:
    157c:	69 cf       	rjmp	.-302    	; 0x1450 <.L7>

0000157e <.Loc.135>:
    157e:	80 91 95 02 	lds	r24, 0x0295	; 0x800295 <direction_change_right>

00001582 <.Loc.137>:
    1582:	82 30       	cpi	r24, 0x02	; 2
    1584:	19 f0       	breq	.+6      	; 0x158c <.L24>

00001586 <.Loc.138>:
    1586:	2d 98       	cbi	0x05, 5	; 5

00001588 <.Loc.140>:
    1588:	10 92 95 02 	sts	0x0295, r1	; 0x800295 <direction_change_right>

0000158c <.L24>:
    158c:	10 92 a0 02 	sts	0x02A0, r1	; 0x8002a0 <count2.2+0x1>
    1590:	10 92 9f 02 	sts	0x029F, r1	; 0x80029f <count2.2>
    1594:	5d cf       	rjmp	.-326    	; 0x1450 <.L7>

00001596 <.L30>:
    1596:	2c 98       	cbi	0x05, 4	; 5
    1598:	e6 cf       	rjmp	.-52     	; 0x1566 <.L23>

0000159a <.L31>:
    159a:	2c 9a       	sbi	0x05, 4	; 5
    159c:	e4 cf       	rjmp	.-56     	; 0x1566 <.L23>

0000159e <.L18>:
    159e:	2d 98       	cbi	0x05, 5	; 5

000015a0 <.Loc.150>:
    15a0:	80 91 b3 00 	lds	r24, 0x00B3	; 0x8000b3 <__TEXT_REGION_LENGTH__+0x7000b3>

000015a4 <.Loc.152>:
    15a4:	20 91 02 02 	lds	r18, 0x0202	; 0x800202 <freq_target_right>
    15a8:	30 91 03 02 	lds	r19, 0x0203	; 0x800203 <freq_target_right+0x1>

000015ac <.Loc.153>:
    15ac:	90 e0       	ldi	r25, 0x00	; 0

000015ae <.Loc.154>:
    15ae:	82 17       	cp	r24, r18
    15b0:	93 07       	cpc	r25, r19
    15b2:	c4 f4       	brge	.+48     	; 0x15e4 <.L25>

000015b4 <.Loc.155>:
    15b4:	80 91 b3 00 	lds	r24, 0x00B3	; 0x8000b3 <__TEXT_REGION_LENGTH__+0x7000b3>

000015b8 <.Loc.157>:
    15b8:	20 91 02 02 	lds	r18, 0x0202	; 0x800202 <freq_target_right>
    15bc:	30 91 03 02 	lds	r19, 0x0203	; 0x800203 <freq_target_right+0x1>

000015c0 <.Loc.158>:
    15c0:	90 e0       	ldi	r25, 0x00	; 0

000015c2 <.Loc.159>:
    15c2:	41 96       	adiw	r24, 0x11	; 17

000015c4 <.Loc.160>:
    15c4:	82 17       	cp	r24, r18
    15c6:	93 07       	cpc	r25, r19
    15c8:	3c f0       	brlt	.+14     	; 0x15d8 <.L26>

000015ca <.Loc.161>:
    15ca:	80 91 02 02 	lds	r24, 0x0202	; 0x800202 <freq_target_right>
    15ce:	90 91 03 02 	lds	r25, 0x0203	; 0x800203 <freq_target_right+0x1>
    15d2:	80 93 b3 00 	sts	0x00B3, r24	; 0x8000b3 <__TEXT_REGION_LENGTH__+0x7000b3>
    15d6:	3c cf       	rjmp	.-392    	; 0x1450 <.L7>

000015d8 <.L26>:
    15d8:	e3 eb       	ldi	r30, 0xB3	; 179
    15da:	f0 e0       	ldi	r31, 0x00	; 0
    15dc:	80 81       	ld	r24, Z

000015de <.Loc.164>:
    15de:	8e 5e       	subi	r24, 0xEE	; 238
    15e0:	80 83       	st	Z, r24
    15e2:	36 cf       	rjmp	.-404    	; 0x1450 <.L7>

000015e4 <.L25>:
    15e4:	80 91 b3 00 	lds	r24, 0x00B3	; 0x8000b3 <__TEXT_REGION_LENGTH__+0x7000b3>

000015e8 <.Loc.167>:
    15e8:	20 91 02 02 	lds	r18, 0x0202	; 0x800202 <freq_target_right>
    15ec:	30 91 03 02 	lds	r19, 0x0203	; 0x800203 <freq_target_right+0x1>

000015f0 <.Loc.168>:
    15f0:	90 e0       	ldi	r25, 0x00	; 0

000015f2 <.Loc.169>:
    15f2:	28 17       	cp	r18, r24
    15f4:	39 07       	cpc	r19, r25
    15f6:	0c f0       	brlt	.+2      	; 0x15fa <.Loc.170>

000015f8 <L0^A>:
    15f8:	2b cf       	rjmp	.-426    	; 0x1450 <.L7>

000015fa <.Loc.170>:
    15fa:	80 91 b3 00 	lds	r24, 0x00B3	; 0x8000b3 <__TEXT_REGION_LENGTH__+0x7000b3>

000015fe <.Loc.172>:
    15fe:	20 91 02 02 	lds	r18, 0x0202	; 0x800202 <freq_target_right>
    1602:	30 91 03 02 	lds	r19, 0x0203	; 0x800203 <freq_target_right+0x1>
    1606:	81 51       	subi	r24, 0x11	; 17
    1608:	99 0b       	sbc	r25, r25

0000160a <.Loc.173>:
    160a:	28 17       	cp	r18, r24
    160c:	39 07       	cpc	r19, r25
    160e:	3c f0       	brlt	.+14     	; 0x161e <.L27>

00001610 <.Loc.174>:
    1610:	80 91 02 02 	lds	r24, 0x0202	; 0x800202 <freq_target_right>
    1614:	90 91 03 02 	lds	r25, 0x0203	; 0x800203 <freq_target_right+0x1>
    1618:	80 93 b3 00 	sts	0x00B3, r24	; 0x8000b3 <__TEXT_REGION_LENGTH__+0x7000b3>
    161c:	19 cf       	rjmp	.-462    	; 0x1450 <.L7>

0000161e <.L27>:
    161e:	e3 eb       	ldi	r30, 0xB3	; 179
    1620:	f0 e0       	ldi	r31, 0x00	; 0
    1622:	80 81       	ld	r24, Z

00001624 <.Loc.177>:
    1624:	82 51       	subi	r24, 0x12	; 18
    1626:	80 83       	st	Z, r24

00001628 <.Loc.178>:
    1628:	13 cf       	rjmp	.-474    	; 0x1450 <.L7>

0000162a <stepper_speed_left>:
    162a:	28 2f       	mov	r18, r24
    162c:	39 2f       	mov	r19, r25

0000162e <.Loc.181>:
    162e:	80 91 9d 02 	lds	r24, 0x029D	; 0x80029d <previous_speed.1>
    1632:	90 91 9e 02 	lds	r25, 0x029E	; 0x80029e <previous_speed.1+0x1>

00001636 <.Loc.184>:
    1636:	18 16       	cp	r1, r24
    1638:	19 06       	cpc	r1, r25
    163a:	34 f4       	brge	.+12     	; 0x1648 <.L40>

0000163c <.L33>:
    163c:	33 23       	and	r19, r19
    163e:	f4 f4       	brge	.+60     	; 0x167c <.L36>

00001640 <.Loc.186>:
    1640:	83 e0       	ldi	r24, 0x03	; 3
    1642:	80 93 96 02 	sts	0x0296, r24	; 0x800296 <direction_change_left>
    1646:	06 c0       	rjmp	.+12     	; 0x1654 <.L37>

00001648 <.L40>:
    1648:	12 16       	cp	r1, r18
    164a:	13 06       	cpc	r1, r19
    164c:	ac f4       	brge	.+42     	; 0x1678 <.L34>

0000164e <.Loc.189>:
    164e:	81 e0       	ldi	r24, 0x01	; 1
    1650:	80 93 96 02 	sts	0x0296, r24	; 0x800296 <direction_change_left>

00001654 <.L37>:
    1654:	30 93 9e 02 	sts	0x029E, r19	; 0x80029e <previous_speed.1+0x1>
    1658:	20 93 9d 02 	sts	0x029D, r18	; 0x80029d <previous_speed.1>

0000165c <.Loc.192>:
    165c:	b9 01       	movw	r22, r18
    165e:	33 23       	and	r19, r19
    1660:	c4 f0       	brlt	.+48     	; 0x1692 <.L41>

00001662 <.L39>:
    1662:	8d ef       	ldi	r24, 0xFD	; 253
    1664:	90 e0       	ldi	r25, 0x00	; 0
    1666:	0e 94 8d 0e 	call	0x1d1a	; 0x1d1a <__divmodhi4>

0000166a <.Loc.196>:
    166a:	6e 5f       	subi	r22, 0xFE	; 254
    166c:	7f 4f       	sbci	r23, 0xFF	; 255

0000166e <.Loc.197>:
    166e:	70 93 05 02 	sts	0x0205, r23	; 0x800205 <freq_target_left+0x1>
    1672:	60 93 04 02 	sts	0x0204, r22	; 0x800204 <freq_target_left>

00001676 <.Loc.198>:
    1676:	08 95       	ret

00001678 <.L34>:
    1678:	89 2b       	or	r24, r25
    167a:	01 f3       	breq	.-64     	; 0x163c <.L33>

0000167c <.L36>:
    167c:	21 15       	cp	r18, r1
    167e:	31 05       	cpc	r19, r1
    1680:	49 f7       	brne	.-46     	; 0x1654 <.L37>

00001682 <.Loc.203>:
    1682:	82 e0       	ldi	r24, 0x02	; 2
    1684:	80 93 96 02 	sts	0x0296, r24	; 0x800296 <direction_change_left>

00001688 <.Loc.205>:
    1688:	10 92 9e 02 	sts	0x029E, r1	; 0x80029e <previous_speed.1+0x1>
    168c:	10 92 9d 02 	sts	0x029D, r1	; 0x80029d <previous_speed.1>

00001690 <.Loc.207>:
    1690:	08 95       	ret

00001692 <.L41>:
    1692:	66 27       	eor	r22, r22
    1694:	77 27       	eor	r23, r23
    1696:	62 1b       	sub	r22, r18
    1698:	73 0b       	sbc	r23, r19
    169a:	e3 cf       	rjmp	.-58     	; 0x1662 <.L39>

0000169c <stepper_speed_right>:
    169c:	28 2f       	mov	r18, r24
    169e:	39 2f       	mov	r19, r25

000016a0 <.Loc.211>:
    16a0:	80 91 9b 02 	lds	r24, 0x029B	; 0x80029b <previous_speed.0>
    16a4:	90 91 9c 02 	lds	r25, 0x029C	; 0x80029c <previous_speed.0+0x1>

000016a8 <.Loc.214>:
    16a8:	18 16       	cp	r1, r24
    16aa:	19 06       	cpc	r1, r25
    16ac:	34 f4       	brge	.+12     	; 0x16ba <.L50>

000016ae <.L43>:
    16ae:	33 23       	and	r19, r19
    16b0:	f4 f4       	brge	.+60     	; 0x16ee <.L46>

000016b2 <.Loc.216>:
    16b2:	83 e0       	ldi	r24, 0x03	; 3
    16b4:	80 93 95 02 	sts	0x0295, r24	; 0x800295 <direction_change_right>
    16b8:	06 c0       	rjmp	.+12     	; 0x16c6 <.L47>

000016ba <.L50>:
    16ba:	12 16       	cp	r1, r18
    16bc:	13 06       	cpc	r1, r19
    16be:	ac f4       	brge	.+42     	; 0x16ea <.L44>

000016c0 <.Loc.219>:
    16c0:	81 e0       	ldi	r24, 0x01	; 1
    16c2:	80 93 95 02 	sts	0x0295, r24	; 0x800295 <direction_change_right>

000016c6 <.L47>:
    16c6:	30 93 9c 02 	sts	0x029C, r19	; 0x80029c <previous_speed.0+0x1>
    16ca:	20 93 9b 02 	sts	0x029B, r18	; 0x80029b <previous_speed.0>

000016ce <.Loc.222>:
    16ce:	b9 01       	movw	r22, r18
    16d0:	33 23       	and	r19, r19
    16d2:	c4 f0       	brlt	.+48     	; 0x1704 <.L51>

000016d4 <.L49>:
    16d4:	8d ef       	ldi	r24, 0xFD	; 253
    16d6:	90 e0       	ldi	r25, 0x00	; 0
    16d8:	0e 94 8d 0e 	call	0x1d1a	; 0x1d1a <__divmodhi4>

000016dc <.Loc.225>:
    16dc:	6e 5f       	subi	r22, 0xFE	; 254
    16de:	7f 4f       	sbci	r23, 0xFF	; 255

000016e0 <.Loc.226>:
    16e0:	70 93 03 02 	sts	0x0203, r23	; 0x800203 <freq_target_right+0x1>
    16e4:	60 93 02 02 	sts	0x0202, r22	; 0x800202 <freq_target_right>

000016e8 <.Loc.227>:
    16e8:	08 95       	ret

000016ea <.L44>:
    16ea:	89 2b       	or	r24, r25
    16ec:	01 f3       	breq	.-64     	; 0x16ae <.L43>

000016ee <.L46>:
    16ee:	21 15       	cp	r18, r1
    16f0:	31 05       	cpc	r19, r1
    16f2:	49 f7       	brne	.-46     	; 0x16c6 <.L47>

000016f4 <.Loc.232>:
    16f4:	82 e0       	ldi	r24, 0x02	; 2
    16f6:	80 93 95 02 	sts	0x0295, r24	; 0x800295 <direction_change_right>

000016fa <.Loc.234>:
    16fa:	10 92 9c 02 	sts	0x029C, r1	; 0x80029c <previous_speed.0+0x1>
    16fe:	10 92 9b 02 	sts	0x029B, r1	; 0x80029b <previous_speed.0>

00001702 <.Loc.236>:
    1702:	08 95       	ret

00001704 <.L51>:
    1704:	66 27       	eor	r22, r22
    1706:	77 27       	eor	r23, r23
    1708:	62 1b       	sub	r22, r18
    170a:	73 0b       	sbc	r23, r19
    170c:	e3 cf       	rjmp	.-58     	; 0x16d4 <.L49>

0000170e <stepper_control>:
    170e:	0f 93       	push	r16
    1710:	1f 93       	push	r17
    1712:	cf 93       	push	r28
    1714:	df 93       	push	r29
    1716:	c8 2f       	mov	r28, r24
    1718:	d9 2f       	mov	r29, r25
    171a:	26 2f       	mov	r18, r22
    171c:	37 2f       	mov	r19, r23

0000171e <.Loc.240>:
    171e:	89 01       	movw	r16, r18
    1720:	25 36       	cpi	r18, 0x65	; 101
    1722:	31 05       	cpc	r19, r1
    1724:	14 f0       	brlt	.+4      	; 0x172a <.L53>
    1726:	04 e6       	ldi	r16, 0x64	; 100
    1728:	10 e0       	ldi	r17, 0x00	; 0

0000172a <.L53>:
    172a:	0c 39       	cpi	r16, 0x9C	; 156
    172c:	8f ef       	ldi	r24, 0xFF	; 255
    172e:	18 07       	cpc	r17, r24
    1730:	14 f4       	brge	.+4      	; 0x1736 <.L54>
    1732:	0c e9       	ldi	r16, 0x9C	; 156
    1734:	1f ef       	ldi	r17, 0xFF	; 255

00001736 <.L54>:
    1736:	20 97       	sbiw	r28, 0x00	; 0
    1738:	09 f4       	brne	.+2      	; 0x173c <.Loc.245>

0000173a <L0^A>:
    173a:	46 c0       	rjmp	.+140    	; 0x17c8 <.L55>

0000173c <.Loc.245>:
    173c:	c5 36       	cpi	r28, 0x65	; 101
    173e:	d1 05       	cpc	r29, r1
    1740:	14 f0       	brlt	.+4      	; 0x1746 <.L56>
    1742:	c4 e6       	ldi	r28, 0x64	; 100
    1744:	d0 e0       	ldi	r29, 0x00	; 0

00001746 <.L56>:
    1746:	cc 39       	cpi	r28, 0x9C	; 156
    1748:	8f ef       	ldi	r24, 0xFF	; 255
    174a:	d8 07       	cpc	r29, r24
    174c:	14 f4       	brge	.+4      	; 0x1752 <.L57>
    174e:	cc e9       	ldi	r28, 0x9C	; 156
    1750:	df ef       	ldi	r29, 0xFF	; 255

00001752 <.L57>:
    1752:	21 15       	cp	r18, r1
    1754:	31 05       	cpc	r19, r1
    1756:	a9 f0       	breq	.+42     	; 0x1782 <.L62>

00001758 <.Loc.249>:
    1758:	dc f0       	brlt	.+54     	; 0x1790 <.L63>

0000175a <.Loc.251>:
    175a:	ce 01       	movw	r24, r28
    175c:	0e 94 15 0b 	call	0x162a	; 0x162a <stepper_speed_left>

00001760 <.LVL11>:
    1760:	0c 9f       	mul	r16, r28
    1762:	c0 01       	movw	r24, r0
    1764:	0d 9f       	mul	r16, r29
    1766:	90 0d       	add	r25, r0
    1768:	1c 9f       	mul	r17, r28
    176a:	90 0d       	add	r25, r0
    176c:	11 24       	eor	r1, r1

0000176e <.Loc.255>:
    176e:	6c e9       	ldi	r22, 0x9C	; 156
    1770:	7f ef       	ldi	r23, 0xFF	; 255
    1772:	0e 94 8d 0e 	call	0x1d1a	; 0x1d1a <__divmodhi4>

00001776 <.Loc.256>:
    1776:	cb 01       	movw	r24, r22
    1778:	8c 0f       	add	r24, r28
    177a:	9d 1f       	adc	r25, r29
    177c:	0e 94 4e 0b 	call	0x169c	; 0x169c <stepper_speed_right>

00001780 <.LVL12>:
    1780:	2c c0       	rjmp	.+88     	; 0x17da <.L59>

00001782 <.L62>:
    1782:	ce 01       	movw	r24, r28
    1784:	0e 94 15 0b 	call	0x162a	; 0x162a <stepper_speed_left>

00001788 <.LVL13>:
    1788:	ce 01       	movw	r24, r28
    178a:	0e 94 4e 0b 	call	0x169c	; 0x169c <stepper_speed_right>

0000178e <.LVL14>:
    178e:	25 c0       	rjmp	.+74     	; 0x17da <.L59>

00001790 <.L63>:
    1790:	98 01       	movw	r18, r16
    1792:	11 23       	and	r17, r17
    1794:	a4 f0       	brlt	.+40     	; 0x17be <.L64>

00001796 <.L61>:
    1796:	2c 9f       	mul	r18, r28
    1798:	c0 01       	movw	r24, r0
    179a:	2d 9f       	mul	r18, r29
    179c:	90 0d       	add	r25, r0
    179e:	3c 9f       	mul	r19, r28
    17a0:	90 0d       	add	r25, r0
    17a2:	11 24       	eor	r1, r1

000017a4 <.Loc.262>:
    17a4:	6c e9       	ldi	r22, 0x9C	; 156
    17a6:	7f ef       	ldi	r23, 0xFF	; 255
    17a8:	0e 94 8d 0e 	call	0x1d1a	; 0x1d1a <__divmodhi4>

000017ac <.Loc.263>:
    17ac:	cb 01       	movw	r24, r22
    17ae:	8c 0f       	add	r24, r28
    17b0:	9d 1f       	adc	r25, r29
    17b2:	0e 94 15 0b 	call	0x162a	; 0x162a <stepper_speed_left>

000017b6 <.LVL15>:
    17b6:	ce 01       	movw	r24, r28
    17b8:	0e 94 4e 0b 	call	0x169c	; 0x169c <stepper_speed_right>

000017bc <.LVL16>:
    17bc:	0e c0       	rjmp	.+28     	; 0x17da <.L59>

000017be <.L64>:
    17be:	22 27       	eor	r18, r18
    17c0:	33 27       	eor	r19, r19
    17c2:	20 1b       	sub	r18, r16
    17c4:	31 0b       	sbc	r19, r17
    17c6:	e7 cf       	rjmp	.-50     	; 0x1796 <.L61>

000017c8 <.L55>:
    17c8:	c8 01       	movw	r24, r16
    17ca:	0e 94 15 0b 	call	0x162a	; 0x162a <stepper_speed_left>

000017ce <.LVL18>:
    17ce:	88 27       	eor	r24, r24
    17d0:	99 27       	eor	r25, r25
    17d2:	80 1b       	sub	r24, r16
    17d4:	91 0b       	sbc	r25, r17
    17d6:	0e 94 4e 0b 	call	0x169c	; 0x169c <stepper_speed_right>

000017da <.L59>:
    17da:	8f ef       	ldi	r24, 0xFF	; 255
    17dc:	9f ef       	ldi	r25, 0xFF	; 255
    17de:	90 93 9a 02 	sts	0x029A, r25	; 0x80029a <step_count_left+0x1>
    17e2:	80 93 99 02 	sts	0x0299, r24	; 0x800299 <step_count_left>

000017e6 <.Loc.271>:
    17e6:	90 93 98 02 	sts	0x0298, r25	; 0x800298 <step_count_right+0x1>
    17ea:	80 93 97 02 	sts	0x0297, r24	; 0x800297 <step_count_right>

000017ee <.Loc.273>:
    17ee:	df 91       	pop	r29
    17f0:	cf 91       	pop	r28
    17f2:	1f 91       	pop	r17
    17f4:	0f 91       	pop	r16

000017f6 <.Loc.274>:
    17f6:	08 95       	ret

000017f8 <stepper_init>:
    17f8:	9d 9a       	sbi	0x13, 5	; 19

000017fa <.Loc.278>:
    17fa:	e1 e0       	ldi	r30, 0x01	; 1
    17fc:	f1 e0       	ldi	r31, 0x01	; 1
    17fe:	80 81       	ld	r24, Z

00001800 <.Loc.279>:
    1800:	88 60       	ori	r24, 0x08	; 8
    1802:	80 83       	st	Z, r24

00001804 <.Loc.280>:
    1804:	6b 9a       	sbi	0x0d, 3	; 13

00001806 <.Loc.282>:
    1806:	80 81       	ld	r24, Z

00001808 <.Loc.283>:
    1808:	80 64       	ori	r24, 0x40	; 64
    180a:	80 83       	st	Z, r24

0000180c <.Loc.284>:
    180c:	25 9a       	sbi	0x04, 5	; 4

0000180e <.Loc.286>:
    180e:	24 9a       	sbi	0x04, 4	; 4

00001810 <.Loc.288>:
    1810:	e2 e0       	ldi	r30, 0x02	; 2
    1812:	f1 e0       	ldi	r31, 0x01	; 1
    1814:	80 81       	ld	r24, Z

00001816 <.Loc.289>:
    1816:	88 60       	ori	r24, 0x08	; 8
    1818:	80 83       	st	Z, r24

0000181a <.Loc.290>:
    181a:	2d 9a       	sbi	0x05, 5	; 5

0000181c <.Loc.292>:
    181c:	73 9a       	sbi	0x0e, 3	; 14

0000181e <.Loc.294>:
    181e:	2c 9a       	sbi	0x05, 4	; 5

00001820 <.Loc.296>:
    1820:	8f ef       	ldi	r24, 0xFF	; 255
    1822:	80 93 b3 00 	sts	0x00B3, r24	; 0x8000b3 <__TEXT_REGION_LENGTH__+0x7000b3>

00001826 <.Loc.298>:
    1826:	87 bd       	out	0x27, r24	; 39

00001828 <.Loc.300>:
    1828:	81 e0       	ldi	r24, 0x01	; 1
    182a:	88 bd       	out	0x28, r24	; 40

0000182c <.Loc.302>:
    182c:	80 93 b4 00 	sts	0x00B4, r24	; 0x8000b4 <__TEXT_REGION_LENGTH__+0x7000b4>

00001830 <.Loc.304>:
    1830:	83 e2       	ldi	r24, 0x23	; 35
    1832:	84 bd       	out	0x24, r24	; 36

00001834 <.Loc.306>:
    1834:	9c e0       	ldi	r25, 0x0C	; 12
    1836:	95 bd       	out	0x25, r25	; 37

00001838 <.Loc.308>:
    1838:	80 93 b0 00 	sts	0x00B0, r24	; 0x8000b0 <__TEXT_REGION_LENGTH__+0x7000b0>

0000183c <.Loc.310>:
    183c:	8e e0       	ldi	r24, 0x0E	; 14
    183e:	80 93 b1 00 	sts	0x00B1, r24	; 0x8000b1 <__TEXT_REGION_LENGTH__+0x7000b1>

00001842 <.Loc.312>:
    1842:	60 e0       	ldi	r22, 0x00	; 0
    1844:	70 e0       	ldi	r23, 0x00	; 0
    1846:	80 e0       	ldi	r24, 0x00	; 0
    1848:	90 e0       	ldi	r25, 0x00	; 0
    184a:	0e 94 87 0b 	call	0x170e	; 0x170e <stepper_control>

0000184e <.LVL21>:
    184e:	08 95       	ret

00001850 <stepper_step_control>:
    1850:	cf 93       	push	r28
    1852:	df 93       	push	r29
    1854:	c4 2f       	mov	r28, r20
    1856:	d5 2f       	mov	r29, r21

00001858 <.Loc.316>:
    1858:	21 e0       	ldi	r18, 0x01	; 1
    185a:	20 93 6e 00 	sts	0x006E, r18	; 0x80006e <__TEXT_REGION_LENGTH__+0x70006e>

0000185e <.Loc.318>:
    185e:	20 93 70 00 	sts	0x0070, r18	; 0x800070 <__TEXT_REGION_LENGTH__+0x700070>

00001862 <.Loc.320>:
    1862:	0e 94 87 0b 	call	0x170e	; 0x170e <stepper_control>

00001866 <.LVL23>:
    1866:	d0 93 9a 02 	sts	0x029A, r29	; 0x80029a <step_count_left+0x1>
    186a:	c0 93 99 02 	sts	0x0299, r28	; 0x800299 <step_count_left>

0000186e <.Loc.323>:
    186e:	d0 93 98 02 	sts	0x0298, r29	; 0x800298 <step_count_right+0x1>
    1872:	c0 93 97 02 	sts	0x0297, r28	; 0x800297 <step_count_right>

00001876 <.Loc.325>:
    1876:	df 91       	pop	r29
    1878:	cf 91       	pop	r28
    187a:	08 95       	ret

0000187c <display_start>:
    187c:	ea e0       	ldi	r30, 0x0A	; 10
    187e:	f1 e0       	ldi	r31, 0x01	; 1
    1880:	80 81       	ld	r24, Z

00001882 <.Loc.2>:
    1882:	80 68       	ori	r24, 0x80	; 128
    1884:	80 83       	st	Z, r24

00001886 <.Loc.3>:
    1886:	eb e0       	ldi	r30, 0x0B	; 11
    1888:	f1 e0       	ldi	r31, 0x01	; 1
    188a:	80 81       	ld	r24, Z

0000188c <.Loc.4>:
    188c:	80 68       	ori	r24, 0x80	; 128
    188e:	80 83       	st	Z, r24

00001890 <.Loc.5>:
    1890:	80 81       	ld	r24, Z

00001892 <.Loc.6>:
    1892:	80 62       	ori	r24, 0x20	; 32
    1894:	80 83       	st	Z, r24

00001896 <.Loc.7>:
    1896:	80 81       	ld	r24, Z
    1898:	8f 77       	andi	r24, 0x7F	; 127
    189a:	80 83       	st	Z, r24

0000189c <.Loc.9>:
    189c:	08 95       	ret

0000189e <display_stop>:
    189e:	ea e0       	ldi	r30, 0x0A	; 10
    18a0:	f1 e0       	ldi	r31, 0x01	; 1
    18a2:	80 81       	ld	r24, Z

000018a4 <.Loc.12>:
    18a4:	80 68       	ori	r24, 0x80	; 128
    18a6:	80 83       	st	Z, r24

000018a8 <.Loc.13>:
    18a8:	eb e0       	ldi	r30, 0x0B	; 11
    18aa:	f1 e0       	ldi	r31, 0x01	; 1
    18ac:	80 81       	ld	r24, Z
    18ae:	8f 7d       	andi	r24, 0xDF	; 223
    18b0:	80 83       	st	Z, r24

000018b2 <.Loc.15>:
    18b2:	80 81       	ld	r24, Z

000018b4 <.Loc.16>:
    18b4:	80 62       	ori	r24, 0x20	; 32
    18b6:	80 83       	st	Z, r24

000018b8 <.Loc.17>:
    18b8:	80 81       	ld	r24, Z

000018ba <.Loc.18>:
    18ba:	80 68       	ori	r24, 0x80	; 128
    18bc:	80 83       	st	Z, r24

000018be <.Loc.19>:
    18be:	08 95       	ret

000018c0 <display_sendbyte>:
    18c0:	ea e0       	ldi	r30, 0x0A	; 10
    18c2:	f1 e0       	ldi	r31, 0x01	; 1
    18c4:	90 81       	ld	r25, Z

000018c6 <.Loc.22>:
    18c6:	90 68       	ori	r25, 0x80	; 128
    18c8:	90 83       	st	Z, r25

000018ca <.Loc.23>:
    18ca:	28 e0       	ldi	r18, 0x08	; 8
    18cc:	30 e0       	ldi	r19, 0x00	; 0

000018ce <.Loc.27>:
    18ce:	eb e0       	ldi	r30, 0x0B	; 11
    18d0:	f1 e0       	ldi	r31, 0x01	; 1
    18d2:	0c c0       	rjmp	.+24     	; 0x18ec <.L6>

000018d4 <.L4>:
    18d4:	90 81       	ld	r25, Z
    18d6:	9f 77       	andi	r25, 0x7F	; 127
    18d8:	90 83       	st	Z, r25

000018da <.L5>:
    18da:	90 81       	ld	r25, Z

000018dc <.Loc.31>:
    18dc:	90 62       	ori	r25, 0x20	; 32
    18de:	90 83       	st	Z, r25

000018e0 <.Loc.32>:
    18e0:	86 95       	lsr	r24

000018e2 <.Loc.34>:
    18e2:	21 50       	subi	r18, 0x01	; 1
    18e4:	31 09       	sbc	r19, r1

000018e6 <.Loc.36>:
    18e6:	21 15       	cp	r18, r1
    18e8:	31 05       	cpc	r19, r1
    18ea:	49 f0       	breq	.+18     	; 0x18fe <.L8>

000018ec <.L6>:
    18ec:	90 81       	ld	r25, Z
    18ee:	9f 7d       	andi	r25, 0xDF	; 223
    18f0:	90 83       	st	Z, r25

000018f2 <.Loc.39>:
    18f2:	80 ff       	sbrs	r24, 0
    18f4:	ef cf       	rjmp	.-34     	; 0x18d4 <.L4>

000018f6 <.Loc.41>:
    18f6:	90 81       	ld	r25, Z

000018f8 <.Loc.42>:
    18f8:	90 68       	ori	r25, 0x80	; 128
    18fa:	90 83       	st	Z, r25
    18fc:	ee cf       	rjmp	.-36     	; 0x18da <.L5>

000018fe <.L8>:
    18fe:	eb e0       	ldi	r30, 0x0B	; 11
    1900:	f1 e0       	ldi	r31, 0x01	; 1
    1902:	80 81       	ld	r24, Z

00001904 <.Loc.46>:
    1904:	8f 7d       	andi	r24, 0xDF	; 223
    1906:	80 83       	st	Z, r24

00001908 <.Loc.47>:
    1908:	80 81       	ld	r24, Z

0000190a <.Loc.48>:
    190a:	80 62       	ori	r24, 0x20	; 32
    190c:	80 83       	st	Z, r24

0000190e <.Loc.49>:
    190e:	08 95       	ret

00001910 <display_brightness>:
    1910:	cf 93       	push	r28
    1912:	c8 2f       	mov	r28, r24

00001914 <.Loc.52>:
    1914:	0e 94 3e 0c 	call	0x187c	; 0x187c <display_start>

00001918 <.LVL8>:
    1918:	8c 2f       	mov	r24, r28
    191a:	87 70       	andi	r24, 0x07	; 7
    191c:	88 68       	ori	r24, 0x88	; 136
    191e:	0e 94 60 0c 	call	0x18c0	; 0x18c0 <display_sendbyte>

00001922 <.LVL9>:
    1922:	0e 94 4f 0c 	call	0x189e	; 0x189e <display_stop>

00001926 <.LVL10>:
    1926:	cf 91       	pop	r28

00001928 <.Loc.56>:
    1928:	08 95       	ret

0000192a <display_number>:
    192a:	ef 92       	push	r14
    192c:	ff 92       	push	r15
    192e:	1f 93       	push	r17
    1930:	cf 93       	push	r28
    1932:	df 93       	push	r29
    1934:	d8 2f       	mov	r29, r24
    1936:	c9 2f       	mov	r28, r25

00001938 <.Loc.59>:
    1938:	0e 94 3e 0c 	call	0x187c	; 0x187c <display_start>

0000193c <.LVL13>:
    193c:	80 e4       	ldi	r24, 0x40	; 64
    193e:	0e 94 60 0c 	call	0x18c0	; 0x18c0 <display_sendbyte>

00001942 <.LVL14>:
    1942:	0e 94 4f 0c 	call	0x189e	; 0x189e <display_stop>

00001946 <.LVL15>:
    1946:	13 ec       	ldi	r17, 0xC3	; 195

00001948 <.Loc.66>:
    1948:	0f 2e       	mov	r0, r31
    194a:	fa e0       	ldi	r31, 0x0A	; 10
    194c:	ef 2e       	mov	r14, r31
    194e:	f1 2c       	mov	r15, r1
    1950:	f0 2d       	mov	r31, r0

00001952 <.L11>:
    1952:	0e 94 3e 0c 	call	0x187c	; 0x187c <display_start>

00001956 <.LVL17>:
    1956:	81 2f       	mov	r24, r17
    1958:	0e 94 60 0c 	call	0x18c0	; 0x18c0 <display_sendbyte>

0000195c <.LVL18>:
    195c:	8d 2f       	mov	r24, r29
    195e:	9c 2f       	mov	r25, r28
    1960:	b7 01       	movw	r22, r14
    1962:	0e 94 8d 0e 	call	0x1d1a	; 0x1d1a <__divmodhi4>
    1966:	d6 2f       	mov	r29, r22

00001968 <.Loc.71>:
    1968:	c7 2f       	mov	r28, r23

0000196a <.Loc.72>:
    196a:	fc 01       	movw	r30, r24
    196c:	e6 5e       	subi	r30, 0xE6	; 230
    196e:	fd 4f       	sbci	r31, 0xFD	; 253

00001970 <.Loc.73>:
    1970:	80 81       	ld	r24, Z
    1972:	0e 94 60 0c 	call	0x18c0	; 0x18c0 <display_sendbyte>

00001976 <.LVL20>:
    1976:	0e 94 4f 0c 	call	0x189e	; 0x189e <display_stop>

0000197a <.LVL21>:
    197a:	11 50       	subi	r17, 0x01	; 1
    197c:	1f 3b       	cpi	r17, 0xBF	; 191
    197e:	49 f7       	brne	.-46     	; 0x1952 <.L11>

00001980 <.Loc.78>:
    1980:	df 91       	pop	r29

00001982 <.Loc.79>:
    1982:	cf 91       	pop	r28
    1984:	1f 91       	pop	r17
    1986:	ff 90       	pop	r15
    1988:	ef 90       	pop	r14
    198a:	08 95       	ret

0000198c <display_metal_and_non_metal>:
    198c:	ef 92       	push	r14
    198e:	ff 92       	push	r15
    1990:	0f 93       	push	r16
    1992:	1f 93       	push	r17
    1994:	cf 93       	push	r28
    1996:	df 93       	push	r29
    1998:	00 d0       	rcall	.+0      	; 0x199a <L0^A>

0000199a <L0^A>:
    199a:	00 d0       	rcall	.+0      	; 0x199c <L0^A>

0000199c <L0^A>:
    199c:	0f 92       	push	r0
    199e:	0f 92       	push	r0
    19a0:	cd b7       	in	r28, 0x3d	; 61
    19a2:	de b7       	in	r29, 0x3e	; 62

000019a4 <.Loc.82>:
    19a4:	e8 2e       	mov	r14, r24
    19a6:	f9 2e       	mov	r15, r25
    19a8:	84 e6       	ldi	r24, 0x64	; 100
    19aa:	e8 16       	cp	r14, r24
    19ac:	f1 04       	cpc	r15, r1

000019ae <.Loc.84>:
    19ae:	2c f0       	brlt	.+10     	; 0x19ba <.L14>
    19b0:	0f 2e       	mov	r0, r31
    19b2:	f3 e6       	ldi	r31, 0x63	; 99
    19b4:	ef 2e       	mov	r14, r31
    19b6:	f1 2c       	mov	r15, r1
    19b8:	f0 2d       	mov	r31, r0

000019ba <.L14>:
    19ba:	ff 20       	and	r15, r15
    19bc:	0c f4       	brge	.+2      	; 0x19c0 <.L15>

000019be <L0^A>:
    19be:	47 c0       	rjmp	.+142    	; 0x1a4e <.L20>

000019c0 <.L15>:
    19c0:	06 2f       	mov	r16, r22
    19c2:	17 2f       	mov	r17, r23
    19c4:	04 36       	cpi	r16, 0x64	; 100
    19c6:	11 05       	cpc	r17, r1
    19c8:	14 f0       	brlt	.+4      	; 0x19ce <.L16>
    19ca:	03 e6       	ldi	r16, 0x63	; 99
    19cc:	10 e0       	ldi	r17, 0x00	; 0

000019ce <.L16>:
    19ce:	11 23       	and	r17, r17
    19d0:	0c f4       	brge	.+2      	; 0x19d4 <.L17>

000019d2 <L0^A>:
    19d2:	40 c0       	rjmp	.+128    	; 0x1a54 <.L21>

000019d4 <.L17>:
    19d4:	0e 94 3e 0c 	call	0x187c	; 0x187c <display_start>

000019d8 <.LVL27>:
    19d8:	80 e4       	ldi	r24, 0x40	; 64
    19da:	0e 94 60 0c 	call	0x18c0	; 0x18c0 <display_sendbyte>

000019de <.LVL28>:
    19de:	0e 94 4f 0c 	call	0x189e	; 0x189e <display_stop>

000019e2 <.LVL29>:
    19e2:	2a e0       	ldi	r18, 0x0A	; 10
    19e4:	30 e0       	ldi	r19, 0x00	; 0
    19e6:	c7 01       	movw	r24, r14
    19e8:	b9 01       	movw	r22, r18
    19ea:	0e 94 8d 0e 	call	0x1d1a	; 0x1d1a <__divmodhi4>

000019ee <.Loc.93>:
    19ee:	7a 83       	std	Y+2, r23	; 0x02
    19f0:	69 83       	std	Y+1, r22	; 0x01

000019f2 <.Loc.94>:
    19f2:	9c 83       	std	Y+4, r25	; 0x04
    19f4:	8b 83       	std	Y+3, r24	; 0x03

000019f6 <.Loc.96>:
    19f6:	c8 01       	movw	r24, r16
    19f8:	b9 01       	movw	r22, r18
    19fa:	0e 94 8d 0e 	call	0x1d1a	; 0x1d1a <__divmodhi4>

000019fe <.Loc.98>:
    19fe:	7e 83       	std	Y+6, r23	; 0x06
    1a00:	6d 83       	std	Y+5, r22	; 0x05

00001a02 <.Loc.100>:
    1a02:	98 87       	std	Y+8, r25	; 0x08
    1a04:	8f 83       	std	Y+7, r24	; 0x07

00001a06 <.Loc.101>:
    1a06:	de 01       	movw	r26, r28
    1a08:	11 96       	adiw	r26, 0x01	; 1
    1a0a:	7d 01       	movw	r14, r26

00001a0c <.Loc.104>:
    1a0c:	10 ec       	ldi	r17, 0xC0	; 192

00001a0e <.L18>:
    1a0e:	0e 94 3e 0c 	call	0x187c	; 0x187c <display_start>

00001a12 <.LVL33>:
    1a12:	81 2f       	mov	r24, r17
    1a14:	0e 94 60 0c 	call	0x18c0	; 0x18c0 <display_sendbyte>

00001a18 <.LVL34>:
    1a18:	d7 01       	movw	r26, r14
    1a1a:	ed 91       	ld	r30, X+
    1a1c:	fd 91       	ld	r31, X+
    1a1e:	7d 01       	movw	r14, r26

00001a20 <.Loc.110>:
    1a20:	e6 5e       	subi	r30, 0xE6	; 230
    1a22:	fd 4f       	sbci	r31, 0xFD	; 253

00001a24 <.Loc.111>:
    1a24:	80 81       	ld	r24, Z
    1a26:	0e 94 60 0c 	call	0x18c0	; 0x18c0 <display_sendbyte>

00001a2a <.LVL35>:
    1a2a:	0e 94 4f 0c 	call	0x189e	; 0x189e <display_stop>

00001a2e <.LVL36>:
    1a2e:	1f 5f       	subi	r17, 0xFF	; 255
    1a30:	14 3c       	cpi	r17, 0xC4	; 196
    1a32:	69 f7       	brne	.-38     	; 0x1a0e <.L18>

00001a34 <.Loc.115>:
    1a34:	28 96       	adiw	r28, 0x08	; 8
    1a36:	0f b6       	in	r0, 0x3f	; 63
    1a38:	f8 94       	cli
    1a3a:	de bf       	out	0x3e, r29	; 62
    1a3c:	0f be       	out	0x3f, r0	; 63
    1a3e:	cd bf       	out	0x3d, r28	; 61
    1a40:	df 91       	pop	r29
    1a42:	cf 91       	pop	r28
    1a44:	1f 91       	pop	r17
    1a46:	0f 91       	pop	r16

00001a48 <.Loc.116>:
    1a48:	ff 90       	pop	r15
    1a4a:	ef 90       	pop	r14
    1a4c:	08 95       	ret

00001a4e <.L20>:
    1a4e:	e1 2c       	mov	r14, r1
    1a50:	f1 2c       	mov	r15, r1
    1a52:	b6 cf       	rjmp	.-148    	; 0x19c0 <.L15>

00001a54 <.L21>:
    1a54:	00 e0       	ldi	r16, 0x00	; 0
    1a56:	10 e0       	ldi	r17, 0x00	; 0
    1a58:	bd cf       	rjmp	.-134    	; 0x19d4 <.L17>

00001a5a <display_letter>:
    1a5a:	1f 93       	push	r17
    1a5c:	cf 93       	push	r28
    1a5e:	df 93       	push	r29
    1a60:	c8 2f       	mov	r28, r24
    1a62:	d9 2f       	mov	r29, r25
    1a64:	16 2f       	mov	r17, r22

00001a66 <.Loc.121>:
    1a66:	0e 94 3e 0c 	call	0x187c	; 0x187c <display_start>

00001a6a <.LVL41>:
    1a6a:	80 ec       	ldi	r24, 0xC0	; 192
    1a6c:	81 0f       	add	r24, r17
    1a6e:	0e 94 60 0c 	call	0x18c0	; 0x18c0 <display_sendbyte>

00001a72 <.LVL42>:
    1a72:	ca 5f       	subi	r28, 0xFA	; 250
    1a74:	dd 4f       	sbci	r29, 0xFD	; 253

00001a76 <.Loc.125>:
    1a76:	88 81       	ld	r24, Y
    1a78:	0e 94 60 0c 	call	0x18c0	; 0x18c0 <display_sendbyte>

00001a7c <.LVL43>:
    1a7c:	0e 94 4f 0c 	call	0x189e	; 0x189e <display_stop>

00001a80 <.LVL44>:
    1a80:	df 91       	pop	r29
    1a82:	cf 91       	pop	r28
    1a84:	1f 91       	pop	r17

00001a86 <.Loc.128>:
    1a86:	08 95       	ret

00001a88 <display_init>:
    1a88:	ea e0       	ldi	r30, 0x0A	; 10
    1a8a:	f1 e0       	ldi	r31, 0x01	; 1
    1a8c:	80 81       	ld	r24, Z

00001a8e <.Loc.131>:
    1a8e:	80 68       	ori	r24, 0x80	; 128
    1a90:	80 83       	st	Z, r24

00001a92 <.Loc.132>:
    1a92:	80 81       	ld	r24, Z

00001a94 <.Loc.133>:
    1a94:	80 62       	ori	r24, 0x20	; 32
    1a96:	80 83       	st	Z, r24

00001a98 <.Loc.134>:
    1a98:	eb e0       	ldi	r30, 0x0B	; 11
    1a9a:	f1 e0       	ldi	r31, 0x01	; 1
    1a9c:	80 81       	ld	r24, Z

00001a9e <.Loc.135>:
    1a9e:	80 68       	ori	r24, 0x80	; 128
    1aa0:	80 83       	st	Z, r24

00001aa2 <.Loc.136>:
    1aa2:	80 81       	ld	r24, Z

00001aa4 <.Loc.137>:
    1aa4:	80 62       	ori	r24, 0x20	; 32
    1aa6:	80 83       	st	Z, r24

00001aa8 <.Loc.138>:
    1aa8:	82 e0       	ldi	r24, 0x02	; 2
    1aaa:	0e 94 88 0c 	call	0x1910	; 0x1910 <display_brightness>

00001aae <.LVL46>:
    1aae:	08 95       	ret

00001ab0 <display_cfg>:
    1ab0:	60 e0       	ldi	r22, 0x00	; 0
    1ab2:	83 e1       	ldi	r24, 0x13	; 19
    1ab4:	90 e0       	ldi	r25, 0x00	; 0
    1ab6:	0e 94 2d 0d 	call	0x1a5a	; 0x1a5a <display_letter>

00001aba <.LVL47>:
    1aba:	61 e0       	ldi	r22, 0x01	; 1
    1abc:	83 e0       	ldi	r24, 0x03	; 3
    1abe:	90 e0       	ldi	r25, 0x00	; 0
    1ac0:	0e 94 2d 0d 	call	0x1a5a	; 0x1a5a <display_letter>

00001ac4 <.LVL48>:
    1ac4:	62 e0       	ldi	r22, 0x02	; 2
    1ac6:	86 e0       	ldi	r24, 0x06	; 6
    1ac8:	90 e0       	ldi	r25, 0x00	; 0
    1aca:	0e 94 2d 0d 	call	0x1a5a	; 0x1a5a <display_letter>

00001ace <.LVL49>:
    1ace:	63 e0       	ldi	r22, 0x03	; 3
    1ad0:	87 e0       	ldi	r24, 0x07	; 7
    1ad2:	90 e0       	ldi	r25, 0x00	; 0
    1ad4:	0e 94 2d 0d 	call	0x1a5a	; 0x1a5a <display_letter>

00001ad8 <.LVL50>:
    1ad8:	08 95       	ret

00001ada <display_heavy>:
    1ada:	84 e0       	ldi	r24, 0x04	; 4
    1adc:	90 e0       	ldi	r25, 0x00	; 0
    1ade:	0e 94 95 0c 	call	0x192a	; 0x192a <display_number>

00001ae2 <.LVL51>:
    1ae2:	61 e0       	ldi	r22, 0x01	; 1
    1ae4:	81 e0       	ldi	r24, 0x01	; 1
    1ae6:	90 e0       	ldi	r25, 0x00	; 0
    1ae8:	0e 94 2d 0d 	call	0x1a5a	; 0x1a5a <display_letter>

00001aec <.LVL52>:
    1aec:	62 e0       	ldi	r22, 0x02	; 2
    1aee:	85 e0       	ldi	r24, 0x05	; 5
    1af0:	90 e0       	ldi	r25, 0x00	; 0
    1af2:	0e 94 2d 0d 	call	0x1a5a	; 0x1a5a <display_letter>

00001af6 <.LVL53>:
    1af6:	63 e0       	ldi	r22, 0x03	; 3
    1af8:	88 e0       	ldi	r24, 0x08	; 8
    1afa:	90 e0       	ldi	r25, 0x00	; 0
    1afc:	0e 94 2d 0d 	call	0x1a5a	; 0x1a5a <display_letter>

00001b00 <.LVL54>:
    1b00:	08 95       	ret

00001b02 <display_light>:
    1b02:	60 e0       	ldi	r22, 0x00	; 0
    1b04:	81 e1       	ldi	r24, 0x11	; 17
    1b06:	90 e0       	ldi	r25, 0x00	; 0
    1b08:	0e 94 2d 0d 	call	0x1a5a	; 0x1a5a <display_letter>

00001b0c <.LVL55>:
    1b0c:	61 e0       	ldi	r22, 0x01	; 1
    1b0e:	88 e0       	ldi	r24, 0x08	; 8
    1b10:	90 e0       	ldi	r25, 0x00	; 0
    1b12:	0e 94 2d 0d 	call	0x1a5a	; 0x1a5a <display_letter>

00001b16 <.LVL56>:
    1b16:	62 e0       	ldi	r22, 0x02	; 2
    1b18:	87 e0       	ldi	r24, 0x07	; 7
    1b1a:	90 e0       	ldi	r25, 0x00	; 0
    1b1c:	0e 94 2d 0d 	call	0x1a5a	; 0x1a5a <display_letter>

00001b20 <.LVL57>:
    1b20:	63 e0       	ldi	r22, 0x03	; 3
    1b22:	8b e0       	ldi	r24, 0x0B	; 11
    1b24:	90 e0       	ldi	r25, 0x00	; 0
    1b26:	0e 94 2d 0d 	call	0x1a5a	; 0x1a5a <display_letter>

00001b2a <.LVL58>:
    1b2a:	08 95       	ret

00001b2c <display_fol>:
    1b2c:	60 e0       	ldi	r22, 0x00	; 0
    1b2e:	83 e1       	ldi	r24, 0x13	; 19
    1b30:	90 e0       	ldi	r25, 0x00	; 0
    1b32:	0e 94 2d 0d 	call	0x1a5a	; 0x1a5a <display_letter>

00001b36 <.LVL59>:
    1b36:	61 e0       	ldi	r22, 0x01	; 1
    1b38:	86 e0       	ldi	r24, 0x06	; 6
    1b3a:	90 e0       	ldi	r25, 0x00	; 0
    1b3c:	0e 94 2d 0d 	call	0x1a5a	; 0x1a5a <display_letter>

00001b40 <.LVL60>:
    1b40:	62 e0       	ldi	r22, 0x02	; 2
    1b42:	8d e0       	ldi	r24, 0x0D	; 13
    1b44:	90 e0       	ldi	r25, 0x00	; 0
    1b46:	0e 94 2d 0d 	call	0x1a5a	; 0x1a5a <display_letter>

00001b4a <.LVL61>:
    1b4a:	63 e0       	ldi	r22, 0x03	; 3
    1b4c:	8b e0       	ldi	r24, 0x0B	; 11
    1b4e:	90 e0       	ldi	r25, 0x00	; 0
    1b50:	0e 94 2d 0d 	call	0x1a5a	; 0x1a5a <display_letter>

00001b54 <.LVL62>:
    1b54:	08 95       	ret

00001b56 <display_cnt>:
    1b56:	60 e0       	ldi	r22, 0x00	; 0
    1b58:	83 e1       	ldi	r24, 0x13	; 19
    1b5a:	90 e0       	ldi	r25, 0x00	; 0
    1b5c:	0e 94 2d 0d 	call	0x1a5a	; 0x1a5a <display_letter>

00001b60 <.LVL63>:
    1b60:	61 e0       	ldi	r22, 0x01	; 1
    1b62:	83 e0       	ldi	r24, 0x03	; 3
    1b64:	90 e0       	ldi	r25, 0x00	; 0
    1b66:	0e 94 2d 0d 	call	0x1a5a	; 0x1a5a <display_letter>

00001b6a <.LVL64>:
    1b6a:	62 e0       	ldi	r22, 0x02	; 2
    1b6c:	8c e0       	ldi	r24, 0x0C	; 12
    1b6e:	90 e0       	ldi	r25, 0x00	; 0
    1b70:	0e 94 2d 0d 	call	0x1a5a	; 0x1a5a <display_letter>

00001b74 <.LVL65>:
    1b74:	63 e0       	ldi	r22, 0x03	; 3
    1b76:	81 e1       	ldi	r24, 0x11	; 17
    1b78:	90 e0       	ldi	r25, 0x00	; 0
    1b7a:	0e 94 2d 0d 	call	0x1a5a	; 0x1a5a <display_letter>

00001b7e <.LVL66>:
    1b7e:	08 95       	ret

00001b80 <display_turn>:
    1b80:	60 e0       	ldi	r22, 0x00	; 0
    1b82:	81 e1       	ldi	r24, 0x11	; 17
    1b84:	90 e0       	ldi	r25, 0x00	; 0
    1b86:	0e 94 2d 0d 	call	0x1a5a	; 0x1a5a <display_letter>

00001b8a <.LVL67>:
    1b8a:	61 e0       	ldi	r22, 0x01	; 1
    1b8c:	82 e1       	ldi	r24, 0x12	; 18
    1b8e:	90 e0       	ldi	r25, 0x00	; 0
    1b90:	0e 94 2d 0d 	call	0x1a5a	; 0x1a5a <display_letter>

00001b94 <.LVL68>:
    1b94:	62 e0       	ldi	r22, 0x02	; 2
    1b96:	8f e0       	ldi	r24, 0x0F	; 15
    1b98:	90 e0       	ldi	r25, 0x00	; 0
    1b9a:	0e 94 2d 0d 	call	0x1a5a	; 0x1a5a <display_letter>

00001b9e <.LVL69>:
    1b9e:	63 e0       	ldi	r22, 0x03	; 3
    1ba0:	8c e0       	ldi	r24, 0x0C	; 12
    1ba2:	90 e0       	ldi	r25, 0x00	; 0
    1ba4:	0e 94 2d 0d 	call	0x1a5a	; 0x1a5a <display_letter>

00001ba8 <.LVL70>:
    1ba8:	08 95       	ret

00001baa <display_dist>:
    1baa:	60 e0       	ldi	r22, 0x00	; 0
    1bac:	84 e0       	ldi	r24, 0x04	; 4
    1bae:	90 e0       	ldi	r25, 0x00	; 0
    1bb0:	0e 94 2d 0d 	call	0x1a5a	; 0x1a5a <display_letter>

00001bb4 <.LVL71>:
    1bb4:	61 e0       	ldi	r22, 0x01	; 1
    1bb6:	89 e0       	ldi	r24, 0x09	; 9
    1bb8:	90 e0       	ldi	r25, 0x00	; 0
    1bba:	0e 94 2d 0d 	call	0x1a5a	; 0x1a5a <display_letter>

00001bbe <.LVL72>:
    1bbe:	62 e0       	ldi	r22, 0x02	; 2
    1bc0:	80 e1       	ldi	r24, 0x10	; 16
    1bc2:	90 e0       	ldi	r25, 0x00	; 0
    1bc4:	0e 94 2d 0d 	call	0x1a5a	; 0x1a5a <display_letter>

00001bc8 <.LVL73>:
    1bc8:	63 e0       	ldi	r22, 0x03	; 3
    1bca:	81 e1       	ldi	r24, 0x11	; 17
    1bcc:	90 e0       	ldi	r25, 0x00	; 0
    1bce:	0e 94 2d 0d 	call	0x1a5a	; 0x1a5a <display_letter>

00001bd2 <.LVL74>:
    1bd2:	08 95       	ret

00001bd4 <display_pac>:
    1bd4:	60 e0       	ldi	r22, 0x00	; 0
    1bd6:	83 e1       	ldi	r24, 0x13	; 19
    1bd8:	90 e0       	ldi	r25, 0x00	; 0
    1bda:	0e 94 2d 0d 	call	0x1a5a	; 0x1a5a <display_letter>

00001bde <.LVL75>:
    1bde:	61 e0       	ldi	r22, 0x01	; 1
    1be0:	8e e0       	ldi	r24, 0x0E	; 14
    1be2:	90 e0       	ldi	r25, 0x00	; 0
    1be4:	0e 94 2d 0d 	call	0x1a5a	; 0x1a5a <display_letter>

00001be8 <.LVL76>:
    1be8:	62 e0       	ldi	r22, 0x02	; 2
    1bea:	81 e0       	ldi	r24, 0x01	; 1
    1bec:	90 e0       	ldi	r25, 0x00	; 0
    1bee:	0e 94 2d 0d 	call	0x1a5a	; 0x1a5a <display_letter>

00001bf2 <.LVL77>:
    1bf2:	63 e0       	ldi	r22, 0x03	; 3
    1bf4:	83 e0       	ldi	r24, 0x03	; 3
    1bf6:	90 e0       	ldi	r25, 0x00	; 0
    1bf8:	0e 94 2d 0d 	call	0x1a5a	; 0x1a5a <display_letter>

00001bfc <.LVL78>:
    1bfc:	08 95       	ret

00001bfe <display_mode>:
    1bfe:	88 23       	and	r24, r24
    1c00:	19 f0       	breq	.+6      	; 0x1c08 <.L33>

00001c02 <.Loc.191>:
    1c02:	0e 94 96 0d 	call	0x1b2c	; 0x1b2c <display_fol>

00001c06 <.LVL80>:
    1c06:	08 95       	ret

00001c08 <.L33>:
    1c08:	0e 94 ea 0d 	call	0x1bd4	; 0x1bd4 <display_pac>

00001c0c <.LVL82>:
    1c0c:	08 95       	ret

00001c0e <display_left>:
    1c0e:	60 e0       	ldi	r22, 0x00	; 0
    1c10:	8b e0       	ldi	r24, 0x0B	; 11
    1c12:	90 e0       	ldi	r25, 0x00	; 0
    1c14:	0e 94 2d 0d 	call	0x1a5a	; 0x1a5a <display_letter>

00001c18 <.LVL83>:
    1c18:	61 e0       	ldi	r22, 0x01	; 1
    1c1a:	85 e0       	ldi	r24, 0x05	; 5
    1c1c:	90 e0       	ldi	r25, 0x00	; 0
    1c1e:	0e 94 2d 0d 	call	0x1a5a	; 0x1a5a <display_letter>

00001c22 <.LVL84>:
    1c22:	62 e0       	ldi	r22, 0x02	; 2
    1c24:	86 e0       	ldi	r24, 0x06	; 6
    1c26:	90 e0       	ldi	r25, 0x00	; 0
    1c28:	0e 94 2d 0d 	call	0x1a5a	; 0x1a5a <display_letter>

00001c2c <.LVL85>:
    1c2c:	63 e0       	ldi	r22, 0x03	; 3
    1c2e:	81 e1       	ldi	r24, 0x11	; 17
    1c30:	90 e0       	ldi	r25, 0x00	; 0
    1c32:	0e 94 2d 0d 	call	0x1a5a	; 0x1a5a <display_letter>

00001c36 <.LVL86>:
    1c36:	08 95       	ret

00001c38 <display_rght>:
    1c38:	60 e0       	ldi	r22, 0x00	; 0
    1c3a:	8f e0       	ldi	r24, 0x0F	; 15
    1c3c:	90 e0       	ldi	r25, 0x00	; 0
    1c3e:	0e 94 2d 0d 	call	0x1a5a	; 0x1a5a <display_letter>

00001c42 <.LVL87>:
    1c42:	61 e0       	ldi	r22, 0x01	; 1
    1c44:	87 e0       	ldi	r24, 0x07	; 7
    1c46:	90 e0       	ldi	r25, 0x00	; 0
    1c48:	0e 94 2d 0d 	call	0x1a5a	; 0x1a5a <display_letter>

00001c4c <.LVL88>:
    1c4c:	62 e0       	ldi	r22, 0x02	; 2
    1c4e:	88 e0       	ldi	r24, 0x08	; 8
    1c50:	90 e0       	ldi	r25, 0x00	; 0
    1c52:	0e 94 2d 0d 	call	0x1a5a	; 0x1a5a <display_letter>

00001c56 <.LVL89>:
    1c56:	63 e0       	ldi	r22, 0x03	; 3
    1c58:	81 e1       	ldi	r24, 0x11	; 17
    1c5a:	90 e0       	ldi	r25, 0x00	; 0
    1c5c:	0e 94 2d 0d 	call	0x1a5a	; 0x1a5a <display_letter>

00001c60 <.LVL90>:
    1c60:	08 95       	ret

00001c62 <display_direction>:
    1c62:	88 23       	and	r24, r24
    1c64:	19 f0       	breq	.+6      	; 0x1c6c <.L38>

00001c66 <.Loc.210>:
    1c66:	0e 94 1c 0e 	call	0x1c38	; 0x1c38 <display_rght>

00001c6a <.LVL92>:
    1c6a:	08 95       	ret

00001c6c <.L38>:
    1c6c:	0e 94 07 0e 	call	0x1c0e	; 0x1c0e <display_left>

00001c70 <.LVL94>:
    1c70:	08 95       	ret

00001c72 <display_go>:
    1c72:	60 e0       	ldi	r22, 0x00	; 0
    1c74:	83 e1       	ldi	r24, 0x13	; 19
    1c76:	90 e0       	ldi	r25, 0x00	; 0
    1c78:	0e 94 2d 0d 	call	0x1a5a	; 0x1a5a <display_letter>

00001c7c <.LVL95>:
    1c7c:	61 e0       	ldi	r22, 0x01	; 1
    1c7e:	83 e1       	ldi	r24, 0x13	; 19
    1c80:	90 e0       	ldi	r25, 0x00	; 0
    1c82:	0e 94 2d 0d 	call	0x1a5a	; 0x1a5a <display_letter>

00001c86 <.LVL96>:
    1c86:	62 e0       	ldi	r22, 0x02	; 2
    1c88:	87 e0       	ldi	r24, 0x07	; 7
    1c8a:	90 e0       	ldi	r25, 0x00	; 0
    1c8c:	0e 94 2d 0d 	call	0x1a5a	; 0x1a5a <display_letter>

00001c90 <.LVL97>:
    1c90:	63 e0       	ldi	r22, 0x03	; 3
    1c92:	8d e0       	ldi	r24, 0x0D	; 13
    1c94:	90 e0       	ldi	r25, 0x00	; 0
    1c96:	0e 94 2d 0d 	call	0x1a5a	; 0x1a5a <display_letter>

00001c9a <.LVL98>:
    1c9a:	08 95       	ret

00001c9c <display_end>:
    1c9c:	60 e0       	ldi	r22, 0x00	; 0
    1c9e:	83 e1       	ldi	r24, 0x13	; 19
    1ca0:	90 e0       	ldi	r25, 0x00	; 0
    1ca2:	0e 94 2d 0d 	call	0x1a5a	; 0x1a5a <display_letter>

00001ca6 <.LVL99>:
    1ca6:	61 e0       	ldi	r22, 0x01	; 1
    1ca8:	85 e0       	ldi	r24, 0x05	; 5
    1caa:	90 e0       	ldi	r25, 0x00	; 0
    1cac:	0e 94 2d 0d 	call	0x1a5a	; 0x1a5a <display_letter>

00001cb0 <.LVL100>:
    1cb0:	62 e0       	ldi	r22, 0x02	; 2
    1cb2:	8c e0       	ldi	r24, 0x0C	; 12
    1cb4:	90 e0       	ldi	r25, 0x00	; 0
    1cb6:	0e 94 2d 0d 	call	0x1a5a	; 0x1a5a <display_letter>

00001cba <.LVL101>:
    1cba:	63 e0       	ldi	r22, 0x03	; 3
    1cbc:	84 e0       	ldi	r24, 0x04	; 4
    1cbe:	90 e0       	ldi	r25, 0x00	; 0
    1cc0:	0e 94 2d 0d 	call	0x1a5a	; 0x1a5a <display_letter>

00001cc4 <.LVL102>:
    1cc4:	08 95       	ret

00001cc6 <display_srch>:
    1cc6:	60 e0       	ldi	r22, 0x00	; 0
    1cc8:	80 e1       	ldi	r24, 0x10	; 16
    1cca:	90 e0       	ldi	r25, 0x00	; 0
    1ccc:	0e 94 2d 0d 	call	0x1a5a	; 0x1a5a <display_letter>

00001cd0 <.LVL103>:
    1cd0:	61 e0       	ldi	r22, 0x01	; 1
    1cd2:	8f e0       	ldi	r24, 0x0F	; 15
    1cd4:	90 e0       	ldi	r25, 0x00	; 0
    1cd6:	0e 94 2d 0d 	call	0x1a5a	; 0x1a5a <display_letter>

00001cda <.LVL104>:
    1cda:	62 e0       	ldi	r22, 0x02	; 2
    1cdc:	83 e0       	ldi	r24, 0x03	; 3
    1cde:	90 e0       	ldi	r25, 0x00	; 0
    1ce0:	0e 94 2d 0d 	call	0x1a5a	; 0x1a5a <display_letter>

00001ce4 <.LVL105>:
    1ce4:	63 e0       	ldi	r22, 0x03	; 3
    1ce6:	88 e0       	ldi	r24, 0x08	; 8
    1ce8:	90 e0       	ldi	r25, 0x00	; 0
    1cea:	0e 94 2d 0d 	call	0x1a5a	; 0x1a5a <display_letter>

00001cee <.LVL106>:
    1cee:	08 95       	ret

00001cf0 <display_txt_stop>:
    1cf0:	60 e0       	ldi	r22, 0x00	; 0
    1cf2:	80 e1       	ldi	r24, 0x10	; 16
    1cf4:	90 e0       	ldi	r25, 0x00	; 0
    1cf6:	0e 94 2d 0d 	call	0x1a5a	; 0x1a5a <display_letter>

00001cfa <.LVL107>:
    1cfa:	61 e0       	ldi	r22, 0x01	; 1
    1cfc:	81 e1       	ldi	r24, 0x11	; 17
    1cfe:	90 e0       	ldi	r25, 0x00	; 0
    1d00:	0e 94 2d 0d 	call	0x1a5a	; 0x1a5a <display_letter>

00001d04 <.LVL108>:
    1d04:	62 e0       	ldi	r22, 0x02	; 2
    1d06:	8d e0       	ldi	r24, 0x0D	; 13
    1d08:	90 e0       	ldi	r25, 0x00	; 0
    1d0a:	0e 94 2d 0d 	call	0x1a5a	; 0x1a5a <display_letter>

00001d0e <.LVL109>:
    1d0e:	63 e0       	ldi	r22, 0x03	; 3
    1d10:	8e e0       	ldi	r24, 0x0E	; 14
    1d12:	90 e0       	ldi	r25, 0x00	; 0
    1d14:	0e 94 2d 0d 	call	0x1a5a	; 0x1a5a <display_letter>

00001d18 <.LVL110>:
    1d18:	08 95       	ret

00001d1a <__divmodhi4>:
    1d1a:	97 fb       	bst	r25, 7

00001d1c <.Loc.1>:
    1d1c:	07 2e       	mov	r0, r23

00001d1e <.Loc.2>:
    1d1e:	16 f4       	brtc	.+4      	; 0x1d24 <.L^B1>

00001d20 <.Loc.3>:
    1d20:	00 94       	com	r0

00001d22 <.Loc.4>:
    1d22:	07 d0       	rcall	.+14     	; 0x1d32 <__divmodhi4_neg1>

00001d24 <.L^B1>:
    1d24:	77 fd       	sbrc	r23, 7

00001d26 <.Loc.6>:
    1d26:	09 d0       	rcall	.+18     	; 0x1d3a <__divmodhi4_neg2>

00001d28 <.Loc.7>:
    1d28:	0e 94 f9 0e 	call	0x1df2	; 0x1df2 <__udivmodhi4>

00001d2c <.Loc.8>:
    1d2c:	07 fc       	sbrc	r0, 7

00001d2e <.Loc.9>:
    1d2e:	05 d0       	rcall	.+10     	; 0x1d3a <__divmodhi4_neg2>

00001d30 <.Loc.10>:
    1d30:	3e f4       	brtc	.+14     	; 0x1d40 <__divmodhi4_exit>

00001d32 <__divmodhi4_neg1>:
    1d32:	90 95       	com	r25

00001d34 <.Loc.12>:
    1d34:	81 95       	neg	r24

00001d36 <.Loc.13>:
    1d36:	9f 4f       	sbci	r25, 0xFF	; 255

00001d38 <.Loc.14>:
    1d38:	08 95       	ret

00001d3a <__divmodhi4_neg2>:
    1d3a:	70 95       	com	r23

00001d3c <.Loc.16>:
    1d3c:	61 95       	neg	r22

00001d3e <.Loc.17>:
    1d3e:	7f 4f       	sbci	r23, 0xFF	; 255

00001d40 <__divmodhi4_exit>:
    1d40:	08 95       	ret

00001d42 <__udivmodsi4>:
    1d42:	a1 e2       	ldi	r26, 0x21	; 33

00001d44 <.Loc.1>:
    1d44:	1a 2e       	mov	r1, r26

00001d46 <.Loc.2>:
    1d46:	aa 1b       	sub	r26, r26

00001d48 <.Loc.3>:
    1d48:	bb 1b       	sub	r27, r27

00001d4a <.Loc.4>:
    1d4a:	fd 01       	movw	r30, r26

00001d4c <.Loc.5>:
    1d4c:	0d c0       	rjmp	.+26     	; 0x1d68 <__udivmodsi4_ep>

00001d4e <__udivmodsi4_loop>:
    1d4e:	aa 1f       	adc	r26, r26

00001d50 <.Loc.7>:
    1d50:	bb 1f       	adc	r27, r27

00001d52 <.Loc.8>:
    1d52:	ee 1f       	adc	r30, r30

00001d54 <.Loc.9>:
    1d54:	ff 1f       	adc	r31, r31

00001d56 <.Loc.10>:
    1d56:	a2 17       	cp	r26, r18

00001d58 <.Loc.11>:
    1d58:	b3 07       	cpc	r27, r19

00001d5a <.Loc.12>:
    1d5a:	e4 07       	cpc	r30, r20

00001d5c <.Loc.13>:
    1d5c:	f5 07       	cpc	r31, r21

00001d5e <.Loc.14>:
    1d5e:	20 f0       	brcs	.+8      	; 0x1d68 <__udivmodsi4_ep>

00001d60 <.Loc.15>:
    1d60:	a2 1b       	sub	r26, r18

00001d62 <.Loc.16>:
    1d62:	b3 0b       	sbc	r27, r19

00001d64 <.Loc.17>:
    1d64:	e4 0b       	sbc	r30, r20

00001d66 <.Loc.18>:
    1d66:	f5 0b       	sbc	r31, r21

00001d68 <__udivmodsi4_ep>:
    1d68:	66 1f       	adc	r22, r22

00001d6a <.Loc.20>:
    1d6a:	77 1f       	adc	r23, r23

00001d6c <.Loc.21>:
    1d6c:	88 1f       	adc	r24, r24

00001d6e <.Loc.22>:
    1d6e:	99 1f       	adc	r25, r25

00001d70 <.Loc.23>:
    1d70:	1a 94       	dec	r1

00001d72 <.Loc.24>:
    1d72:	69 f7       	brne	.-38     	; 0x1d4e <__udivmodsi4_loop>

00001d74 <.Loc.25>:
    1d74:	60 95       	com	r22

00001d76 <.Loc.26>:
    1d76:	70 95       	com	r23

00001d78 <.Loc.27>:
    1d78:	80 95       	com	r24

00001d7a <.Loc.28>:
    1d7a:	90 95       	com	r25

00001d7c <.Loc.29>:
    1d7c:	9b 01       	movw	r18, r22

00001d7e <.Loc.30>:
    1d7e:	ac 01       	movw	r20, r24

00001d80 <.Loc.31>:
    1d80:	bd 01       	movw	r22, r26

00001d82 <.Loc.32>:
    1d82:	cf 01       	movw	r24, r30

00001d84 <.Loc.33>:
    1d84:	08 95       	ret

00001d86 <__divmodsi4>:
    1d86:	05 2e       	mov	r0, r21

00001d88 <.Loc.1>:
    1d88:	97 fb       	bst	r25, 7

00001d8a <.Loc.2>:
    1d8a:	1e f4       	brtc	.+6      	; 0x1d92 <.L^B1>

00001d8c <.Loc.3>:
    1d8c:	00 94       	com	r0

00001d8e <.Loc.4>:
    1d8e:	0e 94 da 0e 	call	0x1db4	; 0x1db4 <__negsi2>

00001d92 <.L^B1>:
    1d92:	57 fd       	sbrc	r21, 7

00001d94 <.Loc.6>:
    1d94:	07 d0       	rcall	.+14     	; 0x1da4 <__divmodsi4_neg2>

00001d96 <.Loc.7>:
    1d96:	0e 94 a1 0e 	call	0x1d42	; 0x1d42 <__udivmodsi4>

00001d9a <.Loc.8>:
    1d9a:	07 fc       	sbrc	r0, 7

00001d9c <.Loc.9>:
    1d9c:	03 d0       	rcall	.+6      	; 0x1da4 <__divmodsi4_neg2>

00001d9e <.Loc.10>:
    1d9e:	4e f4       	brtc	.+18     	; 0x1db2 <__divmodsi4_exit>

00001da0 <.Loc.11>:
    1da0:	0c 94 da 0e 	jmp	0x1db4	; 0x1db4 <__negsi2>

00001da4 <__divmodsi4_neg2>:
    1da4:	50 95       	com	r21

00001da6 <.Loc.13>:
    1da6:	40 95       	com	r20

00001da8 <.Loc.14>:
    1da8:	30 95       	com	r19

00001daa <.Loc.15>:
    1daa:	21 95       	neg	r18

00001dac <.Loc.16>:
    1dac:	3f 4f       	sbci	r19, 0xFF	; 255

00001dae <.Loc.17>:
    1dae:	4f 4f       	sbci	r20, 0xFF	; 255

00001db0 <.Loc.18>:
    1db0:	5f 4f       	sbci	r21, 0xFF	; 255

00001db2 <__divmodsi4_exit>:
    1db2:	08 95       	ret

00001db4 <__negsi2>:
    1db4:	90 95       	com	r25
    1db6:	80 95       	com	r24
    1db8:	70 95       	com	r23
    1dba:	61 95       	neg	r22
    1dbc:	7f 4f       	sbci	r23, 0xFF	; 255
    1dbe:	8f 4f       	sbci	r24, 0xFF	; 255
    1dc0:	9f 4f       	sbci	r25, 0xFF	; 255

00001dc2 <.Loc.1>:
    1dc2:	08 95       	ret

00001dc4 <__tablejump2__>:
    1dc4:	ee 0f       	add	r30, r30

00001dc6 <.Loc.1>:
    1dc6:	ff 1f       	adc	r31, r31

00001dc8 <.Loc.2>:
    1dc8:	88 1f       	adc	r24, r24

00001dca <.Loc.3>:
    1dca:	8b bf       	out	0x3b, r24	; 59

00001dcc <.Loc.4>:
    1dcc:	07 90       	elpm	r0, Z+

00001dce <.Loc.5>:
    1dce:	f6 91       	elpm	r31, Z

00001dd0 <.Loc.6>:
    1dd0:	e0 2d       	mov	r30, r0

00001dd2 <.Loc.7>:
    1dd2:	19 94       	eijmp

00001dd4 <__umulhisi3>:
    1dd4:	a2 9f       	mul	r26, r18

00001dd6 <.Loc.1>:
    1dd6:	b0 01       	movw	r22, r0

00001dd8 <.Loc.2>:
    1dd8:	b3 9f       	mul	r27, r19

00001dda <.Loc.3>:
    1dda:	c0 01       	movw	r24, r0

00001ddc <.Loc.4>:
    1ddc:	a3 9f       	mul	r26, r19

00001dde <.Loc.5>:
    1dde:	70 0d       	add	r23, r0

00001de0 <.Loc.6>:
    1de0:	81 1d       	adc	r24, r1

00001de2 <.Loc.7>:
    1de2:	11 24       	eor	r1, r1

00001de4 <.Loc.8>:
    1de4:	91 1d       	adc	r25, r1

00001de6 <.Loc.9>:
    1de6:	b2 9f       	mul	r27, r18

00001de8 <.Loc.10>:
    1de8:	70 0d       	add	r23, r0

00001dea <.Loc.11>:
    1dea:	81 1d       	adc	r24, r1

00001dec <.Loc.12>:
    1dec:	11 24       	eor	r1, r1

00001dee <.Loc.13>:
    1dee:	91 1d       	adc	r25, r1

00001df0 <.Loc.14>:
    1df0:	08 95       	ret

00001df2 <__udivmodhi4>:
    1df2:	aa 1b       	sub	r26, r26

00001df4 <.Loc.1>:
    1df4:	bb 1b       	sub	r27, r27

00001df6 <.Loc.2>:
    1df6:	51 e1       	ldi	r21, 0x11	; 17

00001df8 <.Loc.3>:
    1df8:	07 c0       	rjmp	.+14     	; 0x1e08 <__udivmodhi4_ep>

00001dfa <__udivmodhi4_loop>:
    1dfa:	aa 1f       	adc	r26, r26

00001dfc <.Loc.5>:
    1dfc:	bb 1f       	adc	r27, r27

00001dfe <.Loc.6>:
    1dfe:	a6 17       	cp	r26, r22

00001e00 <.Loc.7>:
    1e00:	b7 07       	cpc	r27, r23

00001e02 <.Loc.8>:
    1e02:	10 f0       	brcs	.+4      	; 0x1e08 <__udivmodhi4_ep>

00001e04 <.Loc.9>:
    1e04:	a6 1b       	sub	r26, r22

00001e06 <.Loc.10>:
    1e06:	b7 0b       	sbc	r27, r23

00001e08 <__udivmodhi4_ep>:
    1e08:	88 1f       	adc	r24, r24

00001e0a <.Loc.12>:
    1e0a:	99 1f       	adc	r25, r25

00001e0c <.Loc.13>:
    1e0c:	5a 95       	dec	r21

00001e0e <.Loc.14>:
    1e0e:	a9 f7       	brne	.-22     	; 0x1dfa <__udivmodhi4_loop>

00001e10 <.Loc.15>:
    1e10:	80 95       	com	r24

00001e12 <.Loc.16>:
    1e12:	90 95       	com	r25

00001e14 <.Loc.17>:
    1e14:	bc 01       	movw	r22, r24

00001e16 <.Loc.18>:
    1e16:	cd 01       	movw	r24, r26

00001e18 <.Loc.19>:
    1e18:	08 95       	ret

00001e1a <__fixsfsi>:
    1e1a:	0e 94 14 0f 	call	0x1e28	; 0x1e28 <__fixunssfsi>
    1e1e:	68 94       	set
    1e20:	b1 11       	cpse	r27, r1
    1e22:	0c 94 a3 0f 	jmp	0x1f46	; 0x1f46 <__fp_szero>
    1e26:	08 95       	ret

00001e28 <__fixunssfsi>:
    1e28:	0e 94 88 0f 	call	0x1f10	; 0x1f10 <__fp_splitA>
    1e2c:	88 f0       	brcs	.+34     	; 0x1e50 <.L_err>
    1e2e:	9f 57       	subi	r25, 0x7F	; 127
    1e30:	98 f0       	brcs	.+38     	; 0x1e58 <.L_zr>
    1e32:	b9 2f       	mov	r27, r25
    1e34:	99 27       	eor	r25, r25
    1e36:	b7 51       	subi	r27, 0x17	; 23
    1e38:	b0 f0       	brcs	.+44     	; 0x1e66 <.L4^B1>
    1e3a:	e1 f0       	breq	.+56     	; 0x1e74 <.L_sign>

00001e3c <.L1^B1>:
    1e3c:	66 0f       	add	r22, r22
    1e3e:	77 1f       	adc	r23, r23
    1e40:	88 1f       	adc	r24, r24
    1e42:	99 1f       	adc	r25, r25
    1e44:	1a f0       	brmi	.+6      	; 0x1e4c <.L2^B1>
    1e46:	ba 95       	dec	r27
    1e48:	c9 f7       	brne	.-14     	; 0x1e3c <.L1^B1>
    1e4a:	14 c0       	rjmp	.+40     	; 0x1e74 <.L_sign>

00001e4c <.L2^B1>:
    1e4c:	b1 30       	cpi	r27, 0x01	; 1
    1e4e:	91 f0       	breq	.+36     	; 0x1e74 <.L_sign>

00001e50 <.L_err>:
    1e50:	0e 94 a2 0f 	call	0x1f44	; 0x1f44 <__fp_zero>
    1e54:	b1 e0       	ldi	r27, 0x01	; 1
    1e56:	08 95       	ret

00001e58 <.L_zr>:
    1e58:	0c 94 a2 0f 	jmp	0x1f44	; 0x1f44 <__fp_zero>

00001e5c <.L3^B1>:
    1e5c:	67 2f       	mov	r22, r23
    1e5e:	78 2f       	mov	r23, r24
    1e60:	88 27       	eor	r24, r24
    1e62:	b8 5f       	subi	r27, 0xF8	; 248
    1e64:	39 f0       	breq	.+14     	; 0x1e74 <.L_sign>

00001e66 <.L4^B1>:
    1e66:	b9 3f       	cpi	r27, 0xF9	; 249
    1e68:	cc f3       	brlt	.-14     	; 0x1e5c <.L3^B1>

00001e6a <.L5^B1>:
    1e6a:	86 95       	lsr	r24
    1e6c:	77 95       	ror	r23
    1e6e:	67 95       	ror	r22
    1e70:	b3 95       	inc	r27
    1e72:	d9 f7       	brne	.-10     	; 0x1e6a <.L5^B1>

00001e74 <.L_sign>:
    1e74:	3e f4       	brtc	.+14     	; 0x1e84 <.L6^B1>
    1e76:	90 95       	com	r25
    1e78:	80 95       	com	r24
    1e7a:	70 95       	com	r23
    1e7c:	61 95       	neg	r22
    1e7e:	7f 4f       	sbci	r23, 0xFF	; 255
    1e80:	8f 4f       	sbci	r24, 0xFF	; 255
    1e82:	9f 4f       	sbci	r25, 0xFF	; 255

00001e84 <.L6^B1>:
    1e84:	08 95       	ret

00001e86 <__floatunsisf>:
    1e86:	e8 94       	clt
    1e88:	09 c0       	rjmp	.+18     	; 0x1e9c <.L1^B1>

00001e8a <__floatsisf>:
    1e8a:	97 fb       	bst	r25, 7
    1e8c:	3e f4       	brtc	.+14     	; 0x1e9c <.L1^B1>
    1e8e:	90 95       	com	r25
    1e90:	80 95       	com	r24
    1e92:	70 95       	com	r23
    1e94:	61 95       	neg	r22
    1e96:	7f 4f       	sbci	r23, 0xFF	; 255
    1e98:	8f 4f       	sbci	r24, 0xFF	; 255
    1e9a:	9f 4f       	sbci	r25, 0xFF	; 255

00001e9c <.L1^B1>:
    1e9c:	99 23       	and	r25, r25
    1e9e:	a9 f0       	breq	.+42     	; 0x1eca <.L4^B1>
    1ea0:	f9 2f       	mov	r31, r25
    1ea2:	96 e9       	ldi	r25, 0x96	; 150
    1ea4:	bb 27       	eor	r27, r27

00001ea6 <.L2^B1>:
    1ea6:	93 95       	inc	r25
    1ea8:	f6 95       	lsr	r31
    1eaa:	87 95       	ror	r24
    1eac:	77 95       	ror	r23
    1eae:	67 95       	ror	r22
    1eb0:	b7 95       	ror	r27
    1eb2:	f1 11       	cpse	r31, r1
    1eb4:	f8 cf       	rjmp	.-16     	; 0x1ea6 <.L2^B1>
    1eb6:	fa f4       	brpl	.+62     	; 0x1ef6 <.L_pack>
    1eb8:	bb 0f       	add	r27, r27
    1eba:	11 f4       	brne	.+4      	; 0x1ec0 <.L3^B1>
    1ebc:	60 ff       	sbrs	r22, 0
    1ebe:	1b c0       	rjmp	.+54     	; 0x1ef6 <.L_pack>

00001ec0 <.L3^B1>:
    1ec0:	6f 5f       	subi	r22, 0xFF	; 255
    1ec2:	7f 4f       	sbci	r23, 0xFF	; 255
    1ec4:	8f 4f       	sbci	r24, 0xFF	; 255
    1ec6:	9f 4f       	sbci	r25, 0xFF	; 255
    1ec8:	16 c0       	rjmp	.+44     	; 0x1ef6 <.L_pack>

00001eca <.L4^B1>:
    1eca:	88 23       	and	r24, r24
    1ecc:	11 f0       	breq	.+4      	; 0x1ed2 <.L5^B1>
    1ece:	96 e9       	ldi	r25, 0x96	; 150
    1ed0:	11 c0       	rjmp	.+34     	; 0x1ef4 <.L8^B1>

00001ed2 <.L5^B1>:
    1ed2:	77 23       	and	r23, r23
    1ed4:	21 f0       	breq	.+8      	; 0x1ede <.L6^B1>
    1ed6:	9e e8       	ldi	r25, 0x8E	; 142
    1ed8:	87 2f       	mov	r24, r23
    1eda:	76 2f       	mov	r23, r22
    1edc:	05 c0       	rjmp	.+10     	; 0x1ee8 <.L7^B1>

00001ede <.L6^B1>:
    1ede:	66 23       	and	r22, r22
    1ee0:	71 f0       	breq	.+28     	; 0x1efe <.L9^B1>
    1ee2:	96 e8       	ldi	r25, 0x86	; 134
    1ee4:	86 2f       	mov	r24, r22
    1ee6:	70 e0       	ldi	r23, 0x00	; 0

00001ee8 <.L7^B1>:
    1ee8:	60 e0       	ldi	r22, 0x00	; 0
    1eea:	2a f0       	brmi	.+10     	; 0x1ef6 <.L_pack>

00001eec <.L10^B1>:
    1eec:	9a 95       	dec	r25
    1eee:	66 0f       	add	r22, r22
    1ef0:	77 1f       	adc	r23, r23
    1ef2:	88 1f       	adc	r24, r24

00001ef4 <.L8^B1>:
    1ef4:	da f7       	brpl	.-10     	; 0x1eec <.L10^B1>

00001ef6 <.L_pack>:
    1ef6:	88 0f       	add	r24, r24
    1ef8:	96 95       	lsr	r25
    1efa:	87 95       	ror	r24
    1efc:	97 f9       	bld	r25, 7

00001efe <.L9^B1>:
    1efe:	08 95       	ret

00001f00 <__fp_split3>:
    1f00:	57 fd       	sbrc	r21, 7
    1f02:	90 58       	subi	r25, 0x80	; 128
    1f04:	44 0f       	add	r20, r20
    1f06:	55 1f       	adc	r21, r21
    1f08:	59 f0       	breq	.+22     	; 0x1f20 <.L4^B1>
    1f0a:	5f 3f       	cpi	r21, 0xFF	; 255
    1f0c:	71 f0       	breq	.+28     	; 0x1f2a <.L5^B1>

00001f0e <.L1^B1>:
    1f0e:	47 95       	ror	r20

00001f10 <__fp_splitA>:
    1f10:	88 0f       	add	r24, r24
    1f12:	97 fb       	bst	r25, 7
    1f14:	99 1f       	adc	r25, r25
    1f16:	61 f0       	breq	.+24     	; 0x1f30 <.L6^B1>
    1f18:	9f 3f       	cpi	r25, 0xFF	; 255
    1f1a:	79 f0       	breq	.+30     	; 0x1f3a <.L7^B1>

00001f1c <.L3^B1>:
    1f1c:	87 95       	ror	r24
    1f1e:	08 95       	ret

00001f20 <.L4^B1>:
    1f20:	12 16       	cp	r1, r18
    1f22:	13 06       	cpc	r1, r19
    1f24:	14 06       	cpc	r1, r20
    1f26:	55 1f       	adc	r21, r21
    1f28:	f2 cf       	rjmp	.-28     	; 0x1f0e <.L1^B1>

00001f2a <.L5^B1>:
    1f2a:	46 95       	lsr	r20
    1f2c:	f1 df       	rcall	.-30     	; 0x1f10 <__fp_splitA>
    1f2e:	08 c0       	rjmp	.+16     	; 0x1f40 <.L8^B1>

00001f30 <.L6^B1>:
    1f30:	16 16       	cp	r1, r22
    1f32:	17 06       	cpc	r1, r23
    1f34:	18 06       	cpc	r1, r24
    1f36:	99 1f       	adc	r25, r25
    1f38:	f1 cf       	rjmp	.-30     	; 0x1f1c <.L3^B1>

00001f3a <.L7^B1>:
    1f3a:	86 95       	lsr	r24
    1f3c:	71 05       	cpc	r23, r1
    1f3e:	61 05       	cpc	r22, r1

00001f40 <.L8^B1>:
    1f40:	08 94       	sec
    1f42:	08 95       	ret

00001f44 <__fp_zero>:
    1f44:	e8 94       	clt

00001f46 <__fp_szero>:
    1f46:	bb 27       	eor	r27, r27
    1f48:	66 27       	eor	r22, r22
    1f4a:	77 27       	eor	r23, r23
    1f4c:	cb 01       	movw	r24, r22
    1f4e:	97 f9       	bld	r25, 7
    1f50:	08 95       	ret

00001f52 <__mulsf3>:
    1f52:	0e 94 bc 0f 	call	0x1f78	; 0x1f78 <__mulsf3x>
    1f56:	0c 94 2d 10 	jmp	0x205a	; 0x205a <__fp_round>

00001f5a <.L^B1>:
    1f5a:	0e 94 1f 10 	call	0x203e	; 0x203e <__fp_pscA>
    1f5e:	38 f0       	brcs	.+14     	; 0x1f6e <.L1^B1>
    1f60:	0e 94 26 10 	call	0x204c	; 0x204c <__fp_pscB>
    1f64:	20 f0       	brcs	.+8      	; 0x1f6e <.L1^B1>
    1f66:	95 23       	and	r25, r21
    1f68:	11 f0       	breq	.+4      	; 0x1f6e <.L1^B1>
    1f6a:	0c 94 16 10 	jmp	0x202c	; 0x202c <__fp_inf>

00001f6e <.L1^B1>:
    1f6e:	0c 94 1c 10 	jmp	0x2038	; 0x2038 <__fp_nan>

00001f72 <.L2^B1>:
    1f72:	11 24       	eor	r1, r1
    1f74:	0c 94 a3 0f 	jmp	0x1f46	; 0x1f46 <__fp_szero>

00001f78 <__mulsf3x>:
    1f78:	0e 94 80 0f 	call	0x1f00	; 0x1f00 <__fp_split3>
    1f7c:	70 f3       	brcs	.-36     	; 0x1f5a <.L^B1>

00001f7e <__mulsf3_pse>:
    1f7e:	95 9f       	mul	r25, r21
    1f80:	c1 f3       	breq	.-16     	; 0x1f72 <.L2^B1>
    1f82:	95 0f       	add	r25, r21
    1f84:	50 e0       	ldi	r21, 0x00	; 0
    1f86:	55 1f       	adc	r21, r21
    1f88:	62 9f       	mul	r22, r18
    1f8a:	f0 01       	movw	r30, r0
    1f8c:	72 9f       	mul	r23, r18
    1f8e:	bb 27       	eor	r27, r27
    1f90:	f0 0d       	add	r31, r0
    1f92:	b1 1d       	adc	r27, r1
    1f94:	63 9f       	mul	r22, r19
    1f96:	aa 27       	eor	r26, r26
    1f98:	f0 0d       	add	r31, r0
    1f9a:	b1 1d       	adc	r27, r1
    1f9c:	aa 1f       	adc	r26, r26
    1f9e:	64 9f       	mul	r22, r20
    1fa0:	66 27       	eor	r22, r22
    1fa2:	b0 0d       	add	r27, r0
    1fa4:	a1 1d       	adc	r26, r1
    1fa6:	66 1f       	adc	r22, r22
    1fa8:	82 9f       	mul	r24, r18
    1faa:	22 27       	eor	r18, r18
    1fac:	b0 0d       	add	r27, r0
    1fae:	a1 1d       	adc	r26, r1
    1fb0:	62 1f       	adc	r22, r18
    1fb2:	73 9f       	mul	r23, r19
    1fb4:	b0 0d       	add	r27, r0
    1fb6:	a1 1d       	adc	r26, r1
    1fb8:	62 1f       	adc	r22, r18
    1fba:	83 9f       	mul	r24, r19
    1fbc:	a0 0d       	add	r26, r0
    1fbe:	61 1d       	adc	r22, r1
    1fc0:	22 1f       	adc	r18, r18
    1fc2:	74 9f       	mul	r23, r20
    1fc4:	33 27       	eor	r19, r19
    1fc6:	a0 0d       	add	r26, r0
    1fc8:	61 1d       	adc	r22, r1
    1fca:	23 1f       	adc	r18, r19
    1fcc:	84 9f       	mul	r24, r20
    1fce:	60 0d       	add	r22, r0
    1fd0:	21 1d       	adc	r18, r1
    1fd2:	82 2f       	mov	r24, r18
    1fd4:	76 2f       	mov	r23, r22
    1fd6:	6a 2f       	mov	r22, r26
    1fd8:	11 24       	eor	r1, r1
    1fda:	9f 57       	subi	r25, 0x7F	; 127
    1fdc:	50 40       	sbci	r21, 0x00	; 0
    1fde:	9a f0       	brmi	.+38     	; 0x2006 <.L13^B1>
    1fe0:	f1 f0       	breq	.+60     	; 0x201e <.L15^B1>

00001fe2 <.L10^B1>:
    1fe2:	88 23       	and	r24, r24
    1fe4:	4a f0       	brmi	.+18     	; 0x1ff8 <.L11^B1>
    1fe6:	ee 0f       	add	r30, r30
    1fe8:	ff 1f       	adc	r31, r31
    1fea:	bb 1f       	adc	r27, r27
    1fec:	66 1f       	adc	r22, r22
    1fee:	77 1f       	adc	r23, r23
    1ff0:	88 1f       	adc	r24, r24
    1ff2:	91 50       	subi	r25, 0x01	; 1
    1ff4:	50 40       	sbci	r21, 0x00	; 0
    1ff6:	a9 f7       	brne	.-22     	; 0x1fe2 <.L10^B1>

00001ff8 <.L11^B1>:
    1ff8:	9e 3f       	cpi	r25, 0xFE	; 254
    1ffa:	51 05       	cpc	r21, r1
    1ffc:	80 f0       	brcs	.+32     	; 0x201e <.L15^B1>
    1ffe:	0c 94 16 10 	jmp	0x202c	; 0x202c <__fp_inf>

00002002 <.L12^B1>:
    2002:	0c 94 a3 0f 	jmp	0x1f46	; 0x1f46 <__fp_szero>

00002006 <.L13^B1>:
    2006:	5f 3f       	cpi	r21, 0xFF	; 255
    2008:	e4 f3       	brlt	.-8      	; 0x2002 <.L12^B1>
    200a:	98 3e       	cpi	r25, 0xE8	; 232
    200c:	d4 f3       	brlt	.-12     	; 0x2002 <.L12^B1>

0000200e <.L14^B1>:
    200e:	86 95       	lsr	r24
    2010:	77 95       	ror	r23
    2012:	67 95       	ror	r22
    2014:	b7 95       	ror	r27
    2016:	f7 95       	ror	r31
    2018:	e7 95       	ror	r30
    201a:	9f 5f       	subi	r25, 0xFF	; 255
    201c:	c1 f7       	brne	.-16     	; 0x200e <.L14^B1>

0000201e <.L15^B1>:
    201e:	fe 2b       	or	r31, r30
    2020:	88 0f       	add	r24, r24
    2022:	91 1d       	adc	r25, r1
    2024:	96 95       	lsr	r25
    2026:	87 95       	ror	r24
    2028:	97 f9       	bld	r25, 7
    202a:	08 95       	ret

0000202c <__fp_inf>:
    202c:	97 f9       	bld	r25, 7
    202e:	9f 67       	ori	r25, 0x7F	; 127
    2030:	80 e8       	ldi	r24, 0x80	; 128
    2032:	70 e0       	ldi	r23, 0x00	; 0
    2034:	60 e0       	ldi	r22, 0x00	; 0
    2036:	08 95       	ret

00002038 <__fp_nan>:
    2038:	9f ef       	ldi	r25, 0xFF	; 255
    203a:	80 ec       	ldi	r24, 0xC0	; 192
    203c:	08 95       	ret

0000203e <__fp_pscA>:
    203e:	00 24       	eor	r0, r0
    2040:	0a 94       	dec	r0
    2042:	16 16       	cp	r1, r22
    2044:	17 06       	cpc	r1, r23
    2046:	18 06       	cpc	r1, r24
    2048:	09 06       	cpc	r0, r25
    204a:	08 95       	ret

0000204c <__fp_pscB>:
    204c:	00 24       	eor	r0, r0
    204e:	0a 94       	dec	r0
    2050:	12 16       	cp	r1, r18
    2052:	13 06       	cpc	r1, r19
    2054:	14 06       	cpc	r1, r20
    2056:	05 06       	cpc	r0, r21
    2058:	08 95       	ret

0000205a <__fp_round>:
    205a:	09 2e       	mov	r0, r25
    205c:	03 94       	inc	r0
    205e:	00 0c       	add	r0, r0
    2060:	11 f4       	brne	.+4      	; 0x2066 <.L1^B1>
    2062:	88 23       	and	r24, r24
    2064:	52 f0       	brmi	.+20     	; 0x207a <.L3^B1>

00002066 <.L1^B1>:
    2066:	bb 0f       	add	r27, r27
    2068:	40 f4       	brcc	.+16     	; 0x207a <.L3^B1>
    206a:	bf 2b       	or	r27, r31
    206c:	11 f4       	brne	.+4      	; 0x2072 <.L2^B1>
    206e:	60 ff       	sbrs	r22, 0
    2070:	04 c0       	rjmp	.+8      	; 0x207a <.L3^B1>

00002072 <.L2^B1>:
    2072:	6f 5f       	subi	r22, 0xFF	; 255
    2074:	7f 4f       	sbci	r23, 0xFF	; 255
    2076:	8f 4f       	sbci	r24, 0xFF	; 255
    2078:	9f 4f       	sbci	r25, 0xFF	; 255

0000207a <.L3^B1>:
    207a:	08 95       	ret

0000207c <_exit>:
    207c:	f8 94       	cli

0000207e <__stop_program>:
    207e:	ff cf       	rjmp	.-2      	; 0x207e <__stop_program>

00002080 <L0^A>:
    2080:	c5 02       	muls	r28, r21
    2082:	cb 02       	muls	r28, r27
    2084:	d1 02       	muls	r29, r17
    2086:	d7 02       	muls	r29, r23
    2088:	dd 02       	muls	r29, r29
    208a:	e3 02       	muls	r30, r19
    208c:	e9 02       	muls	r30, r25
    208e:	ef 02       	muls	r30, r31
    2090:	f5 02       	muls	r31, r21

00002092 <.L41>:
    2092:	cc 08       	sbc	r12, r12
    2094:	d8 08       	sbc	r13, r8
    2096:	e4 08       	sbc	r14, r4
    2098:	f0 08       	sbc	r15, r0
    209a:	fc 08       	sbc	r15, r12
    209c:	08 09       	sbc	r16, r8
    209e:	14 09       	sbc	r17, r4
    20a0:	20 09       	sbc	r18, r0
    20a2:	2c 09       	sbc	r18, r12
    20a4:	38 09       	sbc	r19, r8
    20a6:	44 09       	sbc	r20, r4
    20a8:	50 09       	sbc	r21, r0
    20aa:	5c 09       	sbc	r21, r12
    20ac:	68 09       	sbc	r22, r8
    20ae:	74 09       	sbc	r23, r4
