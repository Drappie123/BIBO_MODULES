
bin\Debug\Bibo.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000066  00800200  0000114a  000011fe  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000114a  00000000  00000000  000000b4  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000006  00800266  00800266  00001264  2**0
                  ALLOC
  3 .fuse         00000003  00820000  00820000  00001264  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  4 .comment      00000012  00000000  00000000  00001267  2**0
                  CONTENTS, READONLY
  5 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  0000127c  2**2
                  CONTENTS, READONLY, OCTETS
  6 .debug_aranges 000001f8  00000000  00000000  000012c0  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
  7 .debug_info   00002e3a  00000000  00000000  000014b8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
  8 .debug_abbrev 000013ee  00000000  00000000  000042f2  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
  9 .debug_line   00002336  00000000  00000000  000056e0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 10 .debug_frame  000004b8  00000000  00000000  00007a18  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 11 .debug_str    000009a6  00000000  00000000  00007ed0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 12 .debug_line_str 0000024e  00000000  00000000  00008876  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_loclists 000007d7  00000000  00000000  00008ac4  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_rnglists 00000051  00000000  00000000  0000929b  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 a2 00 	jmp	0x144	; 0x144 <__ctors_end>
       4:	0c 94 c5 00 	jmp	0x18a	; 0x18a <__vector_1>
       8:	0c 94 c3 00 	jmp	0x186	; 0x186 <__bad_interrupt>
       c:	0c 94 c3 00 	jmp	0x186	; 0x186 <__bad_interrupt>
      10:	0c 94 c3 00 	jmp	0x186	; 0x186 <__bad_interrupt>
      14:	0c 94 c3 00 	jmp	0x186	; 0x186 <__bad_interrupt>
      18:	0c 94 c3 00 	jmp	0x186	; 0x186 <__bad_interrupt>
      1c:	0c 94 c3 00 	jmp	0x186	; 0x186 <__bad_interrupt>
      20:	0c 94 c3 00 	jmp	0x186	; 0x186 <__bad_interrupt>
      24:	0c 94 c3 00 	jmp	0x186	; 0x186 <__bad_interrupt>
      28:	0c 94 c3 00 	jmp	0x186	; 0x186 <__bad_interrupt>
      2c:	0c 94 c3 00 	jmp	0x186	; 0x186 <__bad_interrupt>
      30:	0c 94 c3 00 	jmp	0x186	; 0x186 <__bad_interrupt>
      34:	0c 94 c3 00 	jmp	0x186	; 0x186 <__bad_interrupt>
      38:	0c 94 c3 00 	jmp	0x186	; 0x186 <__bad_interrupt>
      3c:	0c 94 c3 00 	jmp	0x186	; 0x186 <__bad_interrupt>
      40:	0c 94 c3 00 	jmp	0x186	; 0x186 <__bad_interrupt>
      44:	0c 94 c3 00 	jmp	0x186	; 0x186 <__bad_interrupt>
      48:	0c 94 c3 00 	jmp	0x186	; 0x186 <__bad_interrupt>
      4c:	0c 94 c3 00 	jmp	0x186	; 0x186 <__bad_interrupt>
      50:	0c 94 c3 00 	jmp	0x186	; 0x186 <__bad_interrupt>
      54:	0c 94 c3 00 	jmp	0x186	; 0x186 <__bad_interrupt>
      58:	0c 94 c3 00 	jmp	0x186	; 0x186 <__bad_interrupt>
      5c:	0c 94 c3 00 	jmp	0x186	; 0x186 <__bad_interrupt>
      60:	0c 94 c3 00 	jmp	0x186	; 0x186 <__bad_interrupt>
      64:	0c 94 c3 00 	jmp	0x186	; 0x186 <__bad_interrupt>
      68:	0c 94 c3 00 	jmp	0x186	; 0x186 <__bad_interrupt>
      6c:	0c 94 c3 00 	jmp	0x186	; 0x186 <__bad_interrupt>
      70:	0c 94 c3 00 	jmp	0x186	; 0x186 <__bad_interrupt>
      74:	0c 94 c3 00 	jmp	0x186	; 0x186 <__bad_interrupt>
      78:	0c 94 c3 00 	jmp	0x186	; 0x186 <__bad_interrupt>
      7c:	0c 94 c3 00 	jmp	0x186	; 0x186 <__bad_interrupt>
      80:	0c 94 c3 00 	jmp	0x186	; 0x186 <__bad_interrupt>
      84:	0c 94 c3 00 	jmp	0x186	; 0x186 <__bad_interrupt>
      88:	0c 94 c3 00 	jmp	0x186	; 0x186 <__bad_interrupt>
      8c:	0c 94 c3 00 	jmp	0x186	; 0x186 <__bad_interrupt>
      90:	0c 94 c3 00 	jmp	0x186	; 0x186 <__bad_interrupt>
      94:	0c 94 c3 00 	jmp	0x186	; 0x186 <__bad_interrupt>
      98:	0c 94 c3 00 	jmp	0x186	; 0x186 <__bad_interrupt>
      9c:	0c 94 c3 00 	jmp	0x186	; 0x186 <__bad_interrupt>
      a0:	0c 94 c3 00 	jmp	0x186	; 0x186 <__bad_interrupt>
      a4:	0c 94 c3 00 	jmp	0x186	; 0x186 <__bad_interrupt>
      a8:	0c 94 c3 00 	jmp	0x186	; 0x186 <__bad_interrupt>
      ac:	0c 94 c3 00 	jmp	0x186	; 0x186 <__bad_interrupt>
      b0:	0c 94 c3 00 	jmp	0x186	; 0x186 <__bad_interrupt>
      b4:	0c 94 c3 00 	jmp	0x186	; 0x186 <__bad_interrupt>
      b8:	0c 94 c3 00 	jmp	0x186	; 0x186 <__bad_interrupt>
      bc:	0c 94 c3 00 	jmp	0x186	; 0x186 <__bad_interrupt>
      c0:	0c 94 c3 00 	jmp	0x186	; 0x186 <__bad_interrupt>
      c4:	0c 94 c3 00 	jmp	0x186	; 0x186 <__bad_interrupt>
      c8:	0c 94 c3 00 	jmp	0x186	; 0x186 <__bad_interrupt>
      cc:	0c 94 c3 00 	jmp	0x186	; 0x186 <__bad_interrupt>
      d0:	0c 94 c3 00 	jmp	0x186	; 0x186 <__bad_interrupt>
      d4:	0c 94 c3 00 	jmp	0x186	; 0x186 <__bad_interrupt>
      d8:	0c 94 c3 00 	jmp	0x186	; 0x186 <__bad_interrupt>
      dc:	0c 94 c3 00 	jmp	0x186	; 0x186 <__bad_interrupt>
      e0:	0c 94 c3 00 	jmp	0x186	; 0x186 <__bad_interrupt>

000000e4 <__trampolines_start>:
      e4:	0c 94 a8 05 	jmp	0xb50	; 0xb50 <.L43>
      e8:	0c 94 84 05 	jmp	0xb08	; 0xb08 <.L46>
      ec:	0c 94 38 02 	jmp	0x470	; 0x470 <.L28>
      f0:	0c 94 20 02 	jmp	0x440	; 0x440 <.L32>
      f4:	0c 94 2c 02 	jmp	0x458	; 0x458 <.L30>
      f8:	0c 94 3c 05 	jmp	0xa78	; 0xa78 <.L52>
      fc:	0c 94 9c 05 	jmp	0xb38	; 0xb38 <.L44>
     100:	0c 94 60 05 	jmp	0xac0	; 0xac0 <.L49>
     104:	0c 94 18 05 	jmp	0xa30	; 0xa30 <.L55>
     108:	0c 94 1a 02 	jmp	0x434	; 0x434 <.L33>
     10c:	0c 94 54 05 	jmp	0xaa8	; 0xaa8 <.L50>
     110:	0c 94 48 05 	jmp	0xa90	; 0xa90 <.L51>
     114:	0c 94 6c 05 	jmp	0xad8	; 0xad8 <.L48>
     118:	0c 94 30 05 	jmp	0xa60	; 0xa60 <.L53>
     11c:	0c 94 78 05 	jmp	0xaf0	; 0xaf0 <.L47>
     120:	0c 94 26 02 	jmp	0x44c	; 0x44c <.L31>
     124:	0c 94 32 02 	jmp	0x464	; 0x464 <.L29>
     128:	0c 94 14 02 	jmp	0x428	; 0x428 <.L34>
     12c:	0c 94 3e 02 	jmp	0x47c	; 0x47c <.L27>
     130:	0c 94 24 05 	jmp	0xa48	; 0xa48 <.L54>
     134:	0c 94 b4 05 	jmp	0xb68	; 0xb68 <.L42>
     138:	0c 94 c0 05 	jmp	0xb80	; 0xb80 <.L40>
     13c:	0c 94 90 05 	jmp	0xb20	; 0xb20 <.L45>
     140:	0c 94 44 02 	jmp	0x488	; 0x488 <.L25>

00000144 <__ctors_end>:
     144:	11 24       	eor	r1, r1
     146:	1f be       	out	0x3f, r1	; 63
     148:	cf ef       	ldi	r28, 0xFF	; 255
     14a:	d1 e2       	ldi	r29, 0x21	; 33
     14c:	de bf       	out	0x3e, r29	; 62
     14e:	cd bf       	out	0x3d, r28	; 61
     150:	00 e0       	ldi	r16, 0x00	; 0
     152:	0c bf       	out	0x3c, r16	; 60

00000154 <__do_copy_data>:
     154:	12 e0       	ldi	r17, 0x02	; 2

00000156 <.Loc.1>:
     156:	a0 e0       	ldi	r26, 0x00	; 0

00000158 <.Loc.2>:
     158:	b2 e0       	ldi	r27, 0x02	; 2

0000015a <.Loc.3>:
     15a:	ea e4       	ldi	r30, 0x4A	; 74

0000015c <.Loc.4>:
     15c:	f1 e1       	ldi	r31, 0x11	; 17

0000015e <.Loc.5>:
     15e:	00 e0       	ldi	r16, 0x00	; 0

00000160 <.Loc.6>:
     160:	0b bf       	out	0x3b, r16	; 59

00000162 <.Loc.7>:
     162:	02 c0       	rjmp	.+4      	; 0x168 <.L__do_copy_data_start>

00000164 <.L__do_copy_data_loop>:
     164:	07 90       	elpm	r0, Z+

00000166 <.Loc.9>:
     166:	0d 92       	st	X+, r0

00000168 <.L__do_copy_data_start>:
     168:	a6 36       	cpi	r26, 0x66	; 102

0000016a <.Loc.11>:
     16a:	b1 07       	cpc	r27, r17

0000016c <.Loc.12>:
     16c:	d9 f7       	brne	.-10     	; 0x164 <.L__do_copy_data_loop>

0000016e <__do_clear_bss>:
     16e:	22 e0       	ldi	r18, 0x02	; 2

00000170 <.Loc.1>:
     170:	a6 e6       	ldi	r26, 0x66	; 102

00000172 <.Loc.2>:
     172:	b2 e0       	ldi	r27, 0x02	; 2

00000174 <.Loc.3>:
     174:	01 c0       	rjmp	.+2      	; 0x178 <.Loc.5>

00000176 <.Loc.4>:
     176:	1d 92       	st	X+, r1

00000178 <.Loc.5>:
     178:	ac 36       	cpi	r26, 0x6C	; 108

0000017a <.Loc.6>:
     17a:	b2 07       	cpc	r27, r18

0000017c <.Loc.7>:
     17c:	e1 f7       	brne	.-8      	; 0x176 <.Loc.4>

0000017e <L0^A>:
     17e:	0e 94 a3 02 	call	0x546	; 0x546 <main>
     182:	0c 94 8b 08 	jmp	0x1116	; 0x1116 <_exit>

00000186 <__bad_interrupt>:
     186:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000018a <__vector_1>:
#include "config.h"
#include "stepper.h"
#include "music.h"

// --- STOP KNOP --- //
ISR(INT0_vect){
     18a:	1f 92       	push	r1
     18c:	0f 92       	push	r0
     18e:	0f b6       	in	r0, 0x3f	; 63
     190:	0f 92       	push	r0
     192:	11 24       	eor	r1, r1
     194:	0b b6       	in	r0, 0x3b	; 59
     196:	0f 92       	push	r0
     198:	2f 93       	push	r18
     19a:	3f 93       	push	r19
     19c:	4f 93       	push	r20
     19e:	5f 93       	push	r21
     1a0:	6f 93       	push	r22
     1a2:	7f 93       	push	r23
     1a4:	8f 93       	push	r24
     1a6:	9f 93       	push	r25
     1a8:	af 93       	push	r26
     1aa:	bf 93       	push	r27
     1ac:	cf 93       	push	r28
     1ae:	df 93       	push	r29
     1b0:	ef 93       	push	r30
     1b2:	ff 93       	push	r31

000001b4 <.LBB10>:
    if(stop_pressed()){
     1b4:	48 9b       	sbis	0x09, 0	; 9
     1b6:	20 c0       	rjmp	.+64     	; 0x1f8 <.L1>

000001b8 <.LBI12>:
        while(stop_pressed()){
     1b8:	48 9b       	sbis	0x09, 0	; 9
     1ba:	18 c0       	rjmp	.+48     	; 0x1ec <.L3>

000001bc <.Loc.9>:
            // Stop steppers
            DDR_ST1_STEP &= ~(1<<PIN_ST1_STEP);
            DDR_ST2_STEP &= ~(1<<PIN_ST2_STEP);
     1bc:	c1 e0       	ldi	r28, 0x01	; 1
     1be:	d1 e0       	ldi	r29, 0x01	; 1
     1c0:	04 c0       	rjmp	.+8      	; 0x1ca <.L7>

000001c2 <.L4>:
            buzzer_enable(0);
            if(stop_pressed()){
                display_txt_stop();
            }
            else{
                if(!stop_pressed()){
     1c2:	48 9b       	sbis	0x09, 0	; 9
     1c4:	0e c0       	rjmp	.+28     	; 0x1e2 <.L9>

000001c6 <.L5>:
        while(stop_pressed()){
     1c6:	48 9b       	sbis	0x09, 0	; 9
     1c8:	11 c0       	rjmp	.+34     	; 0x1ec <.L3>

000001ca <.L7>:
            DDR_ST1_STEP &= ~(1<<PIN_ST1_STEP);
     1ca:	9d 98       	cbi	0x13, 5	; 19

000001cc <.Loc.20>:
            DDR_ST2_STEP &= ~(1<<PIN_ST2_STEP);
     1cc:	88 81       	ld	r24, Y
     1ce:	8f 7b       	andi	r24, 0xBF	; 191
     1d0:	88 83       	st	Y, r24

000001d2 <.Loc.22>:
            buzzer_enable(0);
     1d2:	80 e0       	ldi	r24, 0x00	; 0
     1d4:	0e 94 d8 03 	call	0x7b0	; 0x7b0 <buzzer_enable>

000001d8 <.LBB18>:
            if(stop_pressed()){
     1d8:	48 9b       	sbis	0x09, 0	; 9
     1da:	f3 cf       	rjmp	.-26     	; 0x1c2 <.L4>

000001dc <.Loc.27>:
                display_txt_stop();
     1dc:	0e 94 05 08 	call	0x100a	; 0x100a <display_txt_stop>

000001e0 <.LVL1>:
     1e0:	f2 cf       	rjmp	.-28     	; 0x1c6 <.L5>

000001e2 <.L9>:
                    // RESET arduino
                    cli();
     1e2:	f8 94       	cli

000001e4 <.Loc.29>:
                    // Enable Watchdog Timer and set minimum timeout
                    WDTCSR = (1 << WDE) | (1 << WDCE);
     1e4:	88 e1       	ldi	r24, 0x18	; 24
     1e6:	80 93 60 00 	sts	0x0060, r24	; 0x800060 <__TEXT_REGION_LENGTH__+0x700060>

000001ea <.L6>:
                    // Wait for the watchdog timer to reset the system
                    while (1) {}
     1ea:	ff cf       	rjmp	.-2      	; 0x1ea <.L6>

000001ec <.L3>:
                }
            }
        }
        // Re-enable steppers
        DDR_ST1_STEP |= (1<<PIN_ST1_STEP);
     1ec:	9d 9a       	sbi	0x13, 5	; 19

000001ee <.Loc.36>:
        DDR_ST2_STEP |= (1<<PIN_ST2_STEP);
     1ee:	e1 e0       	ldi	r30, 0x01	; 1
     1f0:	f1 e0       	ldi	r31, 0x01	; 1
     1f2:	80 81       	ld	r24, Z

000001f4 <.Loc.37>:
     1f4:	80 64       	ori	r24, 0x40	; 64
     1f6:	80 83       	st	Z, r24

000001f8 <.L1>:
    }
}
     1f8:	ff 91       	pop	r31
     1fa:	ef 91       	pop	r30
     1fc:	df 91       	pop	r29
     1fe:	cf 91       	pop	r28
     200:	bf 91       	pop	r27
     202:	af 91       	pop	r26
     204:	9f 91       	pop	r25
     206:	8f 91       	pop	r24
     208:	7f 91       	pop	r23
     20a:	6f 91       	pop	r22
     20c:	5f 91       	pop	r21
     20e:	4f 91       	pop	r20
     210:	3f 91       	pop	r19
     212:	2f 91       	pop	r18
     214:	0f 90       	pop	r0
     216:	0b be       	out	0x3b, r0	; 59
     218:	0f 90       	pop	r0
     21a:	0f be       	out	0x3f, r0	; 63
     21c:	0f 90       	pop	r0
     21e:	1f 90       	pop	r1
     220:	18 95       	reti

00000222 <init_stop_button>:
    init_limit_switches();
}

// --- INIT INTERRUPT FOR STOP BUTTON --- //
void init_stop_button(void){
    DDR_STOP &= ~(1<<PIN_STOP);
     222:	50 98       	cbi	0x0a, 0	; 10

00000224 <.Loc.42>:
    EICRA |= (1<<ISC01) | (1<<ISC00);  // Rising edge
     224:	e9 e6       	ldi	r30, 0x69	; 105
     226:	f0 e0       	ldi	r31, 0x00	; 0
     228:	80 81       	ld	r24, Z

0000022a <.Loc.43>:
     22a:	83 60       	ori	r24, 0x03	; 3
     22c:	80 83       	st	Z, r24

0000022e <.Loc.44>:
    EIMSK |= (1<<INT0);
     22e:	e8 9a       	sbi	0x1d, 0	; 29

00000230 <.Loc.46>:
}
     230:	08 95       	ret

00000232 <stop_pressed>:
// --- Functions for reading buttons and sensors --- //
char stop_pressed(void) {
    return (REG_STOP & (1 << PIN_STOP));
     232:	89 b1       	in	r24, 0x09	; 9

00000234 <.Loc.50>:
}
     234:	81 70       	andi	r24, 0x01	; 1
     236:	08 95       	ret

00000238 <init_limit_switches>:

/// --- limit_switches---///
void init_limit_switches(void) {
    // Set PD0 and PD1 (pins 25, 26) as input
    DDRA &= ~((1 << PA3) | (1 << PA4));
     238:	81 b1       	in	r24, 0x01	; 1
     23a:	87 7e       	andi	r24, 0xE7	; 231
     23c:	81 b9       	out	0x01, r24	; 1

0000023e <.Loc.54>:

    // Optional: Enable pull-up resistors
    PORTA |= (1 << PA3) | (1 << PA4);
     23e:	82 b1       	in	r24, 0x02	; 2

00000240 <.Loc.55>:
     240:	88 61       	ori	r24, 0x18	; 24
     242:	82 b9       	out	0x02, r24	; 2

00000244 <.Loc.56>:
    // Set PD1 startbutton
    DDRD &= ~((1 << PD1));
     244:	51 98       	cbi	0x0a, 1	; 10

00000246 <.Loc.58>:

    // Optional: Enable pull-up resistors startbutton
    PORTD |= (1 << PD1);
     246:	59 9a       	sbi	0x0b, 1	; 11

00000248 <.Loc.60>:
}
     248:	08 95       	ret

0000024a <basic_io_init>:
    init_stop_button();
     24a:	0e 94 11 01 	call	0x222	; 0x222 <init_stop_button>

0000024e <.LVL2>:
    init_limit_switches();
     24e:	0e 94 1c 01 	call	0x238	; 0x238 <init_limit_switches>

00000252 <.LVL3>:
}
     252:	08 95       	ret

00000254 <light_limit_switch_25>:

uint8_t light_limit_switch_25(void) {
    return !(PINA & (1 << PA3));
     254:	80 b1       	in	r24, 0x00	; 0

00000256 <.Loc.68>:
     256:	83 fb       	bst	r24, 3
     258:	88 27       	eor	r24, r24
     25a:	80 f9       	bld	r24, 0

0000025c <.Loc.69>:
}
     25c:	91 e0       	ldi	r25, 0x01	; 1
     25e:	89 27       	eor	r24, r25
     260:	08 95       	ret

00000262 <heavy_limit_switch_26>:

uint8_t heavy_limit_switch_26(void) {
    return !(PINA & (1 << PA2));
     262:	80 b1       	in	r24, 0x00	; 0

00000264 <.Loc.73>:
     264:	82 fb       	bst	r24, 2
     266:	88 27       	eor	r24, r24
     268:	80 f9       	bld	r24, 0

0000026a <.Loc.74>:
}
     26a:	91 e0       	ldi	r25, 0x01	; 1
     26c:	89 27       	eor	r24, r25
     26e:	08 95       	ret

00000270 <starting_button>:
//starting button
uint8_t starting_button(void) {
    return !(PIND & (1 << PD1));
     270:	89 b1       	in	r24, 0x09	; 9

00000272 <.Loc.78>:
     272:	86 95       	lsr	r24
     274:	81 70       	andi	r24, 0x01	; 1

00000276 <.Loc.79>:
}
     276:	91 e0       	ldi	r25, 0x01	; 1
     278:	89 27       	eor	r24, r25
     27a:	08 95       	ret

0000027c <USART0_init>:
     27c:	9c 01       	movw	r18, r24
     27e:	40 e0       	ldi	r20, 0x00	; 0
     280:	50 e0       	ldi	r21, 0x00	; 0
     282:	60 e4       	ldi	r22, 0x40	; 64
     284:	72 e4       	ldi	r23, 0x42	; 66
     286:	8f e0       	ldi	r24, 0x0F	; 15
     288:	90 e0       	ldi	r25, 0x00	; 0
     28a:	0e 94 2e 08 	call	0x105c	; 0x105c <__udivmodsi4>

0000028e <.Loc.3>:
     28e:	21 50       	subi	r18, 0x01	; 1
     290:	31 09       	sbc	r19, r1

00000292 <.Loc.4>:
     292:	30 93 c5 00 	sts	0x00C5, r19	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7000c5>

00000296 <.Loc.6>:
     296:	20 93 c4 00 	sts	0x00C4, r18	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7000c4>

0000029a <.Loc.8>:
     29a:	88 e1       	ldi	r24, 0x18	; 24

0000029c <.Loc.10>:
     29c:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7000c1>

000002a0 <.Loc.11>:
     2a0:	86 e0       	ldi	r24, 0x06	; 6
     2a2:	80 93 c2 00 	sts	0x00C2, r24	; 0x8000c2 <__TEXT_REGION_LENGTH__+0x7000c2>

000002a6 <.Loc.13>:
     2a6:	08 95       	ret

000002a8 <USART1_init>:
     2a8:	9c 01       	movw	r18, r24
     2aa:	40 e0       	ldi	r20, 0x00	; 0
     2ac:	50 e0       	ldi	r21, 0x00	; 0
     2ae:	60 e4       	ldi	r22, 0x40	; 64
     2b0:	72 e4       	ldi	r23, 0x42	; 66
     2b2:	8f e0       	ldi	r24, 0x0F	; 15
     2b4:	90 e0       	ldi	r25, 0x00	; 0
     2b6:	0e 94 2e 08 	call	0x105c	; 0x105c <__udivmodsi4>

000002ba <.Loc.17>:
     2ba:	21 50       	subi	r18, 0x01	; 1
     2bc:	31 09       	sbc	r19, r1

000002be <.Loc.18>:
     2be:	30 93 cd 00 	sts	0x00CD, r19	; 0x8000cd <__TEXT_REGION_LENGTH__+0x7000cd>

000002c2 <.Loc.20>:
     2c2:	20 93 cc 00 	sts	0x00CC, r18	; 0x8000cc <__TEXT_REGION_LENGTH__+0x7000cc>

000002c6 <.Loc.22>:
     2c6:	88 e1       	ldi	r24, 0x18	; 24

000002c8 <.Loc.24>:
     2c8:	80 93 c9 00 	sts	0x00C9, r24	; 0x8000c9 <__TEXT_REGION_LENGTH__+0x7000c9>

000002cc <.Loc.25>:
     2cc:	86 e0       	ldi	r24, 0x06	; 6
     2ce:	80 93 ca 00 	sts	0x00CA, r24	; 0x8000ca <__TEXT_REGION_LENGTH__+0x7000ca>

000002d2 <.Loc.27>:
     2d2:	08 95       	ret

000002d4 <USART0_sendByte>:
     2d4:	e0 ec       	ldi	r30, 0xC0	; 192
     2d6:	f0 e0       	ldi	r31, 0x00	; 0

000002d8 <.L4>:
     2d8:	90 81       	ld	r25, Z

000002da <.Loc.33>:
     2da:	95 ff       	sbrs	r25, 5
     2dc:	fd cf       	rjmp	.-6      	; 0x2d8 <.L4>

000002de <.Loc.34>:
     2de:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7000c6>

000002e2 <.Loc.36>:
     2e2:	08 95       	ret

000002e4 <USART0_sendString>:
     2e4:	cf 93       	push	r28
     2e6:	df 93       	push	r29
     2e8:	c8 2f       	mov	r28, r24
     2ea:	d9 2f       	mov	r29, r25

000002ec <.Loc.39>:
     2ec:	88 81       	ld	r24, Y
     2ee:	88 23       	and	r24, r24
     2f0:	31 f0       	breq	.+12     	; 0x2fe <.L6>
     2f2:	21 96       	adiw	r28, 0x01	; 1

000002f4 <.L8>:
     2f4:	0e 94 6a 01 	call	0x2d4	; 0x2d4 <USART0_sendByte>

000002f8 <.LVL10>:
     2f8:	89 91       	ld	r24, Y+

000002fa <.Loc.44>:
     2fa:	81 11       	cpse	r24, r1
     2fc:	fb cf       	rjmp	.-10     	; 0x2f4 <.L8>

000002fe <.L6>:
     2fe:	df 91       	pop	r29
     300:	cf 91       	pop	r28
     302:	08 95       	ret

00000304 <USART0_sendHexByte>:
     304:	1f 93       	push	r17
     306:	cf 93       	push	r28
     308:	df 93       	push	r29
     30a:	cd b7       	in	r28, 0x3d	; 61
     30c:	de b7       	in	r29, 0x3e	; 62
     30e:	61 97       	sbiw	r28, 0x11	; 17
     310:	0f b6       	in	r0, 0x3f	; 63
     312:	f8 94       	cli
     314:	de bf       	out	0x3e, r29	; 62
     316:	0f be       	out	0x3f, r0	; 63
     318:	cd bf       	out	0x3d, r28	; 61
     31a:	18 2f       	mov	r17, r24

0000031c <.Loc.48>:
     31c:	81 e1       	ldi	r24, 0x11	; 17

0000031e <.Loc.50>:
     31e:	e1 e2       	ldi	r30, 0x21	; 33
     320:	f2 e0       	ldi	r31, 0x02	; 2
     322:	de 01       	movw	r26, r28
     324:	11 96       	adiw	r26, 0x01	; 1

00000326 <.L^B1>:
     326:	01 90       	ld	r0, Z+
     328:	0d 92       	st	X+, r0
     32a:	8a 95       	dec	r24
     32c:	e1 f7       	brne	.-8      	; 0x326 <.L^B1>

0000032e <.Loc.51>:
     32e:	81 2f       	mov	r24, r17
     330:	82 95       	swap	r24
     332:	8f 70       	andi	r24, 0x0F	; 15

00000334 <.Loc.53>:
     334:	e1 e0       	ldi	r30, 0x01	; 1
     336:	f0 e0       	ldi	r31, 0x00	; 0
     338:	ec 0f       	add	r30, r28
     33a:	fd 1f       	adc	r31, r29
     33c:	e8 0f       	add	r30, r24
     33e:	f1 1d       	adc	r31, r1

00000340 <.Loc.54>:
     340:	80 81       	ld	r24, Z
     342:	0e 94 6a 01 	call	0x2d4	; 0x2d4 <USART0_sendByte>

00000346 <.LVL15>:
     346:	1f 70       	andi	r17, 0x0F	; 15

00000348 <.Loc.57>:
     348:	e1 e0       	ldi	r30, 0x01	; 1
     34a:	f0 e0       	ldi	r31, 0x00	; 0
     34c:	ec 0f       	add	r30, r28
     34e:	fd 1f       	adc	r31, r29
     350:	e1 0f       	add	r30, r17
     352:	f1 1d       	adc	r31, r1

00000354 <.Loc.58>:
     354:	80 81       	ld	r24, Z
     356:	0e 94 6a 01 	call	0x2d4	; 0x2d4 <USART0_sendByte>

0000035a <.LVL17>:
     35a:	61 96       	adiw	r28, 0x11	; 17
     35c:	0f b6       	in	r0, 0x3f	; 63
     35e:	f8 94       	cli
     360:	de bf       	out	0x3e, r29	; 62
     362:	0f be       	out	0x3f, r0	; 63
     364:	cd bf       	out	0x3d, r28	; 61
     366:	df 91       	pop	r29
     368:	cf 91       	pop	r28
     36a:	1f 91       	pop	r17
     36c:	08 95       	ret

0000036e <USART1_sendCommand>:
     36e:	0f 93       	push	r16
     370:	1f 93       	push	r17
     372:	cf 93       	push	r28
     374:	df 93       	push	r29
     376:	08 2f       	mov	r16, r24
     378:	16 2f       	mov	r17, r22
     37a:	d4 2f       	mov	r29, r20
     37c:	c2 2f       	mov	r28, r18

0000037e <.Loc.62>:
     37e:	82 e3       	ldi	r24, 0x32	; 50
     380:	92 e0       	ldi	r25, 0x02	; 2

00000382 <.Loc.63>:
     382:	0e 94 72 01 	call	0x2e4	; 0x2e4 <USART0_sendString>

00000386 <.LVL20>:
     386:	80 2f       	mov	r24, r16
     388:	0e 94 82 01 	call	0x304	; 0x304 <USART0_sendHexByte>

0000038c <.LVL21>:
     38c:	80 e2       	ldi	r24, 0x20	; 32
     38e:	0e 94 6a 01 	call	0x2d4	; 0x2d4 <USART0_sendByte>

00000392 <.LVL22>:
     392:	81 2f       	mov	r24, r17
     394:	0e 94 82 01 	call	0x304	; 0x304 <USART0_sendHexByte>

00000398 <.LVL23>:
     398:	80 e2       	ldi	r24, 0x20	; 32
     39a:	0e 94 6a 01 	call	0x2d4	; 0x2d4 <USART0_sendByte>

0000039e <.LVL24>:
     39e:	8d 2f       	mov	r24, r29
     3a0:	0e 94 82 01 	call	0x304	; 0x304 <USART0_sendHexByte>

000003a4 <.LVL25>:
     3a4:	80 e2       	ldi	r24, 0x20	; 32
     3a6:	0e 94 6a 01 	call	0x2d4	; 0x2d4 <USART0_sendByte>

000003aa <.LVL26>:
     3aa:	8c 2f       	mov	r24, r28
     3ac:	0e 94 82 01 	call	0x304	; 0x304 <USART0_sendHexByte>

000003b0 <.LVL27>:
     3b0:	82 e6       	ldi	r24, 0x62	; 98
     3b2:	92 e0       	ldi	r25, 0x02	; 2
     3b4:	0e 94 72 01 	call	0x2e4	; 0x2e4 <USART0_sendString>

000003b8 <.LVL28>:
     3b8:	e8 ec       	ldi	r30, 0xC8	; 200
     3ba:	f0 e0       	ldi	r31, 0x00	; 0

000003bc <.L12>:
     3bc:	90 81       	ld	r25, Z

000003be <.Loc.77>:
     3be:	95 ff       	sbrs	r25, 5
     3c0:	fd cf       	rjmp	.-6      	; 0x3bc <.L12>

000003c2 <.Loc.78>:
     3c2:	00 93 ce 00 	sts	0x00CE, r16	; 0x8000ce <__TEXT_REGION_LENGTH__+0x7000ce>

000003c6 <.Loc.80>:
     3c6:	e8 ec       	ldi	r30, 0xC8	; 200
     3c8:	f0 e0       	ldi	r31, 0x00	; 0

000003ca <.L13>:
     3ca:	90 81       	ld	r25, Z

000003cc <.Loc.85>:
     3cc:	95 ff       	sbrs	r25, 5
     3ce:	fd cf       	rjmp	.-6      	; 0x3ca <.L13>

000003d0 <.Loc.86>:
     3d0:	10 93 ce 00 	sts	0x00CE, r17	; 0x8000ce <__TEXT_REGION_LENGTH__+0x7000ce>

000003d4 <.Loc.88>:
     3d4:	e8 ec       	ldi	r30, 0xC8	; 200
     3d6:	f0 e0       	ldi	r31, 0x00	; 0

000003d8 <.L14>:
     3d8:	90 81       	ld	r25, Z

000003da <.Loc.93>:
     3da:	95 ff       	sbrs	r25, 5
     3dc:	fd cf       	rjmp	.-6      	; 0x3d8 <.L14>

000003de <.Loc.94>:
     3de:	d0 93 ce 00 	sts	0x00CE, r29	; 0x8000ce <__TEXT_REGION_LENGTH__+0x7000ce>

000003e2 <.Loc.96>:
     3e2:	e8 ec       	ldi	r30, 0xC8	; 200
     3e4:	f0 e0       	ldi	r31, 0x00	; 0

000003e6 <.L15>:
     3e6:	90 81       	ld	r25, Z

000003e8 <.Loc.101>:
     3e8:	95 ff       	sbrs	r25, 5
     3ea:	fd cf       	rjmp	.-6      	; 0x3e6 <.L15>

000003ec <.Loc.102>:
     3ec:	c0 93 ce 00 	sts	0x00CE, r28	; 0x8000ce <__TEXT_REGION_LENGTH__+0x7000ce>

000003f0 <.Loc.104>:
     3f0:	8d e4       	ldi	r24, 0x4D	; 77
     3f2:	92 e0       	ldi	r25, 0x02	; 2
     3f4:	0e 94 72 01 	call	0x2e4	; 0x2e4 <USART0_sendString>

000003f8 <.LVL29>:
     3f8:	df 91       	pop	r29

000003fa <.Loc.106>:
     3fa:	cf 91       	pop	r28

000003fc <.Loc.107>:
     3fc:	1f 91       	pop	r17

000003fe <.Loc.108>:
     3fe:	0f 91       	pop	r16

00000400 <.Loc.109>:
     400:	08 95       	ret

00000402 <USART1_receiveByte>:
     402:	e8 ec       	ldi	r30, 0xC8	; 200
     404:	f0 e0       	ldi	r31, 0x00	; 0

00000406 <.L21>:
     406:	80 81       	ld	r24, Z

00000408 <.Loc.115>:
     408:	88 23       	and	r24, r24
     40a:	ec f7       	brge	.-6      	; 0x406 <.L21>

0000040c <.Loc.116>:
     40c:	80 91 ce 00 	lds	r24, 0x00CE	; 0x8000ce <__TEXT_REGION_LENGTH__+0x7000ce>

00000410 <.Loc.118>:
     410:	08 95       	ret

00000412 <task_manager>:
     412:	e8 2f       	mov	r30, r24
     414:	f9 2f       	mov	r31, r25
     416:	24 2f       	mov	r18, r20

00000418 <.Loc.121>:
     418:	09 97       	sbiw	r24, 0x09	; 9
     41a:	d8 f5       	brcc	.+118    	; 0x492 <.L23>
     41c:	88 27       	eor	r24, r24
     41e:	e3 57       	subi	r30, 0x73	; 115
     420:	f7 4f       	sbci	r31, 0xF7	; 247
     422:	8f 4f       	sbci	r24, 0xFF	; 255
     424:	0c 94 6f 08 	jmp	0x10de	; 0x10de <__tablejump2__>

00000428 <.L34>:
     428:	46 2f       	mov	r20, r22

0000042a <.Loc.123>:
     42a:	60 e8       	ldi	r22, 0x80	; 128

0000042c <.Loc.124>:
     42c:	81 e0       	ldi	r24, 0x01	; 1
     42e:	0e 94 b7 01 	call	0x36e	; 0x36e <USART1_sendCommand>

00000432 <.LVL38>:
     432:	08 95       	ret

00000434 <.L33>:
     434:	46 2f       	mov	r20, r22
     436:	6f ef       	ldi	r22, 0xFF	; 255

00000438 <.Loc.127>:
     438:	81 e0       	ldi	r24, 0x01	; 1
     43a:	0e 94 b7 01 	call	0x36e	; 0x36e <USART1_sendCommand>

0000043e <.LVL41>:
     43e:	08 95       	ret

00000440 <.L32>:
     440:	46 2f       	mov	r20, r22
     442:	60 e0       	ldi	r22, 0x00	; 0

00000444 <.Loc.130>:
     444:	81 e0       	ldi	r24, 0x01	; 1
     446:	0e 94 b7 01 	call	0x36e	; 0x36e <USART1_sendCommand>

0000044a <.LVL44>:
     44a:	08 95       	ret

0000044c <.L31>:
     44c:	46 2f       	mov	r20, r22
     44e:	6e e7       	ldi	r22, 0x7E	; 126

00000450 <.Loc.133>:
     450:	81 e0       	ldi	r24, 0x01	; 1
     452:	0e 94 b7 01 	call	0x36e	; 0x36e <USART1_sendCommand>

00000456 <.LVL47>:
     456:	08 95       	ret

00000458 <.L30>:
     458:	46 2f       	mov	r20, r22
     45a:	6f e7       	ldi	r22, 0x7F	; 127

0000045c <.Loc.136>:
     45c:	81 e0       	ldi	r24, 0x01	; 1
     45e:	0e 94 b7 01 	call	0x36e	; 0x36e <USART1_sendCommand>

00000462 <.LVL50>:
     462:	08 95       	ret

00000464 <.L29>:
     464:	46 2f       	mov	r20, r22
     466:	61 e0       	ldi	r22, 0x01	; 1

00000468 <.Loc.139>:
     468:	82 e0       	ldi	r24, 0x02	; 2
     46a:	0e 94 b7 01 	call	0x36e	; 0x36e <USART1_sendCommand>

0000046e <.LVL53>:
     46e:	08 95       	ret

00000470 <.L28>:
     470:	46 2f       	mov	r20, r22
     472:	62 e0       	ldi	r22, 0x02	; 2

00000474 <.Loc.142>:
     474:	82 e0       	ldi	r24, 0x02	; 2
     476:	0e 94 b7 01 	call	0x36e	; 0x36e <USART1_sendCommand>

0000047a <.LVL56>:
     47a:	08 95       	ret

0000047c <.L27>:
     47c:	46 2f       	mov	r20, r22
     47e:	61 e0       	ldi	r22, 0x01	; 1

00000480 <.Loc.145>:
     480:	83 e0       	ldi	r24, 0x03	; 3
     482:	0e 94 b7 01 	call	0x36e	; 0x36e <USART1_sendCommand>

00000486 <.LVL59>:
     486:	08 95       	ret

00000488 <.L25>:
     488:	46 2f       	mov	r20, r22
     48a:	62 e0       	ldi	r22, 0x02	; 2

0000048c <.Loc.148>:
     48c:	83 e0       	ldi	r24, 0x03	; 3
     48e:	0e 94 b7 01 	call	0x36e	; 0x36e <USART1_sendCommand>

00000492 <.L23>:
     492:	08 95       	ret

00000494 <init_gp_timer>:
    init_gp_timer();
}
// --- Init general purpose timer --- //
void init_gp_timer(void){
    // Mode 4 CTC, prescaler 64
    TCCR1A = 0;
     494:	10 92 80 00 	sts	0x0080, r1	; 0x800080 <__TEXT_REGION_LENGTH__+0x700080>

00000498 <.Loc.3>:
    TCCR1B = (1<<WGM12) | (1<<CS11) | (1<<CS10);
     498:	8b e0       	ldi	r24, 0x0B	; 11
     49a:	80 93 81 00 	sts	0x0081, r24	; 0x800081 <__TEXT_REGION_LENGTH__+0x700081>

0000049e <.Loc.5>:
    // OCR1A is top in mode 4
    OCR1A = GP_TIMER_TOP;
     49e:	88 ea       	ldi	r24, 0xA8	; 168
     4a0:	91 e6       	ldi	r25, 0x61	; 97
     4a2:	90 93 89 00 	sts	0x0089, r25	; 0x800089 <__TEXT_REGION_LENGTH__+0x700089>
     4a6:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x700088>

000004aa <.Loc.7>:
}
     4aa:	08 95       	ret

000004ac <itermediate_control_init>:
    init_gp_timer();
     4ac:	0e 94 4a 02 	call	0x494	; 0x494 <init_gp_timer>

000004b0 <.LVL0>:
}
     4b0:	08 95       	ret

000004b2 <init>:
    basic_io_init();
     4b2:	0e 94 25 01 	call	0x24a	; 0x24a <basic_io_init>

000004b6 <.LVL1>:
    display_init();
     4b6:	0e 94 d1 06 	call	0xda2	; 0xda2 <display_init>

000004ba <.LBB4>:
    init_gp_timer();
     4ba:	0e 94 4a 02 	call	0x494	; 0x494 <init_gp_timer>

000004be <.LBE4>:
    music_init();
     4be:	0e 94 c9 03 	call	0x792	; 0x792 <music_init>

000004c2 <.LVL4>:
    sei();
     4c2:	78 94       	sei

000004c4 <.Loc.19>:
    USART0_init(9600);
     4c4:	80 e8       	ldi	r24, 0x80	; 128
     4c6:	95 e2       	ldi	r25, 0x25	; 37
     4c8:	0e 94 3e 01 	call	0x27c	; 0x27c <USART0_init>

000004cc <.LVL5>:
    USART1_init(9600);
     4cc:	80 e8       	ldi	r24, 0x80	; 128
     4ce:	95 e2       	ldi	r25, 0x25	; 37
     4d0:	0e 94 54 01 	call	0x2a8	; 0x2a8 <USART1_init>

000004d4 <.LVL6>:
}
     4d4:	08 95       	ret

000004d6 <gp_timer>:
// --- Genral purpose timer --- //
// Timers only returns 1 after it initially reaches 0. Then it can be set again
char gp_timer(int set_value){
     4d6:	28 2f       	mov	r18, r24
     4d8:	39 2f       	mov	r19, r25

000004da <.Loc.24>:
    static int count = -1;
    // Reset timer
    if(set_value == -1){
     4da:	2f 3f       	cpi	r18, 0xFF	; 255
     4dc:	32 07       	cpc	r19, r18
     4de:	c9 f0       	breq	.+50     	; 0x512 <.L5>

000004e0 <.Loc.27>:
        count = -1;
    }
    // Set value if not running
    if(count == -1){
     4e0:	80 91 00 02 	lds	r24, 0x0200	; 0x800200 <count.0>
     4e4:	90 91 01 02 	lds	r25, 0x0201	; 0x800201 <count.0+0x1>

000004e8 <.Loc.29>:
     4e8:	8f 3f       	cpi	r24, 0xFF	; 255
     4ea:	98 07       	cpc	r25, r24
     4ec:	91 f0       	breq	.+36     	; 0x512 <.L5>

000004ee <.Loc.30>:
        count = set_value;
        TIFR1 = (1<<OCF1A);
        TCNT1 = 0;
    }
    // If running, count down on flag
    else if(count > 0){
     4ee:	18 16       	cp	r1, r24
     4f0:	19 06       	cpc	r1, r25
     4f2:	dc f4       	brge	.+54     	; 0x52a <.L8>

000004f4 <.Loc.32>:
        if(TIFR1 & (1<<OCF1A)){
     4f4:	b1 9b       	sbis	0x16, 1	; 22
     4f6:	25 c0       	rjmp	.+74     	; 0x542 <.L9>

000004f8 <.Loc.34>:
            TIFR1 = (1<<OCF1A);
     4f8:	82 e0       	ldi	r24, 0x02	; 2
     4fa:	86 bb       	out	0x16, r24	; 22

000004fc <.Loc.36>:
            count--;
     4fc:	80 91 00 02 	lds	r24, 0x0200	; 0x800200 <count.0>
     500:	90 91 01 02 	lds	r25, 0x0201	; 0x800201 <count.0+0x1>
     504:	01 97       	sbiw	r24, 0x01	; 1
     506:	90 93 01 02 	sts	0x0201, r25	; 0x800201 <count.0+0x1>
     50a:	80 93 00 02 	sts	0x0200, r24	; 0x800200 <count.0>

0000050e <.Loc.38>:
    // If 0 is reached, return 1
    else if(count == 0){
        count = -1;
        return 1;
    }
    return 0;
     50e:	80 e0       	ldi	r24, 0x00	; 0
     510:	08 95       	ret

00000512 <.L5>:
        count = set_value;
     512:	30 93 01 02 	sts	0x0201, r19	; 0x800201 <count.0+0x1>
     516:	20 93 00 02 	sts	0x0200, r18	; 0x800200 <count.0>

0000051a <.Loc.41>:
        TIFR1 = (1<<OCF1A);
     51a:	82 e0       	ldi	r24, 0x02	; 2
     51c:	86 bb       	out	0x16, r24	; 22

0000051e <.Loc.43>:
        TCNT1 = 0;
     51e:	10 92 85 00 	sts	0x0085, r1	; 0x800085 <__TEXT_REGION_LENGTH__+0x700085>
     522:	10 92 84 00 	sts	0x0084, r1	; 0x800084 <__TEXT_REGION_LENGTH__+0x700084>

00000526 <.Loc.45>:
    return 0;
     526:	80 e0       	ldi	r24, 0x00	; 0
     528:	08 95       	ret

0000052a <.L8>:
    else if(count == 0){
     52a:	89 2b       	or	r24, r25
     52c:	11 f0       	breq	.+4      	; 0x532 <.L11>

0000052e <.Loc.48>:
    return 0;
     52e:	80 e0       	ldi	r24, 0x00	; 0

00000530 <.Loc.49>:
}
     530:	08 95       	ret

00000532 <.L11>:
        count = -1;
     532:	8f ef       	ldi	r24, 0xFF	; 255
     534:	9f ef       	ldi	r25, 0xFF	; 255
     536:	90 93 01 02 	sts	0x0201, r25	; 0x800201 <count.0+0x1>
     53a:	80 93 00 02 	sts	0x0200, r24	; 0x800200 <count.0>

0000053e <.Loc.52>:
        return 1;
     53e:	81 e0       	ldi	r24, 0x01	; 1
     540:	08 95       	ret

00000542 <.L9>:
    return 0;
     542:	80 e0       	ldi	r24, 0x00	; 0
     544:	08 95       	ret

00000546 <main>:
    // Store number of detected packages
    int light_packages = 0;
    int heavy_packages = 0;

    /// --- Init --- ///
    init();
     546:	0e 94 59 02 	call	0x4b2	; 0x4b2 <init>

0000054a <.LVL1>:
    int heavy_packages = 0;
     54a:	a1 2c       	mov	r10, r1
     54c:	b1 2c       	mov	r11, r1

0000054e <.Loc.10>:
    int light_packages = 0;
     54e:	c1 2c       	mov	r12, r1
     550:	d1 2c       	mov	r13, r1

00000552 <.Loc.11>:
    char first_package_detected = 0;
     552:	51 2c       	mov	r5, r1

00000554 <.Loc.12>:
    enum available_sub_states current_sub_state = entry;
     554:	00 e0       	ldi	r16, 0x00	; 0
     556:	10 e0       	ldi	r17, 0x00	; 0

00000558 <.Loc.13>:
    enum available_states current_state = wait;
     558:	c1 e0       	ldi	r28, 0x01	; 1
     55a:	d0 e0       	ldi	r29, 0x00	; 0

0000055c <.Loc.14>:
                    display_metal_and_non_metal(heavy_packages, light_packages);
                    // Check for ACK at end of path
                    if(USART1_receiveByte()==0x01){
                        // Transition to end
                        current_state = end;
                        current_sub_state = entry;
     55c:	81 2c       	mov	r8, r1
     55e:	91 2c       	mov	r9, r1

00000560 <.Loc.15>:
                        current_state = end;
     560:	0f 2e       	mov	r0, r31
     562:	f6 e0       	ldi	r31, 0x06	; 6
     564:	3f 2e       	mov	r3, r31
     566:	f0 2d       	mov	r31, r0
     568:	41 2c       	mov	r4, r1

0000056a <.Loc.16>:
                    current_sub_state = running;
     56a:	ee 24       	eor	r14, r14
     56c:	e3 94       	inc	r14
     56e:	f1 2c       	mov	r15, r1

00000570 <.Loc.17>:
                    }
                    if(gp_timer(5)){
                        // Stop
                        task_manager(stop, standard_speed, standard_acceleration);
                        light_packages++;
                        current_sub_state = exit;
     570:	68 94       	set
     572:	66 24       	eor	r6, r6
     574:	61 f8       	bld	r6, 1
     576:	71 2c       	mov	r7, r1
     578:	2c c0       	rjmp	.+88     	; 0x5d2 <.L31>

0000057a <.L27>:
                        if(first_package_detected){
                            current_state = reverse;
                            current_sub_state = entry;
                        }
                        else{
                            first_package_detected = 1;
     57a:	55 24       	eor	r5, r5
     57c:	53 94       	inc	r5

0000057e <.Loc.19>:
                            current_state = s_turn;
                            current_sub_state = entry;
     57e:	08 2d       	mov	r16, r8

00000580 <.Loc.20>:
     580:	19 2d       	mov	r17, r9

00000582 <.Loc.21>:
                            current_state = s_turn;
     582:	c4 e0       	ldi	r28, 0x04	; 4
     584:	d0 e0       	ldi	r29, 0x00	; 0

00000586 <.Loc.22>:
     586:	25 c0       	rjmp	.+74     	; 0x5d2 <.L31>

00000588 <.L32>:
        switch(current_state){
     588:	c1 30       	cpi	r28, 0x01	; 1
     58a:	d1 05       	cpc	r29, r1
     58c:	11 f5       	brne	.+68     	; 0x5d2 <.L31>

0000058e <.Loc.24>:
            if(starting_button()){
     58e:	0e 94 38 01 	call	0x270	; 0x270 <starting_button>

00000592 <.LVL8>:
     592:	88 23       	and	r24, r24
     594:	f1 f0       	breq	.+60     	; 0x5d2 <.L31>

00000596 <.Loc.27>:
     596:	3e c0       	rjmp	.+124    	; 0x614 <.L11>

00000598 <.L4>:
        switch(current_state){
     598:	c5 30       	cpi	r28, 0x05	; 5
     59a:	d1 05       	cpc	r29, r1
     59c:	09 f4       	brne	.+2      	; 0x5a0 <.Loc.29>

0000059e <L0^A>:
     59e:	8a c0       	rjmp	.+276    	; 0x6b4 <.L9>

000005a0 <.Loc.29>:
     5a0:	c6 30       	cpi	r28, 0x06	; 6
     5a2:	d1 05       	cpc	r29, r1
     5a4:	b1 f4       	brne	.+44     	; 0x5d2 <.L31>

000005a6 <.Loc.30>:
                    }
                    break;
            }
            break;
        case end:
            switch(current_sub_state){
     5a6:	01 30       	cpi	r16, 0x01	; 1
     5a8:	11 05       	cpc	r17, r1
     5aa:	09 f4       	brne	.+2      	; 0x5ae <.Loc.31>

000005ac <L0^A>:
     5ac:	ef c0       	rjmp	.+478    	; 0x78c <.L22>

000005ae <.Loc.31>:
                default:
                case entry:
                    // Send command to stop AGV
                    task_manager(stop, standard_speed, standard_acceleration);
     5ae:	41 e0       	ldi	r20, 0x01	; 1
     5b0:	61 e0       	ldi	r22, 0x01	; 1
     5b2:	84 e0       	ldi	r24, 0x04	; 4
     5b4:	90 e0       	ldi	r25, 0x00	; 0
     5b6:	0e 94 09 02 	call	0x412	; 0x412 <task_manager>

000005ba <.LVL10>:
                    display_end();
     5ba:	0e 94 db 07 	call	0xfb6	; 0xfb6 <display_end>

000005be <.LVL11>:
                    // Reset timer and play song
                    gp_timer(-1);
     5be:	8f ef       	ldi	r24, 0xFF	; 255
     5c0:	9f ef       	ldi	r25, 0xFF	; 255
     5c2:	0e 94 6b 02 	call	0x4d6	; 0x4d6 <gp_timer>

000005c6 <.L23>:
                    while(play_song());
     5c6:	0e 94 00 05 	call	0xa00	; 0xa00 <play_song>

000005ca <.LVL13>:
     5ca:	81 11       	cpse	r24, r1
     5cc:	fc cf       	rjmp	.-8      	; 0x5c6 <.L23>

000005ce <.Loc.36>:
                    current_sub_state = running;
     5ce:	0e 2d       	mov	r16, r14

000005d0 <.Loc.37>:
     5d0:	1f 2d       	mov	r17, r15

000005d2 <.L31>:
        switch(current_state){
     5d2:	c4 30       	cpi	r28, 0x04	; 4
     5d4:	d1 05       	cpc	r29, r1
     5d6:	09 f4       	brne	.+2      	; 0x5da <L0^A+0x2>

000005d8 <L0^A>:
     5d8:	c1 c0       	rjmp	.+386    	; 0x75c <.L3>
     5da:	f0 f6       	brcc	.-68     	; 0x598 <.L4>
     5dc:	c2 30       	cpi	r28, 0x02	; 2
     5de:	d1 05       	cpc	r29, r1
     5e0:	11 f1       	breq	.+68     	; 0x626 <.L5>
     5e2:	c3 30       	cpi	r28, 0x03	; 3
     5e4:	d1 05       	cpc	r29, r1
     5e6:	81 f6       	brne	.-96     	; 0x588 <.L32>

000005e8 <.Loc.40>:
            switch(current_sub_state){
     5e8:	01 30       	cpi	r16, 0x01	; 1
     5ea:	11 05       	cpc	r17, r1
     5ec:	09 f4       	brne	.+2      	; 0x5f0 <L0^A+0x2>

000005ee <L0^A>:
     5ee:	7c c0       	rjmp	.+248    	; 0x6e8 <.L18>
     5f0:	02 30       	cpi	r16, 0x02	; 2
     5f2:	11 05       	cpc	r17, r1
     5f4:	09 f4       	brne	.+2      	; 0x5f8 <L0^A+0x2>

000005f6 <L0^A>:
     5f6:	9f c0       	rjmp	.+318    	; 0x736 <.L19>
     5f8:	01 15       	cp	r16, r1
     5fa:	11 05       	cpc	r17, r1
     5fc:	51 f7       	brne	.-44     	; 0x5d2 <.L31>

000005fe <.Loc.41>:
                    task_manager(forward_slow, 0x09, standard_acceleration);
     5fe:	41 e0       	ldi	r20, 0x01	; 1
     600:	69 e0       	ldi	r22, 0x09	; 9
     602:	88 2d       	mov	r24, r8
     604:	99 2d       	mov	r25, r9
     606:	0e 94 09 02 	call	0x412	; 0x412 <task_manager>

0000060a <.LVL16>:
                    current_sub_state = running;
     60a:	0e 2d       	mov	r16, r14
     60c:	1f 2d       	mov	r17, r15

0000060e <.Loc.45>:
                    break;
     60e:	e1 cf       	rjmp	.-62     	; 0x5d2 <.L31>

00000610 <.L13>:
                    display_go();
     610:	0e 94 c6 07 	call	0xf8c	; 0xf8c <display_go>

00000614 <.L11>:
                while(!gp_timer(TEXT_DISPLAY_TIME)){
     614:	85 e0       	ldi	r24, 0x05	; 5
     616:	90 e0       	ldi	r25, 0x00	; 0
     618:	0e 94 6b 02 	call	0x4d6	; 0x4d6 <gp_timer>

0000061c <.LVL19>:
     61c:	88 23       	and	r24, r24
     61e:	c1 f3       	breq	.-16     	; 0x610 <.L13>

00000620 <.Loc.50>:
                current_state = forward;
     620:	c6 2d       	mov	r28, r6
     622:	d7 2d       	mov	r29, r7
     624:	d6 cf       	rjmp	.-84     	; 0x5d2 <.L31>

00000626 <.L5>:
            switch(current_sub_state){
     626:	01 30       	cpi	r16, 0x01	; 1
     628:	11 05       	cpc	r17, r1
     62a:	99 f0       	breq	.+38     	; 0x652 <.L14>
     62c:	02 30       	cpi	r16, 0x02	; 2
     62e:	11 05       	cpc	r17, r1
     630:	61 f1       	breq	.+88     	; 0x68a <.L15>
     632:	01 15       	cp	r16, r1
     634:	11 05       	cpc	r17, r1
     636:	69 f6       	brne	.-102    	; 0x5d2 <.L31>

00000638 <.Loc.52>:
                    task_manager(forward_fast, standard_speed, standard_acceleration);
     638:	41 e0       	ldi	r20, 0x01	; 1
     63a:	61 e0       	ldi	r22, 0x01	; 1
     63c:	8e 2d       	mov	r24, r14
     63e:	9f 2d       	mov	r25, r15
     640:	0e 94 09 02 	call	0x412	; 0x412 <task_manager>

00000644 <.LVL21>:
                    gp_timer(-1);
     644:	8f ef       	ldi	r24, 0xFF	; 255
     646:	9f ef       	ldi	r25, 0xFF	; 255
     648:	0e 94 6b 02 	call	0x4d6	; 0x4d6 <gp_timer>

0000064c <.LVL22>:
                    current_sub_state = running;
     64c:	0e 2d       	mov	r16, r14
     64e:	1f 2d       	mov	r17, r15

00000650 <.Loc.57>:
                    break;
     650:	c0 cf       	rjmp	.-128    	; 0x5d2 <.L31>

00000652 <.L14>:
                    display_metal_and_non_metal(heavy_packages, light_packages);
     652:	b6 01       	movw	r22, r12
     654:	c5 01       	movw	r24, r10
     656:	0e 94 53 06 	call	0xca6	; 0xca6 <display_metal_and_non_metal>

0000065a <.LVL24>:
                    if(gp_timer(50)){
     65a:	82 e3       	ldi	r24, 0x32	; 50
     65c:	90 e0       	ldi	r25, 0x00	; 0
     65e:	0e 94 6b 02 	call	0x4d6	; 0x4d6 <gp_timer>

00000662 <.LVL25>:
     662:	81 11       	cpse	r24, r1
     664:	0a c0       	rjmp	.+20     	; 0x67a <.L33>

00000666 <.L16>:
                    if(light_limit_switch_25()){
     666:	0e 94 2a 01 	call	0x254	; 0x254 <light_limit_switch_25>

0000066a <.LVL27>:
     66a:	88 23       	and	r24, r24
     66c:	09 f4       	brne	.+2      	; 0x670 <.Loc.65>

0000066e <L0^A>:
     66e:	b1 cf       	rjmp	.-158    	; 0x5d2 <.L31>

00000670 <.Loc.65>:
                        current_sub_state = entry;
     670:	08 2d       	mov	r16, r8

00000672 <.Loc.66>:
     672:	19 2d       	mov	r17, r9

00000674 <.Loc.67>:
                        current_state = weight_detection;
     674:	c3 e0       	ldi	r28, 0x03	; 3
     676:	d0 e0       	ldi	r29, 0x00	; 0

00000678 <.Loc.68>:
     678:	ac cf       	rjmp	.-168    	; 0x5d2 <.L31>

0000067a <.L33>:
                        task_manager(forward_slow, 0x0F, standard_acceleration);
     67a:	41 e0       	ldi	r20, 0x01	; 1
     67c:	6f e0       	ldi	r22, 0x0F	; 15
     67e:	88 2d       	mov	r24, r8
     680:	99 2d       	mov	r25, r9
     682:	0e 94 09 02 	call	0x412	; 0x412 <task_manager>

00000686 <.LVL31>:
                        current_sub_state = exit;
     686:	8e 01       	movw	r16, r28
     688:	ee cf       	rjmp	.-36     	; 0x666 <.L16>

0000068a <.L15>:
                    display_metal_and_non_metal(heavy_packages, light_packages);
     68a:	b6 01       	movw	r22, r12
     68c:	c5 01       	movw	r24, r10
     68e:	0e 94 53 06 	call	0xca6	; 0xca6 <display_metal_and_non_metal>

00000692 <.LVL33>:
                    if(light_limit_switch_25()){
     692:	0e 94 2a 01 	call	0x254	; 0x254 <light_limit_switch_25>

00000696 <.LVL34>:
     696:	e8 01       	movw	r28, r16

00000698 <.Loc.75>:
     698:	88 23       	and	r24, r24
     69a:	09 f4       	brne	.+2      	; 0x69e <.Loc.76>

0000069c <L0^A>:
     69c:	9a cf       	rjmp	.-204    	; 0x5d2 <.L31>

0000069e <.Loc.76>:
                        task_manager(forward_slow, 0x09, standard_acceleration);
     69e:	41 e0       	ldi	r20, 0x01	; 1
     6a0:	69 e0       	ldi	r22, 0x09	; 9
     6a2:	88 2d       	mov	r24, r8
     6a4:	99 2d       	mov	r25, r9
     6a6:	0e 94 09 02 	call	0x412	; 0x412 <task_manager>

000006aa <.LVL36>:
                        current_sub_state = entry;
     6aa:	08 2d       	mov	r16, r8
     6ac:	19 2d       	mov	r17, r9

000006ae <.Loc.80>:
                        current_state = weight_detection;
     6ae:	c3 e0       	ldi	r28, 0x03	; 3
     6b0:	d0 e0       	ldi	r29, 0x00	; 0
     6b2:	8f cf       	rjmp	.-226    	; 0x5d2 <.L31>

000006b4 <.L9>:
            switch(current_sub_state){
     6b4:	01 30       	cpi	r16, 0x01	; 1
     6b6:	11 05       	cpc	r17, r1
     6b8:	49 f0       	breq	.+18     	; 0x6cc <.L17>

000006ba <.Loc.82>:
                    task_manager(backward_fast, standard_speed, standard_acceleration);
     6ba:	41 e0       	ldi	r20, 0x01	; 1
     6bc:	61 e0       	ldi	r22, 0x01	; 1
     6be:	83 e0       	ldi	r24, 0x03	; 3
     6c0:	90 e0       	ldi	r25, 0x00	; 0
     6c2:	0e 94 09 02 	call	0x412	; 0x412 <task_manager>

000006c6 <.LVL38>:
                    current_sub_state = running;
     6c6:	0e 2d       	mov	r16, r14
     6c8:	1f 2d       	mov	r17, r15

000006ca <.Loc.86>:
                    break;
     6ca:	83 cf       	rjmp	.-250    	; 0x5d2 <.L31>

000006cc <.L17>:
                    display_metal_and_non_metal(heavy_packages, light_packages);
     6cc:	b6 01       	movw	r22, r12
     6ce:	c5 01       	movw	r24, r10
     6d0:	0e 94 53 06 	call	0xca6	; 0xca6 <display_metal_and_non_metal>

000006d4 <.LVL40>:
                    if(USART1_receiveByte()==0x01){
     6d4:	0e 94 01 02 	call	0x402	; 0x402 <USART1_receiveByte>

000006d8 <.LVL41>:
     6d8:	81 30       	cpi	r24, 0x01	; 1
     6da:	09 f0       	breq	.+2      	; 0x6de <.Loc.91>

000006dc <L0^A>:
     6dc:	7a cf       	rjmp	.-268    	; 0x5d2 <.L31>

000006de <.Loc.91>:
                        current_sub_state = entry;
     6de:	08 2d       	mov	r16, r8

000006e0 <.Loc.92>:
     6e0:	19 2d       	mov	r17, r9

000006e2 <.Loc.93>:
                        current_state = end;
     6e2:	c3 2d       	mov	r28, r3

000006e4 <.Loc.94>:
     6e4:	d4 2d       	mov	r29, r4
     6e6:	75 cf       	rjmp	.-278    	; 0x5d2 <.L31>

000006e8 <.L18>:
                    display_metal_and_non_metal(heavy_packages, light_packages);
     6e8:	b6 01       	movw	r22, r12
     6ea:	c5 01       	movw	r24, r10
     6ec:	0e 94 53 06 	call	0xca6	; 0xca6 <display_metal_and_non_metal>

000006f0 <.LVL45>:
                    if(heavy_limit_switch_26()){
     6f0:	0e 94 31 01 	call	0x262	; 0x262 <heavy_limit_switch_26>

000006f4 <.LVL46>:
     6f4:	81 11       	cpse	r24, r1
     6f6:	13 c0       	rjmp	.+38     	; 0x71e <.L34>

000006f8 <.L20>:
                    if(gp_timer(5)){
     6f8:	85 e0       	ldi	r24, 0x05	; 5
     6fa:	90 e0       	ldi	r25, 0x00	; 0
     6fc:	0e 94 6b 02 	call	0x4d6	; 0x4d6 <gp_timer>

00000700 <.LVL48>:
     700:	88 23       	and	r24, r24
     702:	09 f4       	brne	.+2      	; 0x706 <.Loc.102>

00000704 <L0^A>:
     704:	66 cf       	rjmp	.-308    	; 0x5d2 <.L31>

00000706 <.Loc.102>:
                        task_manager(stop, standard_speed, standard_acceleration);
     706:	41 e0       	ldi	r20, 0x01	; 1
     708:	61 e0       	ldi	r22, 0x01	; 1
     70a:	84 e0       	ldi	r24, 0x04	; 4
     70c:	90 e0       	ldi	r25, 0x00	; 0
     70e:	0e 94 09 02 	call	0x412	; 0x412 <task_manager>

00000712 <.LVL49>:
                        light_packages++;
     712:	8f ef       	ldi	r24, 0xFF	; 255
     714:	c8 1a       	sub	r12, r24
     716:	d8 0a       	sbc	r13, r24

00000718 <.Loc.105>:
                        current_sub_state = exit;
     718:	06 2d       	mov	r16, r6
     71a:	17 2d       	mov	r17, r7
     71c:	5a cf       	rjmp	.-332    	; 0x5d2 <.L31>

0000071e <.L34>:
                        task_manager(stop, standard_speed, standard_acceleration);
     71e:	41 e0       	ldi	r20, 0x01	; 1
     720:	61 e0       	ldi	r22, 0x01	; 1
     722:	84 e0       	ldi	r24, 0x04	; 4
     724:	90 e0       	ldi	r25, 0x00	; 0
     726:	0e 94 09 02 	call	0x412	; 0x412 <task_manager>

0000072a <.LVL52>:
                        heavy_packages++;
     72a:	8f ef       	ldi	r24, 0xFF	; 255
     72c:	a8 1a       	sub	r10, r24
     72e:	b8 0a       	sbc	r11, r24

00000730 <.Loc.110>:
                        current_sub_state = exit;
     730:	06 2d       	mov	r16, r6
     732:	17 2d       	mov	r17, r7
     734:	e1 cf       	rjmp	.-62     	; 0x6f8 <.L20>

00000736 <.L19>:
                    display_metal_and_non_metal(heavy_packages, light_packages);
     736:	b6 01       	movw	r22, r12
     738:	c5 01       	movw	r24, r10
     73a:	0e 94 53 06 	call	0xca6	; 0xca6 <display_metal_and_non_metal>

0000073e <.LVL55>:
                    if(gp_timer(5)){
     73e:	85 e0       	ldi	r24, 0x05	; 5
     740:	90 e0       	ldi	r25, 0x00	; 0
     742:	0e 94 6b 02 	call	0x4d6	; 0x4d6 <gp_timer>

00000746 <.LVL56>:
     746:	88 23       	and	r24, r24
     748:	09 f4       	brne	.+2      	; 0x74c <.Loc.116>

0000074a <L0^A>:
     74a:	43 cf       	rjmp	.-378    	; 0x5d2 <.L31>

0000074c <.Loc.116>:
                        if(first_package_detected){
     74c:	55 20       	and	r5, r5
     74e:	09 f4       	brne	.+2      	; 0x752 <.Loc.118>

00000750 <L0^A>:
     750:	14 cf       	rjmp	.-472    	; 0x57a <.L27>

00000752 <.Loc.118>:
                            current_sub_state = entry;
     752:	08 2d       	mov	r16, r8

00000754 <.Loc.119>:
     754:	19 2d       	mov	r17, r9

00000756 <.Loc.120>:
                            current_state = reverse;
     756:	c5 e0       	ldi	r28, 0x05	; 5
     758:	d0 e0       	ldi	r29, 0x00	; 0

0000075a <.Loc.121>:
     75a:	3b cf       	rjmp	.-394    	; 0x5d2 <.L31>

0000075c <.L3>:
            switch(current_sub_state){
     75c:	01 30       	cpi	r16, 0x01	; 1
     75e:	11 05       	cpc	r17, r1
     760:	49 f0       	breq	.+18     	; 0x774 <.L21>

00000762 <.Loc.123>:
                    task_manager(stop, standard_speed, standard_acceleration);
     762:	41 e0       	ldi	r20, 0x01	; 1
     764:	61 e0       	ldi	r22, 0x01	; 1
     766:	84 e0       	ldi	r24, 0x04	; 4
     768:	90 e0       	ldi	r25, 0x00	; 0
     76a:	0e 94 09 02 	call	0x412	; 0x412 <task_manager>

0000076e <.LVL60>:
                    current_sub_state = running;
     76e:	0e 2d       	mov	r16, r14
     770:	1f 2d       	mov	r17, r15

00000772 <.Loc.127>:
                    break;
     772:	2f cf       	rjmp	.-418    	; 0x5d2 <.L31>

00000774 <.L21>:
                    display_turn();
     774:	0e 94 4d 07 	call	0xe9a	; 0xe9a <display_turn>

00000778 <.LVL62>:
                    if(USART1_receiveByte()==0x01){
     778:	0e 94 01 02 	call	0x402	; 0x402 <USART1_receiveByte>

0000077c <.LVL63>:
     77c:	81 30       	cpi	r24, 0x01	; 1
     77e:	09 f0       	breq	.+2      	; 0x782 <.Loc.132>

00000780 <L0^A>:
     780:	28 cf       	rjmp	.-432    	; 0x5d2 <.L31>

00000782 <.Loc.132>:
                        current_sub_state = entry;
     782:	08 2d       	mov	r16, r8

00000784 <.Loc.133>:
     784:	19 2d       	mov	r17, r9

00000786 <.Loc.134>:
                        current_state = weight_detection;
     786:	c3 e0       	ldi	r28, 0x03	; 3
     788:	d0 e0       	ldi	r29, 0x00	; 0

0000078a <.Loc.135>:
     78a:	23 cf       	rjmp	.-442    	; 0x5d2 <.L31>

0000078c <.L22>:
                    break;
                case running:
                    display_end();
     78c:	0e 94 db 07 	call	0xfb6	; 0xfb6 <display_end>

00000790 <.LVL67>:
                    break;
     790:	20 cf       	rjmp	.-448    	; 0x5d2 <.L31>

00000792 <music_init>:
#include "intermediate_control.h"

void music_init(void){
    // Start as high input to prevent noise from voltage fluctuations
    // Set to output in separate function
    DDR_BUZZ &= ~(1<<PIN_BUZZ);
     792:	6d 98       	cbi	0x0d, 5	; 13

00000794 <.Loc.3>:
    PORT_BUZZ |= (1<<PIN_BUZZ);
     794:	75 9a       	sbi	0x0e, 5	; 14

00000796 <.Loc.5>:
    // OC3C Mode 14, Fast PWM, prescaler 1
    // COM bits are set in separate function
    TCCR3A = (1<<WGM31);
     796:	82 e0       	ldi	r24, 0x02	; 2
     798:	80 93 90 00 	sts	0x0090, r24	; 0x800090 <__TEXT_REGION_LENGTH__+0x700090>

0000079c <.Loc.7>:
    TCCR3B = (1<<CS30) | (1<<WGM33) | (1<<WGM32);
     79c:	89 e1       	ldi	r24, 0x19	; 25
     79e:	80 93 91 00 	sts	0x0091, r24	; 0x800091 <__TEXT_REGION_LENGTH__+0x700091>

000007a2 <.Loc.10>:
    OCR3C = 65535*0.02;
     7a2:	8e e1       	ldi	r24, 0x1E	; 30
     7a4:	95 e0       	ldi	r25, 0x05	; 5
     7a6:	90 93 9d 00 	sts	0x009D, r25	; 0x80009d <__TEXT_REGION_LENGTH__+0x70009d>
     7aa:	80 93 9c 00 	sts	0x009C, r24	; 0x80009c <__TEXT_REGION_LENGTH__+0x70009c>

000007ae <.Loc.11>:
}
     7ae:	08 95       	ret

000007b0 <buzzer_enable>:
// Set buzzer to output and enable COM bits for PWM
void buzzer_enable(char input){
    if(input){
     7b0:	88 23       	and	r24, r24
     7b2:	39 f0       	breq	.+14     	; 0x7c2 <.L3>

000007b4 <.Loc.15>:
        DDR_BUZZ |= (1<<PIN_BUZZ);
     7b4:	6d 9a       	sbi	0x0d, 5	; 13

000007b6 <.Loc.17>:
        TCCR3A |= (1<<COM3C1) | (1<<COM3C0);
     7b6:	e0 e9       	ldi	r30, 0x90	; 144
     7b8:	f0 e0       	ldi	r31, 0x00	; 0
     7ba:	80 81       	ld	r24, Z

000007bc <.Loc.18>:
     7bc:	8c 60       	ori	r24, 0x0C	; 12
     7be:	80 83       	st	Z, r24
     7c0:	08 95       	ret

000007c2 <.L3>:
    }
    else{
        DDR_BUZZ &= ~(1<<PIN_BUZZ);
     7c2:	6d 98       	cbi	0x0d, 5	; 13

000007c4 <.Loc.21>:
        TCCR3A &= ~((1<<COM3C1) | (1<<COM3C0));
     7c4:	e0 e9       	ldi	r30, 0x90	; 144
     7c6:	f0 e0       	ldi	r31, 0x00	; 0
     7c8:	80 81       	ld	r24, Z

000007ca <.Loc.23>:
     7ca:	83 7f       	andi	r24, 0xF3	; 243
     7cc:	80 83       	st	Z, r24

000007ce <.Loc.24>:
    }
}
     7ce:	08 95       	ret

000007d0 <hz_to_icr_value>:

int hz_to_icr_value(int hz){
    return (16000000/hz);
     7d0:	9c 01       	movw	r18, r24
     7d2:	99 0f       	add	r25, r25
     7d4:	44 0b       	sbc	r20, r20
     7d6:	55 0b       	sbc	r21, r21
     7d8:	60 e0       	ldi	r22, 0x00	; 0
     7da:	74 e2       	ldi	r23, 0x24	; 36
     7dc:	84 ef       	ldi	r24, 0xF4	; 244
     7de:	90 e0       	ldi	r25, 0x00	; 0
     7e0:	0e 94 50 08 	call	0x10a0	; 0x10a0 <__divmodsi4>

000007e4 <.Loc.28>:
}
     7e4:	c9 01       	movw	r24, r18

000007e6 <.Loc.29>:
     7e6:	08 95       	ret

000007e8 <play_note>:

void play_note(int note, int beats, int state, int *note_num){
     7e8:	ef 92       	push	r14
     7ea:	ff 92       	push	r15
     7ec:	0f 93       	push	r16
     7ee:	1f 93       	push	r17
     7f0:	cf 93       	push	r28
     7f2:	df 93       	push	r29
     7f4:	c8 2f       	mov	r28, r24
     7f6:	d9 2f       	mov	r29, r25
     7f8:	cb 01       	movw	r24, r22

000007fa <.Loc.32>:
     7fa:	e4 2e       	mov	r14, r20
     7fc:	f5 2e       	mov	r15, r21
     7fe:	02 2f       	mov	r16, r18
     800:	13 2f       	mov	r17, r19

00000802 <.Loc.33>:
    // Use GP timer to time beats
    if(!gp_timer(beats)){
     802:	0e 94 6b 02 	call	0x4d6	; 0x4d6 <gp_timer>

00000806 <.LVL8>:
     806:	81 11       	cpse	r24, r1
     808:	22 c0       	rjmp	.+68     	; 0x84e <.L7>

0000080a <.LBB5>:
    return (16000000/hz);
     80a:	9e 01       	movw	r18, r28
     80c:	dd 0f       	add	r29, r29
     80e:	44 0b       	sbc	r20, r20
     810:	55 0b       	sbc	r21, r21
     812:	60 e0       	ldi	r22, 0x00	; 0
     814:	74 e2       	ldi	r23, 0x24	; 36
     816:	84 ef       	ldi	r24, 0xF4	; 244
     818:	90 e0       	ldi	r25, 0x00	; 0
     81a:	0e 94 50 08 	call	0x10a0	; 0x10a0 <__divmodsi4>

0000081e <.Loc.43>:
        // Set frequency and volume
        int ICR_value = (hz_to_icr_value(note));
        int OCR_value = 65535*0.01;
        ICR3 =  ICR_value;
     81e:	30 93 97 00 	sts	0x0097, r19	; 0x800097 <__TEXT_REGION_LENGTH__+0x700097>
     822:	20 93 96 00 	sts	0x0096, r18	; 0x800096 <__TEXT_REGION_LENGTH__+0x700096>

00000826 <.Loc.44>:
        OCR3C = OCR_value*state;
     826:	2f e8       	ldi	r18, 0x8F	; 143
     828:	32 e0       	ldi	r19, 0x02	; 2
     82a:	e2 9e       	mul	r14, r18
     82c:	c0 01       	movw	r24, r0
     82e:	e3 9e       	mul	r14, r19
     830:	90 0d       	add	r25, r0
     832:	f2 9e       	mul	r15, r18
     834:	90 0d       	add	r25, r0
     836:	11 24       	eor	r1, r1

00000838 <.Loc.46>:
     838:	90 93 9d 00 	sts	0x009D, r25	; 0x80009d <__TEXT_REGION_LENGTH__+0x70009d>
     83c:	80 93 9c 00 	sts	0x009C, r24	; 0x80009c <__TEXT_REGION_LENGTH__+0x70009c>

00000840 <.L6>:
    }
    // Next note
    else{
        (*note_num)++;
    }
}
     840:	df 91       	pop	r29
     842:	cf 91       	pop	r28
     844:	1f 91       	pop	r17
     846:	0f 91       	pop	r16
     848:	ff 90       	pop	r15
     84a:	ef 90       	pop	r14
     84c:	08 95       	ret

0000084e <.L7>:
        (*note_num)++;
     84e:	f8 01       	movw	r30, r16
     850:	80 81       	ld	r24, Z
     852:	91 81       	ldd	r25, Z+1	; 0x01
     854:	01 96       	adiw	r24, 0x01	; 1
     856:	91 83       	std	Z+1, r25	; 0x01
     858:	80 83       	st	Z, r24

0000085a <.Loc.51>:
}
     85a:	f2 cf       	rjmp	.-28     	; 0x840 <.L6>

0000085c <play_beep>:
// Play multiple notes with switch
char play_beep(){
    static int note_number = 0;
    if(!note_number){
     85c:	80 91 6a 02 	lds	r24, 0x026A	; 0x80026a <note_number.2>
     860:	90 91 6b 02 	lds	r25, 0x026B	; 0x80026b <note_number.2+0x1>
     864:	89 2b       	or	r24, r25
     866:	d9 f0       	breq	.+54     	; 0x89e <.L19>

00000868 <.L10>:
        buzzer_enable(1);
    }
    switch(note_number){
     868:	80 91 6a 02 	lds	r24, 0x026A	; 0x80026a <note_number.2>
     86c:	90 91 6b 02 	lds	r25, 0x026B	; 0x80026b <note_number.2+0x1>
     870:	83 30       	cpi	r24, 0x03	; 3
     872:	91 05       	cpc	r25, r1
     874:	09 f4       	brne	.+2      	; 0x878 <L0^A+0x2>

00000876 <L0^A>:
     876:	43 c0       	rjmp	.+134    	; 0x8fe <.L11>
     878:	34 f5       	brge	.+76     	; 0x8c6 <.L12>
     87a:	81 30       	cpi	r24, 0x01	; 1
     87c:	91 05       	cpc	r25, r1
     87e:	99 f1       	breq	.+102    	; 0x8e6 <.L13>
     880:	82 30       	cpi	r24, 0x02	; 2
     882:	91 05       	cpc	r25, r1
     884:	81 f4       	brne	.+32     	; 0x8a6 <.L20>

00000886 <.Loc.57>:
        break;
    case 1:
        play_note(NOTE_3, 1, 0, &note_number);
        break;
    case 2:
        play_note(NOTE_1, 1, 10, &note_number);
     886:	2a e6       	ldi	r18, 0x6A	; 106
     888:	32 e0       	ldi	r19, 0x02	; 2
     88a:	4a e0       	ldi	r20, 0x0A	; 10
     88c:	50 e0       	ldi	r21, 0x00	; 0
     88e:	61 e0       	ldi	r22, 0x01	; 1
     890:	70 e0       	ldi	r23, 0x00	; 0
     892:	8a e6       	ldi	r24, 0x6A	; 106
     894:	91 e0       	ldi	r25, 0x01	; 1
     896:	0e 94 f4 03 	call	0x7e8	; 0x7e8 <play_note>

0000089a <.LVL11>:
        buzzer_enable(0);
        note_number = 0;
        return 0;
        break;
    }
    return 1;
     89a:	81 e0       	ldi	r24, 0x01	; 1

0000089c <.Loc.60>:
        break;
     89c:	08 95       	ret

0000089e <.L19>:
        buzzer_enable(1);
     89e:	81 e0       	ldi	r24, 0x01	; 1
     8a0:	0e 94 d8 03 	call	0x7b0	; 0x7b0 <buzzer_enable>

000008a4 <.LVL12>:
     8a4:	e1 cf       	rjmp	.-62     	; 0x868 <.L10>

000008a6 <.L20>:
    switch(note_number){
     8a6:	89 2b       	or	r24, r25
     8a8:	61 f4       	brne	.+24     	; 0x8c2 <.L21>

000008aa <.Loc.63>:
        play_note(NOTE_5, 1, 10, &note_number);
     8aa:	2a e6       	ldi	r18, 0x6A	; 106
     8ac:	32 e0       	ldi	r19, 0x02	; 2
     8ae:	4a e0       	ldi	r20, 0x0A	; 10
     8b0:	50 e0       	ldi	r21, 0x00	; 0
     8b2:	61 e0       	ldi	r22, 0x01	; 1
     8b4:	70 e0       	ldi	r23, 0x00	; 0
     8b6:	8c ee       	ldi	r24, 0xEC	; 236
     8b8:	91 e0       	ldi	r25, 0x01	; 1
     8ba:	0e 94 f4 03 	call	0x7e8	; 0x7e8 <play_note>

000008be <.LVL13>:
    return 1;
     8be:	81 e0       	ldi	r24, 0x01	; 1

000008c0 <.Loc.66>:
        break;
     8c0:	08 95       	ret

000008c2 <.L21>:
    switch(note_number){
     8c2:	81 e0       	ldi	r24, 0x01	; 1
     8c4:	08 95       	ret

000008c6 <.L12>:
     8c6:	84 30       	cpi	r24, 0x04	; 4
     8c8:	91 05       	cpc	r25, r1
     8ca:	29 f1       	breq	.+74     	; 0x916 <.L17>
     8cc:	05 97       	sbiw	r24, 0x05	; 5
     8ce:	49 f4       	brne	.+18     	; 0x8e2 <.L22>

000008d0 <.Loc.68>:
        buzzer_enable(0);
     8d0:	80 e0       	ldi	r24, 0x00	; 0
     8d2:	0e 94 d8 03 	call	0x7b0	; 0x7b0 <buzzer_enable>

000008d6 <.LVL14>:
        note_number = 0;
     8d6:	10 92 6b 02 	sts	0x026B, r1	; 0x80026b <note_number.2+0x1>
     8da:	10 92 6a 02 	sts	0x026A, r1	; 0x80026a <note_number.2>

000008de <.Loc.71>:
        return 0;
     8de:	80 e0       	ldi	r24, 0x00	; 0

000008e0 <.Loc.73>:
}
     8e0:	08 95       	ret

000008e2 <.L22>:
    switch(note_number){
     8e2:	81 e0       	ldi	r24, 0x01	; 1
     8e4:	08 95       	ret

000008e6 <.L13>:
        play_note(NOTE_3, 1, 0, &note_number);
     8e6:	2a e6       	ldi	r18, 0x6A	; 106
     8e8:	32 e0       	ldi	r19, 0x02	; 2
     8ea:	40 e0       	ldi	r20, 0x00	; 0
     8ec:	50 e0       	ldi	r21, 0x00	; 0
     8ee:	61 e0       	ldi	r22, 0x01	; 1
     8f0:	70 e0       	ldi	r23, 0x00	; 0
     8f2:	8e ea       	ldi	r24, 0xAE	; 174
     8f4:	91 e0       	ldi	r25, 0x01	; 1
     8f6:	0e 94 f4 03 	call	0x7e8	; 0x7e8 <play_note>

000008fa <.LVL15>:
    return 1;
     8fa:	81 e0       	ldi	r24, 0x01	; 1

000008fc <.Loc.78>:
        break;
     8fc:	08 95       	ret

000008fe <.L11>:
        play_note(NOTE_8, 1, 10, &note_number);
     8fe:	2a e6       	ldi	r18, 0x6A	; 106
     900:	32 e0       	ldi	r19, 0x02	; 2
     902:	4a e0       	ldi	r20, 0x0A	; 10
     904:	50 e0       	ldi	r21, 0x00	; 0
     906:	61 e0       	ldi	r22, 0x01	; 1
     908:	70 e0       	ldi	r23, 0x00	; 0
     90a:	8f e6       	ldi	r24, 0x6F	; 111
     90c:	92 e0       	ldi	r25, 0x02	; 2
     90e:	0e 94 f4 03 	call	0x7e8	; 0x7e8 <play_note>

00000912 <.LVL16>:
    return 1;
     912:	81 e0       	ldi	r24, 0x01	; 1

00000914 <.Loc.82>:
        break;
     914:	08 95       	ret

00000916 <.L17>:
        play_note(NOTE_8, 1, 0, &note_number);
     916:	2a e6       	ldi	r18, 0x6A	; 106
     918:	32 e0       	ldi	r19, 0x02	; 2
     91a:	40 e0       	ldi	r20, 0x00	; 0
     91c:	50 e0       	ldi	r21, 0x00	; 0
     91e:	61 e0       	ldi	r22, 0x01	; 1
     920:	70 e0       	ldi	r23, 0x00	; 0
     922:	8f e6       	ldi	r24, 0x6F	; 111
     924:	92 e0       	ldi	r25, 0x02	; 2
     926:	0e 94 f4 03 	call	0x7e8	; 0x7e8 <play_note>

0000092a <.LVL17>:
    return 1;
     92a:	81 e0       	ldi	r24, 0x01	; 1

0000092c <.Loc.86>:
        break;
     92c:	08 95       	ret

0000092e <play_beep_sad>:
// Slight variation on beep
char play_beep_sad(){
    static int note_number = 0;
    if(!note_number){
     92e:	80 91 68 02 	lds	r24, 0x0268	; 0x800268 <note_number.1>
     932:	90 91 69 02 	lds	r25, 0x0269	; 0x800269 <note_number.1+0x1>
     936:	89 2b       	or	r24, r25
     938:	d9 f0       	breq	.+54     	; 0x970 <.L33>

0000093a <.L24>:
        buzzer_enable(1);
    }
    switch(note_number){
     93a:	80 91 68 02 	lds	r24, 0x0268	; 0x800268 <note_number.1>
     93e:	90 91 69 02 	lds	r25, 0x0269	; 0x800269 <note_number.1+0x1>
     942:	83 30       	cpi	r24, 0x03	; 3
     944:	91 05       	cpc	r25, r1
     946:	09 f4       	brne	.+2      	; 0x94a <L0^A+0x2>

00000948 <L0^A>:
     948:	43 c0       	rjmp	.+134    	; 0x9d0 <.L25>
     94a:	34 f5       	brge	.+76     	; 0x998 <.L26>
     94c:	81 30       	cpi	r24, 0x01	; 1
     94e:	91 05       	cpc	r25, r1
     950:	99 f1       	breq	.+102    	; 0x9b8 <.L27>
     952:	82 30       	cpi	r24, 0x02	; 2
     954:	91 05       	cpc	r25, r1
     956:	81 f4       	brne	.+32     	; 0x978 <.L34>

00000958 <.Loc.92>:
        break;
    case 1:
        play_note(NOTE_3, 2, 0, &note_number);
        break;
    case 2:
        play_note(NOTE_2, 3, 1, &note_number);
     958:	28 e6       	ldi	r18, 0x68	; 104
     95a:	32 e0       	ldi	r19, 0x02	; 2
     95c:	41 e0       	ldi	r20, 0x01	; 1
     95e:	50 e0       	ldi	r21, 0x00	; 0
     960:	63 e0       	ldi	r22, 0x03	; 3
     962:	70 e0       	ldi	r23, 0x00	; 0
     964:	8a e8       	ldi	r24, 0x8A	; 138
     966:	91 e0       	ldi	r25, 0x01	; 1
     968:	0e 94 f4 03 	call	0x7e8	; 0x7e8 <play_note>

0000096c <.LVL18>:
        buzzer_enable(0);
        note_number = 0;
        return 0;
        break;
    }
    return 1;
     96c:	81 e0       	ldi	r24, 0x01	; 1

0000096e <.Loc.95>:
        break;
     96e:	08 95       	ret

00000970 <.L33>:
        buzzer_enable(1);
     970:	81 e0       	ldi	r24, 0x01	; 1
     972:	0e 94 d8 03 	call	0x7b0	; 0x7b0 <buzzer_enable>

00000976 <.LVL19>:
     976:	e1 cf       	rjmp	.-62     	; 0x93a <.L24>

00000978 <.L34>:
    switch(note_number){
     978:	89 2b       	or	r24, r25
     97a:	61 f4       	brne	.+24     	; 0x994 <.L35>

0000097c <.Loc.98>:
        play_note(NOTE_3, 3, 1, &note_number);
     97c:	28 e6       	ldi	r18, 0x68	; 104
     97e:	32 e0       	ldi	r19, 0x02	; 2
     980:	41 e0       	ldi	r20, 0x01	; 1
     982:	50 e0       	ldi	r21, 0x00	; 0
     984:	63 e0       	ldi	r22, 0x03	; 3
     986:	70 e0       	ldi	r23, 0x00	; 0
     988:	8e ea       	ldi	r24, 0xAE	; 174
     98a:	91 e0       	ldi	r25, 0x01	; 1
     98c:	0e 94 f4 03 	call	0x7e8	; 0x7e8 <play_note>

00000990 <.LVL20>:
    return 1;
     990:	81 e0       	ldi	r24, 0x01	; 1

00000992 <.Loc.101>:
        break;
     992:	08 95       	ret

00000994 <.L35>:
    switch(note_number){
     994:	81 e0       	ldi	r24, 0x01	; 1
     996:	08 95       	ret

00000998 <.L26>:
     998:	84 30       	cpi	r24, 0x04	; 4
     99a:	91 05       	cpc	r25, r1
     99c:	29 f1       	breq	.+74     	; 0x9e8 <.L31>
     99e:	05 97       	sbiw	r24, 0x05	; 5
     9a0:	49 f4       	brne	.+18     	; 0x9b4 <.L36>

000009a2 <.Loc.103>:
        buzzer_enable(0);
     9a2:	80 e0       	ldi	r24, 0x00	; 0
     9a4:	0e 94 d8 03 	call	0x7b0	; 0x7b0 <buzzer_enable>

000009a8 <.LVL21>:
        note_number = 0;
     9a8:	10 92 69 02 	sts	0x0269, r1	; 0x800269 <note_number.1+0x1>
     9ac:	10 92 68 02 	sts	0x0268, r1	; 0x800268 <note_number.1>

000009b0 <.Loc.106>:
        return 0;
     9b0:	80 e0       	ldi	r24, 0x00	; 0

000009b2 <.Loc.108>:
}
     9b2:	08 95       	ret

000009b4 <.L36>:
    switch(note_number){
     9b4:	81 e0       	ldi	r24, 0x01	; 1
     9b6:	08 95       	ret

000009b8 <.L27>:
        play_note(NOTE_3, 2, 0, &note_number);
     9b8:	28 e6       	ldi	r18, 0x68	; 104
     9ba:	32 e0       	ldi	r19, 0x02	; 2
     9bc:	40 e0       	ldi	r20, 0x00	; 0
     9be:	50 e0       	ldi	r21, 0x00	; 0
     9c0:	62 e0       	ldi	r22, 0x02	; 2
     9c2:	70 e0       	ldi	r23, 0x00	; 0
     9c4:	8e ea       	ldi	r24, 0xAE	; 174
     9c6:	91 e0       	ldi	r25, 0x01	; 1
     9c8:	0e 94 f4 03 	call	0x7e8	; 0x7e8 <play_note>

000009cc <.LVL22>:
    return 1;
     9cc:	81 e0       	ldi	r24, 0x01	; 1

000009ce <.Loc.113>:
        break;
     9ce:	08 95       	ret

000009d0 <.L25>:
        play_note(NOTE_1, 7, 1, &note_number);
     9d0:	28 e6       	ldi	r18, 0x68	; 104
     9d2:	32 e0       	ldi	r19, 0x02	; 2
     9d4:	41 e0       	ldi	r20, 0x01	; 1
     9d6:	50 e0       	ldi	r21, 0x00	; 0
     9d8:	67 e0       	ldi	r22, 0x07	; 7
     9da:	70 e0       	ldi	r23, 0x00	; 0
     9dc:	8a e6       	ldi	r24, 0x6A	; 106
     9de:	91 e0       	ldi	r25, 0x01	; 1
     9e0:	0e 94 f4 03 	call	0x7e8	; 0x7e8 <play_note>

000009e4 <.LVL23>:
    return 1;
     9e4:	81 e0       	ldi	r24, 0x01	; 1

000009e6 <.Loc.117>:
        break;
     9e6:	08 95       	ret

000009e8 <.L31>:
        play_note(NOTE_8, 30, 0, &note_number);
     9e8:	28 e6       	ldi	r18, 0x68	; 104
     9ea:	32 e0       	ldi	r19, 0x02	; 2
     9ec:	40 e0       	ldi	r20, 0x00	; 0
     9ee:	50 e0       	ldi	r21, 0x00	; 0
     9f0:	6e e1       	ldi	r22, 0x1E	; 30
     9f2:	70 e0       	ldi	r23, 0x00	; 0
     9f4:	8f e6       	ldi	r24, 0x6F	; 111
     9f6:	92 e0       	ldi	r25, 0x02	; 2
     9f8:	0e 94 f4 03 	call	0x7e8	; 0x7e8 <play_note>

000009fc <.LVL24>:
    return 1;
     9fc:	81 e0       	ldi	r24, 0x01	; 1

000009fe <.Loc.121>:
        break;
     9fe:	08 95       	ret

00000a00 <play_song>:
// Sounds like old nokia
char play_song(){
    static int note_number = 0;
    if(!note_number){
     a00:	80 91 66 02 	lds	r24, 0x0266	; 0x800266 <note_number.0>
     a04:	90 91 67 02 	lds	r25, 0x0267	; 0x800267 <note_number.0+0x1>
     a08:	89 2b       	or	r24, r25
     a0a:	71 f0       	breq	.+28     	; 0xa28 <.L57>

00000a0c <.L38>:
        buzzer_enable(1);
    }
    switch(note_number){
     a0c:	e0 91 66 02 	lds	r30, 0x0266	; 0x800266 <note_number.0>
     a10:	f0 91 67 02 	lds	r31, 0x0267	; 0x800267 <note_number.0+0x1>
     a14:	ef 30       	cpi	r30, 0x0F	; 15
     a16:	f1 05       	cpc	r31, r1
     a18:	08 f0       	brcs	.+2      	; 0xa1c <L0^A+0x2>

00000a1a <L0^A>:
     a1a:	bb c0       	rjmp	.+374    	; 0xb92 <.L56>
     a1c:	88 27       	eor	r24, r24
     a1e:	ea 56       	subi	r30, 0x6A	; 106
     a20:	f7 4f       	sbci	r31, 0xF7	; 247
     a22:	8f 4f       	sbci	r24, 0xFF	; 255
     a24:	0c 94 6f 08 	jmp	0x10de	; 0x10de <__tablejump2__>

00000a28 <.L57>:
        buzzer_enable(1);
     a28:	81 e0       	ldi	r24, 0x01	; 1
     a2a:	0e 94 d8 03 	call	0x7b0	; 0x7b0 <buzzer_enable>

00000a2e <.LVL25>:
     a2e:	ee cf       	rjmp	.-36     	; 0xa0c <.L38>

00000a30 <.L55>:
    case 0:
        play_note(NOTE_8, 1, 1, &note_number);
     a30:	26 e6       	ldi	r18, 0x66	; 102
     a32:	32 e0       	ldi	r19, 0x02	; 2
     a34:	41 e0       	ldi	r20, 0x01	; 1
     a36:	50 e0       	ldi	r21, 0x00	; 0
     a38:	61 e0       	ldi	r22, 0x01	; 1
     a3a:	70 e0       	ldi	r23, 0x00	; 0
     a3c:	8f e6       	ldi	r24, 0x6F	; 111
     a3e:	92 e0       	ldi	r25, 0x02	; 2
     a40:	0e 94 f4 03 	call	0x7e8	; 0x7e8 <play_note>

00000a44 <.LVL26>:
        buzzer_enable(0);
        note_number = 0;
        return 0;
        break;
    }
    return 1;
     a44:	81 e0       	ldi	r24, 0x01	; 1

00000a46 <.Loc.131>:
        break;
     a46:	08 95       	ret

00000a48 <.L54>:
        play_note(NOTE_7, 1, 1, &note_number);
     a48:	26 e6       	ldi	r18, 0x66	; 102
     a4a:	32 e0       	ldi	r19, 0x02	; 2
     a4c:	41 e0       	ldi	r20, 0x01	; 1
     a4e:	50 e0       	ldi	r21, 0x00	; 0
     a50:	61 e0       	ldi	r22, 0x01	; 1
     a52:	70 e0       	ldi	r23, 0x00	; 0
     a54:	82 e5       	ldi	r24, 0x52	; 82
     a56:	92 e0       	ldi	r25, 0x02	; 2
     a58:	0e 94 f4 03 	call	0x7e8	; 0x7e8 <play_note>

00000a5c <.LVL27>:
    return 1;
     a5c:	81 e0       	ldi	r24, 0x01	; 1

00000a5e <.Loc.135>:
        break;
     a5e:	08 95       	ret

00000a60 <.L53>:
        play_note(NOTE_3, 2, 1, &note_number);
     a60:	26 e6       	ldi	r18, 0x66	; 102
     a62:	32 e0       	ldi	r19, 0x02	; 2
     a64:	41 e0       	ldi	r20, 0x01	; 1
     a66:	50 e0       	ldi	r21, 0x00	; 0
     a68:	62 e0       	ldi	r22, 0x02	; 2
     a6a:	70 e0       	ldi	r23, 0x00	; 0
     a6c:	8e ea       	ldi	r24, 0xAE	; 174
     a6e:	91 e0       	ldi	r25, 0x01	; 1
     a70:	0e 94 f4 03 	call	0x7e8	; 0x7e8 <play_note>

00000a74 <.LVL28>:
    return 1;
     a74:	81 e0       	ldi	r24, 0x01	; 1

00000a76 <.Loc.139>:
        break;
     a76:	08 95       	ret

00000a78 <.L52>:
        play_note(NOTE_4, 2, 1, &note_number);
     a78:	26 e6       	ldi	r18, 0x66	; 102
     a7a:	32 e0       	ldi	r19, 0x02	; 2
     a7c:	41 e0       	ldi	r20, 0x01	; 1
     a7e:	50 e0       	ldi	r21, 0x00	; 0
     a80:	62 e0       	ldi	r22, 0x02	; 2
     a82:	70 e0       	ldi	r23, 0x00	; 0
     a84:	81 ec       	ldi	r24, 0xC1	; 193
     a86:	91 e0       	ldi	r25, 0x01	; 1
     a88:	0e 94 f4 03 	call	0x7e8	; 0x7e8 <play_note>

00000a8c <.LVL29>:
    return 1;
     a8c:	81 e0       	ldi	r24, 0x01	; 1

00000a8e <.Loc.143>:
        break;
     a8e:	08 95       	ret

00000a90 <.L51>:
        play_note(NOTE_7, 1, 1, &note_number);
     a90:	26 e6       	ldi	r18, 0x66	; 102
     a92:	32 e0       	ldi	r19, 0x02	; 2
     a94:	41 e0       	ldi	r20, 0x01	; 1
     a96:	50 e0       	ldi	r21, 0x00	; 0
     a98:	61 e0       	ldi	r22, 0x01	; 1
     a9a:	70 e0       	ldi	r23, 0x00	; 0
     a9c:	82 e5       	ldi	r24, 0x52	; 82
     a9e:	92 e0       	ldi	r25, 0x02	; 2
     aa0:	0e 94 f4 03 	call	0x7e8	; 0x7e8 <play_note>

00000aa4 <.LVL30>:
    return 1;
     aa4:	81 e0       	ldi	r24, 0x01	; 1

00000aa6 <.Loc.147>:
        break;
     aa6:	08 95       	ret

00000aa8 <.L50>:
        play_note(NOTE_6, 1, 1, &note_number);
     aa8:	26 e6       	ldi	r18, 0x66	; 102
     aaa:	32 e0       	ldi	r19, 0x02	; 2
     aac:	41 e0       	ldi	r20, 0x01	; 1
     aae:	50 e0       	ldi	r21, 0x00	; 0
     ab0:	61 e0       	ldi	r22, 0x01	; 1
     ab2:	70 e0       	ldi	r23, 0x00	; 0
     ab4:	8c e1       	ldi	r24, 0x1C	; 28
     ab6:	92 e0       	ldi	r25, 0x02	; 2
     ab8:	0e 94 f4 03 	call	0x7e8	; 0x7e8 <play_note>

00000abc <.LVL31>:
    return 1;
     abc:	81 e0       	ldi	r24, 0x01	; 1

00000abe <.Loc.151>:
        break;
     abe:	08 95       	ret

00000ac0 <.L49>:
        play_note(NOTE_1, 2, 1, &note_number);
     ac0:	26 e6       	ldi	r18, 0x66	; 102
     ac2:	32 e0       	ldi	r19, 0x02	; 2
     ac4:	41 e0       	ldi	r20, 0x01	; 1
     ac6:	50 e0       	ldi	r21, 0x00	; 0
     ac8:	62 e0       	ldi	r22, 0x02	; 2
     aca:	70 e0       	ldi	r23, 0x00	; 0
     acc:	8a e6       	ldi	r24, 0x6A	; 106
     ace:	91 e0       	ldi	r25, 0x01	; 1
     ad0:	0e 94 f4 03 	call	0x7e8	; 0x7e8 <play_note>

00000ad4 <.LVL32>:
    return 1;
     ad4:	81 e0       	ldi	r24, 0x01	; 1

00000ad6 <.Loc.155>:
        break;
     ad6:	08 95       	ret

00000ad8 <.L48>:
        play_note(NOTE_2, 2, 1, &note_number);
     ad8:	26 e6       	ldi	r18, 0x66	; 102
     ada:	32 e0       	ldi	r19, 0x02	; 2
     adc:	41 e0       	ldi	r20, 0x01	; 1
     ade:	50 e0       	ldi	r21, 0x00	; 0
     ae0:	62 e0       	ldi	r22, 0x02	; 2
     ae2:	70 e0       	ldi	r23, 0x00	; 0
     ae4:	8a e8       	ldi	r24, 0x8A	; 138
     ae6:	91 e0       	ldi	r25, 0x01	; 1
     ae8:	0e 94 f4 03 	call	0x7e8	; 0x7e8 <play_note>

00000aec <.LVL33>:
    return 1;
     aec:	81 e0       	ldi	r24, 0x01	; 1

00000aee <.Loc.159>:
        break;
     aee:	08 95       	ret

00000af0 <.L47>:
        play_note(NOTE_6, 1, 1, &note_number);
     af0:	26 e6       	ldi	r18, 0x66	; 102
     af2:	32 e0       	ldi	r19, 0x02	; 2
     af4:	41 e0       	ldi	r20, 0x01	; 1
     af6:	50 e0       	ldi	r21, 0x00	; 0
     af8:	61 e0       	ldi	r22, 0x01	; 1
     afa:	70 e0       	ldi	r23, 0x00	; 0
     afc:	8c e1       	ldi	r24, 0x1C	; 28
     afe:	92 e0       	ldi	r25, 0x02	; 2
     b00:	0e 94 f4 03 	call	0x7e8	; 0x7e8 <play_note>

00000b04 <.LVL34>:
    return 1;
     b04:	81 e0       	ldi	r24, 0x01	; 1

00000b06 <.Loc.163>:
        break;
     b06:	08 95       	ret

00000b08 <.L46>:
        play_note(NOTE_5, 1, 1, &note_number);
     b08:	26 e6       	ldi	r18, 0x66	; 102
     b0a:	32 e0       	ldi	r19, 0x02	; 2
     b0c:	41 e0       	ldi	r20, 0x01	; 1
     b0e:	50 e0       	ldi	r21, 0x00	; 0
     b10:	61 e0       	ldi	r22, 0x01	; 1
     b12:	70 e0       	ldi	r23, 0x00	; 0
     b14:	8c ee       	ldi	r24, 0xEC	; 236
     b16:	91 e0       	ldi	r25, 0x01	; 1
     b18:	0e 94 f4 03 	call	0x7e8	; 0x7e8 <play_note>

00000b1c <.LVL35>:
    return 1;
     b1c:	81 e0       	ldi	r24, 0x01	; 1

00000b1e <.Loc.167>:
        break;
     b1e:	08 95       	ret

00000b20 <.L45>:
        play_note(NOTE_1, 2, 1, &note_number);
     b20:	26 e6       	ldi	r18, 0x66	; 102
     b22:	32 e0       	ldi	r19, 0x02	; 2
     b24:	41 e0       	ldi	r20, 0x01	; 1
     b26:	50 e0       	ldi	r21, 0x00	; 0
     b28:	62 e0       	ldi	r22, 0x02	; 2
     b2a:	70 e0       	ldi	r23, 0x00	; 0
     b2c:	8a e6       	ldi	r24, 0x6A	; 106
     b2e:	91 e0       	ldi	r25, 0x01	; 1
     b30:	0e 94 f4 03 	call	0x7e8	; 0x7e8 <play_note>

00000b34 <.LVL36>:
    return 1;
     b34:	81 e0       	ldi	r24, 0x01	; 1

00000b36 <.Loc.171>:
        break;
     b36:	08 95       	ret

00000b38 <.L44>:
        play_note(NOTE_2, 2, 1, &note_number);
     b38:	26 e6       	ldi	r18, 0x66	; 102
     b3a:	32 e0       	ldi	r19, 0x02	; 2
     b3c:	41 e0       	ldi	r20, 0x01	; 1
     b3e:	50 e0       	ldi	r21, 0x00	; 0
     b40:	62 e0       	ldi	r22, 0x02	; 2
     b42:	70 e0       	ldi	r23, 0x00	; 0
     b44:	8a e8       	ldi	r24, 0x8A	; 138
     b46:	91 e0       	ldi	r25, 0x01	; 1
     b48:	0e 94 f4 03 	call	0x7e8	; 0x7e8 <play_note>

00000b4c <.LVL37>:
    return 1;
     b4c:	81 e0       	ldi	r24, 0x01	; 1

00000b4e <.Loc.175>:
        break;
     b4e:	08 95       	ret

00000b50 <.L43>:
        play_note(NOTE_3, 5, 1, &note_number);
     b50:	26 e6       	ldi	r18, 0x66	; 102
     b52:	32 e0       	ldi	r19, 0x02	; 2
     b54:	41 e0       	ldi	r20, 0x01	; 1
     b56:	50 e0       	ldi	r21, 0x00	; 0
     b58:	65 e0       	ldi	r22, 0x05	; 5
     b5a:	70 e0       	ldi	r23, 0x00	; 0
     b5c:	8e ea       	ldi	r24, 0xAE	; 174
     b5e:	91 e0       	ldi	r25, 0x01	; 1
     b60:	0e 94 f4 03 	call	0x7e8	; 0x7e8 <play_note>

00000b64 <.LVL38>:
    return 1;
     b64:	81 e0       	ldi	r24, 0x01	; 1

00000b66 <.Loc.179>:
        break;
     b66:	08 95       	ret

00000b68 <.L42>:
        play_note(NOTE_1, 5, 0, &note_number);
     b68:	26 e6       	ldi	r18, 0x66	; 102
     b6a:	32 e0       	ldi	r19, 0x02	; 2
     b6c:	40 e0       	ldi	r20, 0x00	; 0
     b6e:	50 e0       	ldi	r21, 0x00	; 0
     b70:	65 e0       	ldi	r22, 0x05	; 5
     b72:	70 e0       	ldi	r23, 0x00	; 0
     b74:	8a e6       	ldi	r24, 0x6A	; 106
     b76:	91 e0       	ldi	r25, 0x01	; 1
     b78:	0e 94 f4 03 	call	0x7e8	; 0x7e8 <play_note>

00000b7c <.LVL39>:
    return 1;
     b7c:	81 e0       	ldi	r24, 0x01	; 1

00000b7e <.Loc.183>:
        break;
     b7e:	08 95       	ret

00000b80 <.L40>:
        buzzer_enable(0);
     b80:	80 e0       	ldi	r24, 0x00	; 0
     b82:	0e 94 d8 03 	call	0x7b0	; 0x7b0 <buzzer_enable>

00000b86 <.LVL40>:
        note_number = 0;
     b86:	10 92 67 02 	sts	0x0267, r1	; 0x800267 <note_number.0+0x1>
     b8a:	10 92 66 02 	sts	0x0266, r1	; 0x800266 <note_number.0>

00000b8e <.Loc.187>:
        return 0;
     b8e:	80 e0       	ldi	r24, 0x00	; 0
     b90:	08 95       	ret

00000b92 <.L56>:
    switch(note_number){
     b92:	81 e0       	ldi	r24, 0x01	; 1

00000b94 <.Loc.190>:
}
     b94:	08 95       	ret

00000b96 <display_start>:
     b96:	ea e0       	ldi	r30, 0x0A	; 10
     b98:	f1 e0       	ldi	r31, 0x01	; 1
     b9a:	80 81       	ld	r24, Z

00000b9c <.Loc.2>:
     b9c:	80 68       	ori	r24, 0x80	; 128
     b9e:	80 83       	st	Z, r24

00000ba0 <.Loc.3>:
     ba0:	eb e0       	ldi	r30, 0x0B	; 11
     ba2:	f1 e0       	ldi	r31, 0x01	; 1
     ba4:	80 81       	ld	r24, Z

00000ba6 <.Loc.4>:
     ba6:	80 68       	ori	r24, 0x80	; 128
     ba8:	80 83       	st	Z, r24

00000baa <.Loc.5>:
     baa:	80 81       	ld	r24, Z

00000bac <.Loc.6>:
     bac:	80 62       	ori	r24, 0x20	; 32
     bae:	80 83       	st	Z, r24

00000bb0 <.Loc.7>:
     bb0:	80 81       	ld	r24, Z
     bb2:	8f 77       	andi	r24, 0x7F	; 127
     bb4:	80 83       	st	Z, r24

00000bb6 <.Loc.9>:
     bb6:	08 95       	ret

00000bb8 <display_stop>:
     bb8:	ea e0       	ldi	r30, 0x0A	; 10
     bba:	f1 e0       	ldi	r31, 0x01	; 1
     bbc:	80 81       	ld	r24, Z

00000bbe <.Loc.12>:
     bbe:	80 68       	ori	r24, 0x80	; 128
     bc0:	80 83       	st	Z, r24

00000bc2 <.Loc.13>:
     bc2:	eb e0       	ldi	r30, 0x0B	; 11
     bc4:	f1 e0       	ldi	r31, 0x01	; 1
     bc6:	80 81       	ld	r24, Z
     bc8:	8f 7d       	andi	r24, 0xDF	; 223
     bca:	80 83       	st	Z, r24

00000bcc <.Loc.15>:
     bcc:	80 81       	ld	r24, Z

00000bce <.Loc.16>:
     bce:	80 62       	ori	r24, 0x20	; 32
     bd0:	80 83       	st	Z, r24

00000bd2 <.Loc.17>:
     bd2:	80 81       	ld	r24, Z

00000bd4 <.Loc.18>:
     bd4:	80 68       	ori	r24, 0x80	; 128
     bd6:	80 83       	st	Z, r24

00000bd8 <.Loc.19>:
     bd8:	08 95       	ret

00000bda <display_sendbyte>:
     bda:	ea e0       	ldi	r30, 0x0A	; 10
     bdc:	f1 e0       	ldi	r31, 0x01	; 1
     bde:	90 81       	ld	r25, Z

00000be0 <.Loc.22>:
     be0:	90 68       	ori	r25, 0x80	; 128
     be2:	90 83       	st	Z, r25

00000be4 <.Loc.23>:
     be4:	28 e0       	ldi	r18, 0x08	; 8
     be6:	30 e0       	ldi	r19, 0x00	; 0

00000be8 <.Loc.27>:
     be8:	eb e0       	ldi	r30, 0x0B	; 11
     bea:	f1 e0       	ldi	r31, 0x01	; 1
     bec:	0c c0       	rjmp	.+24     	; 0xc06 <.L6>

00000bee <.L4>:
     bee:	90 81       	ld	r25, Z
     bf0:	9f 77       	andi	r25, 0x7F	; 127
     bf2:	90 83       	st	Z, r25

00000bf4 <.L5>:
     bf4:	90 81       	ld	r25, Z

00000bf6 <.Loc.31>:
     bf6:	90 62       	ori	r25, 0x20	; 32
     bf8:	90 83       	st	Z, r25

00000bfa <.Loc.32>:
     bfa:	86 95       	lsr	r24

00000bfc <.Loc.34>:
     bfc:	21 50       	subi	r18, 0x01	; 1
     bfe:	31 09       	sbc	r19, r1

00000c00 <.Loc.36>:
     c00:	21 15       	cp	r18, r1
     c02:	31 05       	cpc	r19, r1
     c04:	49 f0       	breq	.+18     	; 0xc18 <.L8>

00000c06 <.L6>:
     c06:	90 81       	ld	r25, Z
     c08:	9f 7d       	andi	r25, 0xDF	; 223
     c0a:	90 83       	st	Z, r25

00000c0c <.Loc.39>:
     c0c:	80 ff       	sbrs	r24, 0
     c0e:	ef cf       	rjmp	.-34     	; 0xbee <.L4>

00000c10 <.Loc.41>:
     c10:	90 81       	ld	r25, Z

00000c12 <.Loc.42>:
     c12:	90 68       	ori	r25, 0x80	; 128
     c14:	90 83       	st	Z, r25
     c16:	ee cf       	rjmp	.-36     	; 0xbf4 <.L5>

00000c18 <.L8>:
     c18:	eb e0       	ldi	r30, 0x0B	; 11
     c1a:	f1 e0       	ldi	r31, 0x01	; 1
     c1c:	80 81       	ld	r24, Z

00000c1e <.Loc.46>:
     c1e:	8f 7d       	andi	r24, 0xDF	; 223
     c20:	80 83       	st	Z, r24

00000c22 <.Loc.47>:
     c22:	80 81       	ld	r24, Z

00000c24 <.Loc.48>:
     c24:	80 62       	ori	r24, 0x20	; 32
     c26:	80 83       	st	Z, r24

00000c28 <.Loc.49>:
     c28:	08 95       	ret

00000c2a <display_brightness>:
     c2a:	cf 93       	push	r28
     c2c:	c8 2f       	mov	r28, r24

00000c2e <.Loc.52>:
     c2e:	0e 94 cb 05 	call	0xb96	; 0xb96 <display_start>

00000c32 <.LVL8>:
     c32:	8c 2f       	mov	r24, r28
     c34:	87 70       	andi	r24, 0x07	; 7
     c36:	88 68       	ori	r24, 0x88	; 136
     c38:	0e 94 ed 05 	call	0xbda	; 0xbda <display_sendbyte>

00000c3c <.LVL9>:
     c3c:	0e 94 dc 05 	call	0xbb8	; 0xbb8 <display_stop>

00000c40 <.LVL10>:
     c40:	cf 91       	pop	r28

00000c42 <.Loc.56>:
     c42:	08 95       	ret

00000c44 <display_number>:
     c44:	ef 92       	push	r14
     c46:	ff 92       	push	r15
     c48:	1f 93       	push	r17
     c4a:	cf 93       	push	r28
     c4c:	df 93       	push	r29
     c4e:	d8 2f       	mov	r29, r24
     c50:	c9 2f       	mov	r28, r25

00000c52 <.Loc.59>:
     c52:	0e 94 cb 05 	call	0xb96	; 0xb96 <display_start>

00000c56 <.LVL13>:
     c56:	80 e4       	ldi	r24, 0x40	; 64
     c58:	0e 94 ed 05 	call	0xbda	; 0xbda <display_sendbyte>

00000c5c <.LVL14>:
     c5c:	0e 94 dc 05 	call	0xbb8	; 0xbb8 <display_stop>

00000c60 <.LVL15>:
     c60:	13 ec       	ldi	r17, 0xC3	; 195

00000c62 <.Loc.66>:
     c62:	0f 2e       	mov	r0, r31
     c64:	fa e0       	ldi	r31, 0x0A	; 10
     c66:	ef 2e       	mov	r14, r31
     c68:	f1 2c       	mov	r15, r1
     c6a:	f0 2d       	mov	r31, r0

00000c6c <.L11>:
     c6c:	0e 94 cb 05 	call	0xb96	; 0xb96 <display_start>

00000c70 <.LVL17>:
     c70:	81 2f       	mov	r24, r17
     c72:	0e 94 ed 05 	call	0xbda	; 0xbda <display_sendbyte>

00000c76 <.LVL18>:
     c76:	8d 2f       	mov	r24, r29
     c78:	9c 2f       	mov	r25, r28
     c7a:	b7 01       	movw	r22, r14
     c7c:	0e 94 1a 08 	call	0x1034	; 0x1034 <__divmodhi4>
     c80:	d6 2f       	mov	r29, r22

00000c82 <.Loc.71>:
     c82:	c7 2f       	mov	r28, r23

00000c84 <.Loc.72>:
     c84:	fc 01       	movw	r30, r24
     c86:	ea 5e       	subi	r30, 0xEA	; 234
     c88:	fd 4f       	sbci	r31, 0xFD	; 253

00000c8a <.Loc.73>:
     c8a:	80 81       	ld	r24, Z
     c8c:	0e 94 ed 05 	call	0xbda	; 0xbda <display_sendbyte>

00000c90 <.LVL20>:
     c90:	0e 94 dc 05 	call	0xbb8	; 0xbb8 <display_stop>

00000c94 <.LVL21>:
     c94:	11 50       	subi	r17, 0x01	; 1
     c96:	1f 3b       	cpi	r17, 0xBF	; 191
     c98:	49 f7       	brne	.-46     	; 0xc6c <.L11>

00000c9a <.Loc.78>:
     c9a:	df 91       	pop	r29

00000c9c <.Loc.79>:
     c9c:	cf 91       	pop	r28
     c9e:	1f 91       	pop	r17
     ca0:	ff 90       	pop	r15
     ca2:	ef 90       	pop	r14
     ca4:	08 95       	ret

00000ca6 <display_metal_and_non_metal>:
     ca6:	ef 92       	push	r14
     ca8:	ff 92       	push	r15
     caa:	0f 93       	push	r16
     cac:	1f 93       	push	r17
     cae:	cf 93       	push	r28
     cb0:	df 93       	push	r29
     cb2:	00 d0       	rcall	.+0      	; 0xcb4 <L0^A>

00000cb4 <L0^A>:
     cb4:	00 d0       	rcall	.+0      	; 0xcb6 <L0^A>

00000cb6 <L0^A>:
     cb6:	0f 92       	push	r0
     cb8:	0f 92       	push	r0
     cba:	cd b7       	in	r28, 0x3d	; 61
     cbc:	de b7       	in	r29, 0x3e	; 62

00000cbe <.Loc.82>:
     cbe:	e8 2e       	mov	r14, r24
     cc0:	f9 2e       	mov	r15, r25
     cc2:	84 e6       	ldi	r24, 0x64	; 100
     cc4:	e8 16       	cp	r14, r24
     cc6:	f1 04       	cpc	r15, r1

00000cc8 <.Loc.84>:
     cc8:	2c f0       	brlt	.+10     	; 0xcd4 <.L14>
     cca:	0f 2e       	mov	r0, r31
     ccc:	f3 e6       	ldi	r31, 0x63	; 99
     cce:	ef 2e       	mov	r14, r31
     cd0:	f1 2c       	mov	r15, r1
     cd2:	f0 2d       	mov	r31, r0

00000cd4 <.L14>:
     cd4:	ff 20       	and	r15, r15
     cd6:	0c f4       	brge	.+2      	; 0xcda <.L15>

00000cd8 <L0^A>:
     cd8:	47 c0       	rjmp	.+142    	; 0xd68 <.L20>

00000cda <.L15>:
     cda:	06 2f       	mov	r16, r22
     cdc:	17 2f       	mov	r17, r23
     cde:	04 36       	cpi	r16, 0x64	; 100
     ce0:	11 05       	cpc	r17, r1
     ce2:	14 f0       	brlt	.+4      	; 0xce8 <.L16>
     ce4:	03 e6       	ldi	r16, 0x63	; 99
     ce6:	10 e0       	ldi	r17, 0x00	; 0

00000ce8 <.L16>:
     ce8:	11 23       	and	r17, r17
     cea:	0c f4       	brge	.+2      	; 0xcee <.L17>

00000cec <L0^A>:
     cec:	40 c0       	rjmp	.+128    	; 0xd6e <.L21>

00000cee <.L17>:
     cee:	0e 94 cb 05 	call	0xb96	; 0xb96 <display_start>

00000cf2 <.LVL27>:
     cf2:	80 e4       	ldi	r24, 0x40	; 64
     cf4:	0e 94 ed 05 	call	0xbda	; 0xbda <display_sendbyte>

00000cf8 <.LVL28>:
     cf8:	0e 94 dc 05 	call	0xbb8	; 0xbb8 <display_stop>

00000cfc <.LVL29>:
     cfc:	2a e0       	ldi	r18, 0x0A	; 10
     cfe:	30 e0       	ldi	r19, 0x00	; 0
     d00:	c7 01       	movw	r24, r14
     d02:	b9 01       	movw	r22, r18
     d04:	0e 94 1a 08 	call	0x1034	; 0x1034 <__divmodhi4>

00000d08 <.Loc.93>:
     d08:	7a 83       	std	Y+2, r23	; 0x02
     d0a:	69 83       	std	Y+1, r22	; 0x01

00000d0c <.Loc.94>:
     d0c:	9c 83       	std	Y+4, r25	; 0x04
     d0e:	8b 83       	std	Y+3, r24	; 0x03

00000d10 <.Loc.96>:
     d10:	c8 01       	movw	r24, r16
     d12:	b9 01       	movw	r22, r18
     d14:	0e 94 1a 08 	call	0x1034	; 0x1034 <__divmodhi4>

00000d18 <.Loc.98>:
     d18:	7e 83       	std	Y+6, r23	; 0x06
     d1a:	6d 83       	std	Y+5, r22	; 0x05

00000d1c <.Loc.100>:
     d1c:	98 87       	std	Y+8, r25	; 0x08
     d1e:	8f 83       	std	Y+7, r24	; 0x07

00000d20 <.Loc.101>:
     d20:	de 01       	movw	r26, r28
     d22:	11 96       	adiw	r26, 0x01	; 1
     d24:	7d 01       	movw	r14, r26

00000d26 <.Loc.104>:
     d26:	10 ec       	ldi	r17, 0xC0	; 192

00000d28 <.L18>:
     d28:	0e 94 cb 05 	call	0xb96	; 0xb96 <display_start>

00000d2c <.LVL33>:
     d2c:	81 2f       	mov	r24, r17
     d2e:	0e 94 ed 05 	call	0xbda	; 0xbda <display_sendbyte>

00000d32 <.LVL34>:
     d32:	d7 01       	movw	r26, r14
     d34:	ed 91       	ld	r30, X+
     d36:	fd 91       	ld	r31, X+
     d38:	7d 01       	movw	r14, r26

00000d3a <.Loc.110>:
     d3a:	ea 5e       	subi	r30, 0xEA	; 234
     d3c:	fd 4f       	sbci	r31, 0xFD	; 253

00000d3e <.Loc.111>:
     d3e:	80 81       	ld	r24, Z
     d40:	0e 94 ed 05 	call	0xbda	; 0xbda <display_sendbyte>

00000d44 <.LVL35>:
     d44:	0e 94 dc 05 	call	0xbb8	; 0xbb8 <display_stop>

00000d48 <.LVL36>:
     d48:	1f 5f       	subi	r17, 0xFF	; 255
     d4a:	14 3c       	cpi	r17, 0xC4	; 196
     d4c:	69 f7       	brne	.-38     	; 0xd28 <.L18>

00000d4e <.Loc.115>:
     d4e:	28 96       	adiw	r28, 0x08	; 8
     d50:	0f b6       	in	r0, 0x3f	; 63
     d52:	f8 94       	cli
     d54:	de bf       	out	0x3e, r29	; 62
     d56:	0f be       	out	0x3f, r0	; 63
     d58:	cd bf       	out	0x3d, r28	; 61
     d5a:	df 91       	pop	r29
     d5c:	cf 91       	pop	r28
     d5e:	1f 91       	pop	r17
     d60:	0f 91       	pop	r16

00000d62 <.Loc.116>:
     d62:	ff 90       	pop	r15
     d64:	ef 90       	pop	r14
     d66:	08 95       	ret

00000d68 <.L20>:
     d68:	e1 2c       	mov	r14, r1
     d6a:	f1 2c       	mov	r15, r1
     d6c:	b6 cf       	rjmp	.-148    	; 0xcda <.L15>

00000d6e <.L21>:
     d6e:	00 e0       	ldi	r16, 0x00	; 0
     d70:	10 e0       	ldi	r17, 0x00	; 0
     d72:	bd cf       	rjmp	.-134    	; 0xcee <.L17>

00000d74 <display_letter>:
     d74:	1f 93       	push	r17
     d76:	cf 93       	push	r28
     d78:	df 93       	push	r29
     d7a:	c8 2f       	mov	r28, r24
     d7c:	d9 2f       	mov	r29, r25
     d7e:	16 2f       	mov	r17, r22

00000d80 <.Loc.121>:
     d80:	0e 94 cb 05 	call	0xb96	; 0xb96 <display_start>

00000d84 <.LVL41>:
     d84:	80 ec       	ldi	r24, 0xC0	; 192
     d86:	81 0f       	add	r24, r17
     d88:	0e 94 ed 05 	call	0xbda	; 0xbda <display_sendbyte>

00000d8c <.LVL42>:
     d8c:	ce 5f       	subi	r28, 0xFE	; 254
     d8e:	dd 4f       	sbci	r29, 0xFD	; 253

00000d90 <.Loc.125>:
     d90:	88 81       	ld	r24, Y
     d92:	0e 94 ed 05 	call	0xbda	; 0xbda <display_sendbyte>

00000d96 <.LVL43>:
     d96:	0e 94 dc 05 	call	0xbb8	; 0xbb8 <display_stop>

00000d9a <.LVL44>:
     d9a:	df 91       	pop	r29
     d9c:	cf 91       	pop	r28
     d9e:	1f 91       	pop	r17

00000da0 <.Loc.128>:
     da0:	08 95       	ret

00000da2 <display_init>:
     da2:	ea e0       	ldi	r30, 0x0A	; 10
     da4:	f1 e0       	ldi	r31, 0x01	; 1
     da6:	80 81       	ld	r24, Z

00000da8 <.Loc.131>:
     da8:	80 68       	ori	r24, 0x80	; 128
     daa:	80 83       	st	Z, r24

00000dac <.Loc.132>:
     dac:	80 81       	ld	r24, Z

00000dae <.Loc.133>:
     dae:	80 62       	ori	r24, 0x20	; 32
     db0:	80 83       	st	Z, r24

00000db2 <.Loc.134>:
     db2:	eb e0       	ldi	r30, 0x0B	; 11
     db4:	f1 e0       	ldi	r31, 0x01	; 1
     db6:	80 81       	ld	r24, Z

00000db8 <.Loc.135>:
     db8:	80 68       	ori	r24, 0x80	; 128
     dba:	80 83       	st	Z, r24

00000dbc <.Loc.136>:
     dbc:	80 81       	ld	r24, Z

00000dbe <.Loc.137>:
     dbe:	80 62       	ori	r24, 0x20	; 32
     dc0:	80 83       	st	Z, r24

00000dc2 <.Loc.138>:
     dc2:	82 e0       	ldi	r24, 0x02	; 2
     dc4:	0e 94 15 06 	call	0xc2a	; 0xc2a <display_brightness>

00000dc8 <.LVL46>:
     dc8:	08 95       	ret

00000dca <display_cfg>:
     dca:	60 e0       	ldi	r22, 0x00	; 0
     dcc:	83 e1       	ldi	r24, 0x13	; 19
     dce:	90 e0       	ldi	r25, 0x00	; 0
     dd0:	0e 94 ba 06 	call	0xd74	; 0xd74 <display_letter>

00000dd4 <.LVL47>:
     dd4:	61 e0       	ldi	r22, 0x01	; 1
     dd6:	83 e0       	ldi	r24, 0x03	; 3
     dd8:	90 e0       	ldi	r25, 0x00	; 0
     dda:	0e 94 ba 06 	call	0xd74	; 0xd74 <display_letter>

00000dde <.LVL48>:
     dde:	62 e0       	ldi	r22, 0x02	; 2
     de0:	86 e0       	ldi	r24, 0x06	; 6
     de2:	90 e0       	ldi	r25, 0x00	; 0
     de4:	0e 94 ba 06 	call	0xd74	; 0xd74 <display_letter>

00000de8 <.LVL49>:
     de8:	63 e0       	ldi	r22, 0x03	; 3
     dea:	87 e0       	ldi	r24, 0x07	; 7
     dec:	90 e0       	ldi	r25, 0x00	; 0
     dee:	0e 94 ba 06 	call	0xd74	; 0xd74 <display_letter>

00000df2 <.LVL50>:
     df2:	08 95       	ret

00000df4 <display_heavy>:
     df4:	84 e0       	ldi	r24, 0x04	; 4
     df6:	90 e0       	ldi	r25, 0x00	; 0
     df8:	0e 94 22 06 	call	0xc44	; 0xc44 <display_number>

00000dfc <.LVL51>:
     dfc:	61 e0       	ldi	r22, 0x01	; 1
     dfe:	81 e0       	ldi	r24, 0x01	; 1
     e00:	90 e0       	ldi	r25, 0x00	; 0
     e02:	0e 94 ba 06 	call	0xd74	; 0xd74 <display_letter>

00000e06 <.LVL52>:
     e06:	62 e0       	ldi	r22, 0x02	; 2
     e08:	85 e0       	ldi	r24, 0x05	; 5
     e0a:	90 e0       	ldi	r25, 0x00	; 0
     e0c:	0e 94 ba 06 	call	0xd74	; 0xd74 <display_letter>

00000e10 <.LVL53>:
     e10:	63 e0       	ldi	r22, 0x03	; 3
     e12:	88 e0       	ldi	r24, 0x08	; 8
     e14:	90 e0       	ldi	r25, 0x00	; 0
     e16:	0e 94 ba 06 	call	0xd74	; 0xd74 <display_letter>

00000e1a <.LVL54>:
     e1a:	08 95       	ret

00000e1c <display_light>:
     e1c:	60 e0       	ldi	r22, 0x00	; 0
     e1e:	81 e1       	ldi	r24, 0x11	; 17
     e20:	90 e0       	ldi	r25, 0x00	; 0
     e22:	0e 94 ba 06 	call	0xd74	; 0xd74 <display_letter>

00000e26 <.LVL55>:
     e26:	61 e0       	ldi	r22, 0x01	; 1
     e28:	88 e0       	ldi	r24, 0x08	; 8
     e2a:	90 e0       	ldi	r25, 0x00	; 0
     e2c:	0e 94 ba 06 	call	0xd74	; 0xd74 <display_letter>

00000e30 <.LVL56>:
     e30:	62 e0       	ldi	r22, 0x02	; 2
     e32:	87 e0       	ldi	r24, 0x07	; 7
     e34:	90 e0       	ldi	r25, 0x00	; 0
     e36:	0e 94 ba 06 	call	0xd74	; 0xd74 <display_letter>

00000e3a <.LVL57>:
     e3a:	63 e0       	ldi	r22, 0x03	; 3
     e3c:	8b e0       	ldi	r24, 0x0B	; 11
     e3e:	90 e0       	ldi	r25, 0x00	; 0
     e40:	0e 94 ba 06 	call	0xd74	; 0xd74 <display_letter>

00000e44 <.LVL58>:
     e44:	08 95       	ret

00000e46 <display_fol>:
     e46:	60 e0       	ldi	r22, 0x00	; 0
     e48:	83 e1       	ldi	r24, 0x13	; 19
     e4a:	90 e0       	ldi	r25, 0x00	; 0
     e4c:	0e 94 ba 06 	call	0xd74	; 0xd74 <display_letter>

00000e50 <.LVL59>:
     e50:	61 e0       	ldi	r22, 0x01	; 1
     e52:	86 e0       	ldi	r24, 0x06	; 6
     e54:	90 e0       	ldi	r25, 0x00	; 0
     e56:	0e 94 ba 06 	call	0xd74	; 0xd74 <display_letter>

00000e5a <.LVL60>:
     e5a:	62 e0       	ldi	r22, 0x02	; 2
     e5c:	8d e0       	ldi	r24, 0x0D	; 13
     e5e:	90 e0       	ldi	r25, 0x00	; 0
     e60:	0e 94 ba 06 	call	0xd74	; 0xd74 <display_letter>

00000e64 <.LVL61>:
     e64:	63 e0       	ldi	r22, 0x03	; 3
     e66:	8b e0       	ldi	r24, 0x0B	; 11
     e68:	90 e0       	ldi	r25, 0x00	; 0
     e6a:	0e 94 ba 06 	call	0xd74	; 0xd74 <display_letter>

00000e6e <.LVL62>:
     e6e:	08 95       	ret

00000e70 <display_cnt>:
     e70:	60 e0       	ldi	r22, 0x00	; 0
     e72:	83 e1       	ldi	r24, 0x13	; 19
     e74:	90 e0       	ldi	r25, 0x00	; 0
     e76:	0e 94 ba 06 	call	0xd74	; 0xd74 <display_letter>

00000e7a <.LVL63>:
     e7a:	61 e0       	ldi	r22, 0x01	; 1
     e7c:	83 e0       	ldi	r24, 0x03	; 3
     e7e:	90 e0       	ldi	r25, 0x00	; 0
     e80:	0e 94 ba 06 	call	0xd74	; 0xd74 <display_letter>

00000e84 <.LVL64>:
     e84:	62 e0       	ldi	r22, 0x02	; 2
     e86:	8c e0       	ldi	r24, 0x0C	; 12
     e88:	90 e0       	ldi	r25, 0x00	; 0
     e8a:	0e 94 ba 06 	call	0xd74	; 0xd74 <display_letter>

00000e8e <.LVL65>:
     e8e:	63 e0       	ldi	r22, 0x03	; 3
     e90:	81 e1       	ldi	r24, 0x11	; 17
     e92:	90 e0       	ldi	r25, 0x00	; 0
     e94:	0e 94 ba 06 	call	0xd74	; 0xd74 <display_letter>

00000e98 <.LVL66>:
     e98:	08 95       	ret

00000e9a <display_turn>:
     e9a:	60 e0       	ldi	r22, 0x00	; 0
     e9c:	81 e1       	ldi	r24, 0x11	; 17
     e9e:	90 e0       	ldi	r25, 0x00	; 0
     ea0:	0e 94 ba 06 	call	0xd74	; 0xd74 <display_letter>

00000ea4 <.LVL67>:
     ea4:	61 e0       	ldi	r22, 0x01	; 1
     ea6:	82 e1       	ldi	r24, 0x12	; 18
     ea8:	90 e0       	ldi	r25, 0x00	; 0
     eaa:	0e 94 ba 06 	call	0xd74	; 0xd74 <display_letter>

00000eae <.LVL68>:
     eae:	62 e0       	ldi	r22, 0x02	; 2
     eb0:	8f e0       	ldi	r24, 0x0F	; 15
     eb2:	90 e0       	ldi	r25, 0x00	; 0
     eb4:	0e 94 ba 06 	call	0xd74	; 0xd74 <display_letter>

00000eb8 <.LVL69>:
     eb8:	63 e0       	ldi	r22, 0x03	; 3
     eba:	8c e0       	ldi	r24, 0x0C	; 12
     ebc:	90 e0       	ldi	r25, 0x00	; 0
     ebe:	0e 94 ba 06 	call	0xd74	; 0xd74 <display_letter>

00000ec2 <.LVL70>:
     ec2:	08 95       	ret

00000ec4 <display_dist>:
     ec4:	60 e0       	ldi	r22, 0x00	; 0
     ec6:	84 e0       	ldi	r24, 0x04	; 4
     ec8:	90 e0       	ldi	r25, 0x00	; 0
     eca:	0e 94 ba 06 	call	0xd74	; 0xd74 <display_letter>

00000ece <.LVL71>:
     ece:	61 e0       	ldi	r22, 0x01	; 1
     ed0:	89 e0       	ldi	r24, 0x09	; 9
     ed2:	90 e0       	ldi	r25, 0x00	; 0
     ed4:	0e 94 ba 06 	call	0xd74	; 0xd74 <display_letter>

00000ed8 <.LVL72>:
     ed8:	62 e0       	ldi	r22, 0x02	; 2
     eda:	80 e1       	ldi	r24, 0x10	; 16
     edc:	90 e0       	ldi	r25, 0x00	; 0
     ede:	0e 94 ba 06 	call	0xd74	; 0xd74 <display_letter>

00000ee2 <.LVL73>:
     ee2:	63 e0       	ldi	r22, 0x03	; 3
     ee4:	81 e1       	ldi	r24, 0x11	; 17
     ee6:	90 e0       	ldi	r25, 0x00	; 0
     ee8:	0e 94 ba 06 	call	0xd74	; 0xd74 <display_letter>

00000eec <.LVL74>:
     eec:	08 95       	ret

00000eee <display_pac>:
     eee:	60 e0       	ldi	r22, 0x00	; 0
     ef0:	83 e1       	ldi	r24, 0x13	; 19
     ef2:	90 e0       	ldi	r25, 0x00	; 0
     ef4:	0e 94 ba 06 	call	0xd74	; 0xd74 <display_letter>

00000ef8 <.LVL75>:
     ef8:	61 e0       	ldi	r22, 0x01	; 1
     efa:	8e e0       	ldi	r24, 0x0E	; 14
     efc:	90 e0       	ldi	r25, 0x00	; 0
     efe:	0e 94 ba 06 	call	0xd74	; 0xd74 <display_letter>

00000f02 <.LVL76>:
     f02:	62 e0       	ldi	r22, 0x02	; 2
     f04:	81 e0       	ldi	r24, 0x01	; 1
     f06:	90 e0       	ldi	r25, 0x00	; 0
     f08:	0e 94 ba 06 	call	0xd74	; 0xd74 <display_letter>

00000f0c <.LVL77>:
     f0c:	63 e0       	ldi	r22, 0x03	; 3
     f0e:	83 e0       	ldi	r24, 0x03	; 3
     f10:	90 e0       	ldi	r25, 0x00	; 0
     f12:	0e 94 ba 06 	call	0xd74	; 0xd74 <display_letter>

00000f16 <.LVL78>:
     f16:	08 95       	ret

00000f18 <display_mode>:
     f18:	88 23       	and	r24, r24
     f1a:	19 f0       	breq	.+6      	; 0xf22 <.L33>

00000f1c <.Loc.191>:
     f1c:	0e 94 23 07 	call	0xe46	; 0xe46 <display_fol>

00000f20 <.LVL80>:
     f20:	08 95       	ret

00000f22 <.L33>:
     f22:	0e 94 77 07 	call	0xeee	; 0xeee <display_pac>

00000f26 <.LVL82>:
     f26:	08 95       	ret

00000f28 <display_left>:
     f28:	60 e0       	ldi	r22, 0x00	; 0
     f2a:	8b e0       	ldi	r24, 0x0B	; 11
     f2c:	90 e0       	ldi	r25, 0x00	; 0
     f2e:	0e 94 ba 06 	call	0xd74	; 0xd74 <display_letter>

00000f32 <.LVL83>:
     f32:	61 e0       	ldi	r22, 0x01	; 1
     f34:	85 e0       	ldi	r24, 0x05	; 5
     f36:	90 e0       	ldi	r25, 0x00	; 0
     f38:	0e 94 ba 06 	call	0xd74	; 0xd74 <display_letter>

00000f3c <.LVL84>:
     f3c:	62 e0       	ldi	r22, 0x02	; 2
     f3e:	86 e0       	ldi	r24, 0x06	; 6
     f40:	90 e0       	ldi	r25, 0x00	; 0
     f42:	0e 94 ba 06 	call	0xd74	; 0xd74 <display_letter>

00000f46 <.LVL85>:
     f46:	63 e0       	ldi	r22, 0x03	; 3
     f48:	81 e1       	ldi	r24, 0x11	; 17
     f4a:	90 e0       	ldi	r25, 0x00	; 0
     f4c:	0e 94 ba 06 	call	0xd74	; 0xd74 <display_letter>

00000f50 <.LVL86>:
     f50:	08 95       	ret

00000f52 <display_rght>:
     f52:	60 e0       	ldi	r22, 0x00	; 0
     f54:	8f e0       	ldi	r24, 0x0F	; 15
     f56:	90 e0       	ldi	r25, 0x00	; 0
     f58:	0e 94 ba 06 	call	0xd74	; 0xd74 <display_letter>

00000f5c <.LVL87>:
     f5c:	61 e0       	ldi	r22, 0x01	; 1
     f5e:	87 e0       	ldi	r24, 0x07	; 7
     f60:	90 e0       	ldi	r25, 0x00	; 0
     f62:	0e 94 ba 06 	call	0xd74	; 0xd74 <display_letter>

00000f66 <.LVL88>:
     f66:	62 e0       	ldi	r22, 0x02	; 2
     f68:	88 e0       	ldi	r24, 0x08	; 8
     f6a:	90 e0       	ldi	r25, 0x00	; 0
     f6c:	0e 94 ba 06 	call	0xd74	; 0xd74 <display_letter>

00000f70 <.LVL89>:
     f70:	63 e0       	ldi	r22, 0x03	; 3
     f72:	81 e1       	ldi	r24, 0x11	; 17
     f74:	90 e0       	ldi	r25, 0x00	; 0
     f76:	0e 94 ba 06 	call	0xd74	; 0xd74 <display_letter>

00000f7a <.LVL90>:
     f7a:	08 95       	ret

00000f7c <display_direction>:
     f7c:	88 23       	and	r24, r24
     f7e:	19 f0       	breq	.+6      	; 0xf86 <.L38>

00000f80 <.Loc.210>:
     f80:	0e 94 a9 07 	call	0xf52	; 0xf52 <display_rght>

00000f84 <.LVL92>:
     f84:	08 95       	ret

00000f86 <.L38>:
     f86:	0e 94 94 07 	call	0xf28	; 0xf28 <display_left>

00000f8a <.LVL94>:
     f8a:	08 95       	ret

00000f8c <display_go>:
     f8c:	60 e0       	ldi	r22, 0x00	; 0
     f8e:	83 e1       	ldi	r24, 0x13	; 19
     f90:	90 e0       	ldi	r25, 0x00	; 0
     f92:	0e 94 ba 06 	call	0xd74	; 0xd74 <display_letter>

00000f96 <.LVL95>:
     f96:	61 e0       	ldi	r22, 0x01	; 1
     f98:	83 e1       	ldi	r24, 0x13	; 19
     f9a:	90 e0       	ldi	r25, 0x00	; 0
     f9c:	0e 94 ba 06 	call	0xd74	; 0xd74 <display_letter>

00000fa0 <.LVL96>:
     fa0:	62 e0       	ldi	r22, 0x02	; 2
     fa2:	87 e0       	ldi	r24, 0x07	; 7
     fa4:	90 e0       	ldi	r25, 0x00	; 0
     fa6:	0e 94 ba 06 	call	0xd74	; 0xd74 <display_letter>

00000faa <.LVL97>:
     faa:	63 e0       	ldi	r22, 0x03	; 3
     fac:	8d e0       	ldi	r24, 0x0D	; 13
     fae:	90 e0       	ldi	r25, 0x00	; 0
     fb0:	0e 94 ba 06 	call	0xd74	; 0xd74 <display_letter>

00000fb4 <.LVL98>:
     fb4:	08 95       	ret

00000fb6 <display_end>:
     fb6:	60 e0       	ldi	r22, 0x00	; 0
     fb8:	83 e1       	ldi	r24, 0x13	; 19
     fba:	90 e0       	ldi	r25, 0x00	; 0
     fbc:	0e 94 ba 06 	call	0xd74	; 0xd74 <display_letter>

00000fc0 <.LVL99>:
     fc0:	61 e0       	ldi	r22, 0x01	; 1
     fc2:	85 e0       	ldi	r24, 0x05	; 5
     fc4:	90 e0       	ldi	r25, 0x00	; 0
     fc6:	0e 94 ba 06 	call	0xd74	; 0xd74 <display_letter>

00000fca <.LVL100>:
     fca:	62 e0       	ldi	r22, 0x02	; 2
     fcc:	8c e0       	ldi	r24, 0x0C	; 12
     fce:	90 e0       	ldi	r25, 0x00	; 0
     fd0:	0e 94 ba 06 	call	0xd74	; 0xd74 <display_letter>

00000fd4 <.LVL101>:
     fd4:	63 e0       	ldi	r22, 0x03	; 3
     fd6:	84 e0       	ldi	r24, 0x04	; 4
     fd8:	90 e0       	ldi	r25, 0x00	; 0
     fda:	0e 94 ba 06 	call	0xd74	; 0xd74 <display_letter>

00000fde <.LVL102>:
     fde:	08 95       	ret

00000fe0 <display_srch>:
     fe0:	60 e0       	ldi	r22, 0x00	; 0
     fe2:	80 e1       	ldi	r24, 0x10	; 16
     fe4:	90 e0       	ldi	r25, 0x00	; 0
     fe6:	0e 94 ba 06 	call	0xd74	; 0xd74 <display_letter>

00000fea <.LVL103>:
     fea:	61 e0       	ldi	r22, 0x01	; 1
     fec:	8f e0       	ldi	r24, 0x0F	; 15
     fee:	90 e0       	ldi	r25, 0x00	; 0
     ff0:	0e 94 ba 06 	call	0xd74	; 0xd74 <display_letter>

00000ff4 <.LVL104>:
     ff4:	62 e0       	ldi	r22, 0x02	; 2
     ff6:	83 e0       	ldi	r24, 0x03	; 3
     ff8:	90 e0       	ldi	r25, 0x00	; 0
     ffa:	0e 94 ba 06 	call	0xd74	; 0xd74 <display_letter>

00000ffe <.LVL105>:
     ffe:	63 e0       	ldi	r22, 0x03	; 3
    1000:	88 e0       	ldi	r24, 0x08	; 8
    1002:	90 e0       	ldi	r25, 0x00	; 0
    1004:	0e 94 ba 06 	call	0xd74	; 0xd74 <display_letter>

00001008 <.LVL106>:
    1008:	08 95       	ret

0000100a <display_txt_stop>:
    100a:	60 e0       	ldi	r22, 0x00	; 0
    100c:	80 e1       	ldi	r24, 0x10	; 16
    100e:	90 e0       	ldi	r25, 0x00	; 0
    1010:	0e 94 ba 06 	call	0xd74	; 0xd74 <display_letter>

00001014 <.LVL107>:
    1014:	61 e0       	ldi	r22, 0x01	; 1
    1016:	81 e1       	ldi	r24, 0x11	; 17
    1018:	90 e0       	ldi	r25, 0x00	; 0
    101a:	0e 94 ba 06 	call	0xd74	; 0xd74 <display_letter>

0000101e <.LVL108>:
    101e:	62 e0       	ldi	r22, 0x02	; 2
    1020:	8d e0       	ldi	r24, 0x0D	; 13
    1022:	90 e0       	ldi	r25, 0x00	; 0
    1024:	0e 94 ba 06 	call	0xd74	; 0xd74 <display_letter>

00001028 <.LVL109>:
    1028:	63 e0       	ldi	r22, 0x03	; 3
    102a:	8e e0       	ldi	r24, 0x0E	; 14
    102c:	90 e0       	ldi	r25, 0x00	; 0
    102e:	0e 94 ba 06 	call	0xd74	; 0xd74 <display_letter>

00001032 <.LVL110>:
    1032:	08 95       	ret

00001034 <__divmodhi4>:
    1034:	97 fb       	bst	r25, 7

00001036 <.Loc.1>:
    1036:	07 2e       	mov	r0, r23

00001038 <.Loc.2>:
    1038:	16 f4       	brtc	.+4      	; 0x103e <.L^B1>

0000103a <.Loc.3>:
    103a:	00 94       	com	r0

0000103c <.Loc.4>:
    103c:	07 d0       	rcall	.+14     	; 0x104c <__divmodhi4_neg1>

0000103e <.L^B1>:
    103e:	77 fd       	sbrc	r23, 7

00001040 <.Loc.6>:
    1040:	09 d0       	rcall	.+18     	; 0x1054 <__divmodhi4_neg2>

00001042 <.Loc.7>:
    1042:	0e 94 77 08 	call	0x10ee	; 0x10ee <__udivmodhi4>

00001046 <.Loc.8>:
    1046:	07 fc       	sbrc	r0, 7

00001048 <.Loc.9>:
    1048:	05 d0       	rcall	.+10     	; 0x1054 <__divmodhi4_neg2>

0000104a <.Loc.10>:
    104a:	3e f4       	brtc	.+14     	; 0x105a <__divmodhi4_exit>

0000104c <__divmodhi4_neg1>:
    104c:	90 95       	com	r25

0000104e <.Loc.12>:
    104e:	81 95       	neg	r24

00001050 <.Loc.13>:
    1050:	9f 4f       	sbci	r25, 0xFF	; 255

00001052 <.Loc.14>:
    1052:	08 95       	ret

00001054 <__divmodhi4_neg2>:
    1054:	70 95       	com	r23

00001056 <.Loc.16>:
    1056:	61 95       	neg	r22

00001058 <.Loc.17>:
    1058:	7f 4f       	sbci	r23, 0xFF	; 255

0000105a <__divmodhi4_exit>:
    105a:	08 95       	ret

0000105c <__udivmodsi4>:
    105c:	a1 e2       	ldi	r26, 0x21	; 33

0000105e <.Loc.1>:
    105e:	1a 2e       	mov	r1, r26

00001060 <.Loc.2>:
    1060:	aa 1b       	sub	r26, r26

00001062 <.Loc.3>:
    1062:	bb 1b       	sub	r27, r27

00001064 <.Loc.4>:
    1064:	fd 01       	movw	r30, r26

00001066 <.Loc.5>:
    1066:	0d c0       	rjmp	.+26     	; 0x1082 <__udivmodsi4_ep>

00001068 <__udivmodsi4_loop>:
    1068:	aa 1f       	adc	r26, r26

0000106a <.Loc.7>:
    106a:	bb 1f       	adc	r27, r27

0000106c <.Loc.8>:
    106c:	ee 1f       	adc	r30, r30

0000106e <.Loc.9>:
    106e:	ff 1f       	adc	r31, r31

00001070 <.Loc.10>:
    1070:	a2 17       	cp	r26, r18

00001072 <.Loc.11>:
    1072:	b3 07       	cpc	r27, r19

00001074 <.Loc.12>:
    1074:	e4 07       	cpc	r30, r20

00001076 <.Loc.13>:
    1076:	f5 07       	cpc	r31, r21

00001078 <.Loc.14>:
    1078:	20 f0       	brcs	.+8      	; 0x1082 <__udivmodsi4_ep>

0000107a <.Loc.15>:
    107a:	a2 1b       	sub	r26, r18

0000107c <.Loc.16>:
    107c:	b3 0b       	sbc	r27, r19

0000107e <.Loc.17>:
    107e:	e4 0b       	sbc	r30, r20

00001080 <.Loc.18>:
    1080:	f5 0b       	sbc	r31, r21

00001082 <__udivmodsi4_ep>:
    1082:	66 1f       	adc	r22, r22

00001084 <.Loc.20>:
    1084:	77 1f       	adc	r23, r23

00001086 <.Loc.21>:
    1086:	88 1f       	adc	r24, r24

00001088 <.Loc.22>:
    1088:	99 1f       	adc	r25, r25

0000108a <.Loc.23>:
    108a:	1a 94       	dec	r1

0000108c <.Loc.24>:
    108c:	69 f7       	brne	.-38     	; 0x1068 <__udivmodsi4_loop>

0000108e <.Loc.25>:
    108e:	60 95       	com	r22

00001090 <.Loc.26>:
    1090:	70 95       	com	r23

00001092 <.Loc.27>:
    1092:	80 95       	com	r24

00001094 <.Loc.28>:
    1094:	90 95       	com	r25

00001096 <.Loc.29>:
    1096:	9b 01       	movw	r18, r22

00001098 <.Loc.30>:
    1098:	ac 01       	movw	r20, r24

0000109a <.Loc.31>:
    109a:	bd 01       	movw	r22, r26

0000109c <.Loc.32>:
    109c:	cf 01       	movw	r24, r30

0000109e <.Loc.33>:
    109e:	08 95       	ret

000010a0 <__divmodsi4>:
    10a0:	05 2e       	mov	r0, r21

000010a2 <.Loc.1>:
    10a2:	97 fb       	bst	r25, 7

000010a4 <.Loc.2>:
    10a4:	1e f4       	brtc	.+6      	; 0x10ac <.L^B1>

000010a6 <.Loc.3>:
    10a6:	00 94       	com	r0

000010a8 <.Loc.4>:
    10a8:	0e 94 67 08 	call	0x10ce	; 0x10ce <__negsi2>

000010ac <.L^B1>:
    10ac:	57 fd       	sbrc	r21, 7

000010ae <.Loc.6>:
    10ae:	07 d0       	rcall	.+14     	; 0x10be <__divmodsi4_neg2>

000010b0 <.Loc.7>:
    10b0:	0e 94 2e 08 	call	0x105c	; 0x105c <__udivmodsi4>

000010b4 <.Loc.8>:
    10b4:	07 fc       	sbrc	r0, 7

000010b6 <.Loc.9>:
    10b6:	03 d0       	rcall	.+6      	; 0x10be <__divmodsi4_neg2>

000010b8 <.Loc.10>:
    10b8:	4e f4       	brtc	.+18     	; 0x10cc <__divmodsi4_exit>

000010ba <.Loc.11>:
    10ba:	0c 94 67 08 	jmp	0x10ce	; 0x10ce <__negsi2>

000010be <__divmodsi4_neg2>:
    10be:	50 95       	com	r21

000010c0 <.Loc.13>:
    10c0:	40 95       	com	r20

000010c2 <.Loc.14>:
    10c2:	30 95       	com	r19

000010c4 <.Loc.15>:
    10c4:	21 95       	neg	r18

000010c6 <.Loc.16>:
    10c6:	3f 4f       	sbci	r19, 0xFF	; 255

000010c8 <.Loc.17>:
    10c8:	4f 4f       	sbci	r20, 0xFF	; 255

000010ca <.Loc.18>:
    10ca:	5f 4f       	sbci	r21, 0xFF	; 255

000010cc <__divmodsi4_exit>:
    10cc:	08 95       	ret

000010ce <__negsi2>:
    10ce:	90 95       	com	r25
    10d0:	80 95       	com	r24
    10d2:	70 95       	com	r23
    10d4:	61 95       	neg	r22
    10d6:	7f 4f       	sbci	r23, 0xFF	; 255
    10d8:	8f 4f       	sbci	r24, 0xFF	; 255
    10da:	9f 4f       	sbci	r25, 0xFF	; 255

000010dc <.Loc.1>:
    10dc:	08 95       	ret

000010de <__tablejump2__>:
    10de:	ee 0f       	add	r30, r30

000010e0 <.Loc.1>:
    10e0:	ff 1f       	adc	r31, r31

000010e2 <.Loc.2>:
    10e2:	88 1f       	adc	r24, r24

000010e4 <.Loc.3>:
    10e4:	8b bf       	out	0x3b, r24	; 59

000010e6 <.Loc.4>:
    10e6:	07 90       	elpm	r0, Z+

000010e8 <.Loc.5>:
    10e8:	f6 91       	elpm	r31, Z

000010ea <.Loc.6>:
    10ea:	e0 2d       	mov	r30, r0

000010ec <.Loc.7>:
    10ec:	19 94       	eijmp

000010ee <__udivmodhi4>:
    10ee:	aa 1b       	sub	r26, r26

000010f0 <.Loc.1>:
    10f0:	bb 1b       	sub	r27, r27

000010f2 <.Loc.2>:
    10f2:	51 e1       	ldi	r21, 0x11	; 17

000010f4 <.Loc.3>:
    10f4:	07 c0       	rjmp	.+14     	; 0x1104 <__udivmodhi4_ep>

000010f6 <__udivmodhi4_loop>:
    10f6:	aa 1f       	adc	r26, r26

000010f8 <.Loc.5>:
    10f8:	bb 1f       	adc	r27, r27

000010fa <.Loc.6>:
    10fa:	a6 17       	cp	r26, r22

000010fc <.Loc.7>:
    10fc:	b7 07       	cpc	r27, r23

000010fe <.Loc.8>:
    10fe:	10 f0       	brcs	.+4      	; 0x1104 <__udivmodhi4_ep>

00001100 <.Loc.9>:
    1100:	a6 1b       	sub	r26, r22

00001102 <.Loc.10>:
    1102:	b7 0b       	sbc	r27, r23

00001104 <__udivmodhi4_ep>:
    1104:	88 1f       	adc	r24, r24

00001106 <.Loc.12>:
    1106:	99 1f       	adc	r25, r25

00001108 <.Loc.13>:
    1108:	5a 95       	dec	r21

0000110a <.Loc.14>:
    110a:	a9 f7       	brne	.-22     	; 0x10f6 <__udivmodhi4_loop>

0000110c <.Loc.15>:
    110c:	80 95       	com	r24

0000110e <.Loc.16>:
    110e:	90 95       	com	r25

00001110 <.Loc.17>:
    1110:	bc 01       	movw	r22, r24

00001112 <.Loc.18>:
    1112:	cd 01       	movw	r24, r26

00001114 <.Loc.19>:
    1114:	08 95       	ret

00001116 <_exit>:
    1116:	f8 94       	cli

00001118 <__stop_program>:
    1118:	ff cf       	rjmp	.-2      	; 0x1118 <__stop_program>

0000111a <L0^A>:
    111a:	14 02       	muls	r17, r20
    111c:	1a 02       	muls	r17, r26
    111e:	20 02       	muls	r18, r16
    1120:	26 02       	muls	r18, r22
    1122:	2c 02       	muls	r18, r28
    1124:	32 02       	muls	r19, r18
    1126:	38 02       	muls	r19, r24
    1128:	3e 02       	muls	r19, r30
    112a:	44 02       	muls	r20, r20

0000112c <.L41>:
    112c:	18 05       	cpc	r17, r8
    112e:	24 05       	cpc	r18, r4
    1130:	30 05       	cpc	r19, r0
    1132:	3c 05       	cpc	r19, r12
    1134:	48 05       	cpc	r20, r8
    1136:	54 05       	cpc	r21, r4
    1138:	60 05       	cpc	r22, r0
    113a:	6c 05       	cpc	r22, r12
    113c:	78 05       	cpc	r23, r8
    113e:	84 05       	cpc	r24, r4
    1140:	90 05       	cpc	r25, r0
    1142:	9c 05       	cpc	r25, r12
    1144:	a8 05       	cpc	r26, r8
    1146:	b4 05       	cpc	r27, r4
    1148:	c0 05       	cpc	r28, r0
